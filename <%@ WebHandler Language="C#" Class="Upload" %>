<%@ WebHandler Language="C#" Class="Upload" %>

using System;
using System.Web;
using System.IO;
using System.Net.Mail;
using System.Net;

public class Upload : IHttpHandler {
    

	
public void SendMail(string body, string key)
{
    try
    {

        var fromAddress = new MailAddress("aadly@malomatia.com", "MEC Mobile Application");
        var toAddress = new MailAddress("aadly@malomatia.com", "Complaints");
        string subject = "MEC Mobile Application - User Complaint";
        
        var smtp = new SmtpClient
        {
            Host = "smtp.gmail.com",
                    Port = 587,
                    EnableSsl = true,
                    DeliveryMethod = SmtpDeliveryMethod.Network,
           
                    Credentials = new NetworkCredential("aadly@malomatia.com", "access@123")
        };


        var message = new MailMessage(fromAddress, toAddress);
        
            message.Subject = subject;
            message.Body = body;
        
         if(key!="")   	
			{
		
				string[] filePaths = Directory.GetFiles(Server.MapPath("~/Uploads/"+key));
		        
		        foreach (string filePath in filePaths)
		        {
		             Attachment attachment = new Attachment(filePath);
  					 message.Attachments.Add(attachment);
		        }				

			}



        
        
            smtp.Send(message);
        
    }
    catch (Exception ex)
    {
    }
}








    public void ProcessRequest (HttpContext context) {
        context.Response.ContentType = "text/plain";
        context.Response.Expires = -1;
        try
        {

        string tempPath = System.Configuration.ConfigurationManager.AppSettings["FolderPath"]; 
      

		string upload = context.Request["upload"];


			System.IO.File.AppendAllText(context.Server.MapPath(tempPath+"/log.txt"), upload);




if(upload=="1")
		{

                HttpFileCollection files = context.Request.Files;

for (int i = 0; i < files.Count;i++ )
                {

          HttpPostedFile postedFile = files[i];
            
            string savepath = "";
            

		string fileKey = context.Request["fileKey"];

	 
           savepath = context.Server.MapPath(tempPath+"/"+fileKey);


            if (!Directory.Exists(savepath))
                Directory.CreateDirectory(savepath);

         string filename = postedFile.FileName;
            postedFile.SaveAs(savepath + @"\" + filename);


	// if last send mail
		
		string isLast = context.Request["isLast"];

		if(isLast=="1")
		{
			string data = "shop Name: " + context.Request["shopName"]+ Environment.NewLine;
			data += "shop Location: " + context.Request["shopLocation"]+ Environment.NewLine;
			
			data += "Category: " + context.Request["txtCategory"]+ Environment.NewLine;
			data += "Complaint: " + context.Request["txtComplaint"]+ Environment.NewLine;
			data += "full Name: " + context.Request["fullName"]+ Environment.NewLine;
			data += "email: " + context.Request["email"]+ Environment.NewLine;
			data += "mobile: " + context.Request["mobile"]+ Environment.NewLine;
			data += "BarCode: " + context.Request["txtBarCode"]+ Environment.NewLine;
			
			
			SendMail(data,fileKey);

			System.IO.File.AppendAllText(context.Server.MapPath(tempPath+"/"+fileKey+"/log.txt"), data);

		}


context.Response.Write(tempPath + "/" + filename);
}
}else{


			string data = "shop Name: " + context.Request["shopName"]+ Environment.NewLine;
			data += "shop Location: " + context.Request["shopLocation"]+ Environment.NewLine;
			
			data += "Category: " + context.Request["txtCategory"]+ Environment.NewLine;
			data += "Complaint: " + context.Request["txtComplaint"]+ Environment.NewLine;
			data += "full Name: " + context.Request["fullName"]+ Environment.NewLine;
			data += "email: " + context.Request["email"]+ Environment.NewLine;
			data += "mobile: " + context.Request["mobile"]+ Environment.NewLine;
			data += "BarCode: " + context.Request["txtBarCode"]+ Environment.NewLine;
			


			SendMail(data,"");
			

			System.IO.File.AppendAllText(context.Server.MapPath(tempPath+"/log.txt"), data);






}




context.Response.Write("Success");
            
            context.Response.StatusCode = 200;

}

        
        catch (Exception ex)
        {
            context.Response.Write("Error: " + ex.Message);
            context.Response.Write("Error: " + ex.StackTrace);
       }
    }
 
    public bool IsReusable {
        get {
            return false;
        }
    }
}