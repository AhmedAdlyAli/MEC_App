/*
 * File: app/view/BusinessIndicatorsView.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MEC_App.view.BusinessIndicatorsView', {
    extend: 'Ext.Panel',
    alias: 'widget.BusinessIndicatorsView',

    requires: [
        'Ext.Label',
        'Ext.field.Hidden',
        'Ext.Panel',
        'Ext.dataview.List',
        'Ext.XTemplate'
    ],

    config: {
        itemId: 'BusinessIndicatorsView',
        layout: 'vbox',
        cls: [
            'complaint-view',
            'rtl'
        ],
        scrollable: {
            direction: 'vertical',
            directionlock: true
        },
        items: [
            {
                xtype: 'label',
                cls: 'inners-title',
                docked: 'top',
                html: 'مؤشرات الأعمال',
                itemId: 'lblViewTitle'
            },
            {
                xtype: 'hiddenfield',
                itemId: 'hiddenCatType'
            },
            {
                xtype: 'hiddenfield',
                itemId: 'hiddenCatID'
            },
            {
                xtype: 'textfield',
                itemId: 'txtFilter',
                label: 'التقرير',
                labelWidth: '25%',
                placeHolder: 'التقرير',
                readOnly: true,
                listeners: [
                    {
                        fn: function(component, eOpts) {

                            var me = this;
                            me.element.on('tap', function(){



                                var valueField;
                                if(Ext.Global.LanguageFlag==='ar')
                                valueField =  'NameAr';
                                else
                                valueField = 'Name';


                                var data = {TitleKey:'SelectReport', ReturnView:'BusinessIndicatorsView', links: me.up('BusinessIndicatorsView').links, KeyField:'Id',ValueField:valueField};


                                Ext.Viewport.getActiveItem().push({
                                    xtype: 'GenericSelectView',
                                    title: Ext.Global.GetFixedTitle(),
                                    data:data

                                });


                            });




                        },
                        event: 'initialize'
                    }
                ]
            },
            {
                xtype: 'panel',
                cls: 'grid-header',
                itemId: 'GridHeader',
                layout: 'hbox',
                items: [
                    {
                        xtype: 'label',
                        flex: 1,
                        cls: 'header-cell1',
                        html: 'السجلات التجارية الجديدة',
                        itemId: 'NewCommercialReg'
                    },
                    {
                        xtype: 'label',
                        flex: 1,
                        cls: 'header-cell2',
                        html: 'القيمة بالريال القطري',
                        itemId: 'ValueQAR'
                    }
                ]
            },
            {
                xtype: 'panel',
                cls: 'grid-subheader',
                itemId: 'GridSubHeader',
                items: [
                    {
                        xtype: 'label',
                        cls: 'subheader-cell1',
                        html: 'السجلات الرئيسية',
                        itemId: 'MainCrs'
                    }
                ]
            },
            {
                xtype: 'list',
                itemId: 'grdMainCRs',
                itemCls: 'grid-row',
                itemTpl: Ext.create('Ext.XTemplate', 
                    '',
                    '<div class="row-cell1"> {[this.LocalizeLabel()]}  {Quarter}  -  {Year} </div>',
                    '<div class="row-cell2 {[this.CheckPercentOfChange(values.MainNewBusinessRegisters.Change)]}">{MainNewBusinessRegisters.Value}</div>',
                    '',
                    {
                        CheckPercentOfChange: function(changePercent) {
                            if(parseFloat(changePercent)===0){

                                return '';

                            }else if(parseFloat(changePercent)>0){
                                return 'arrow-up-cell';
                            }else{
                                return 'arrow-down-cell';

                            }

                        },
                        LocalizeLabel: function() {
                            if(Ext.Global.LanguageFlag=='ar')
                            return 'الربع';
                            else
                            return 'Quarter';
                        }
                    }
                )
            },
            {
                xtype: 'panel',
                cls: 'grid-subheader',
                itemId: 'GridSubHeader1',
                items: [
                    {
                        xtype: 'label',
                        cls: 'subheader-cell1',
                        html: 'السجلات الفرعية',
                        itemId: 'BranchCRs'
                    }
                ]
            },
            {
                xtype: 'list',
                itemId: 'grdSubCRs',
                itemCls: 'grid-row',
                itemTpl: Ext.create('Ext.XTemplate', 
                    '<div class="row-cell1"> {[this.LocalizeLabel()]}  {Quarter}  -  {Year} </div>',
                    '<div class="row-cell2 {[this.CheckPercentOfChange(values.BranchNewBusinessRegisters.Change)]}">{BranchNewBusinessRegisters.Value}</div>',
                    '',
                    {
                        CheckPercentOfChange: function(changePercent) {
                            if(parseFloat(changePercent)===0){

                                return '';

                            }else if(parseFloat(changePercent)>0){
                                return 'arrow-up-cell';
                            }else{
                                return 'arrow-down-cell';

                            }

                        },
                        LocalizeLabel: function() {
                            if(Ext.Global.LanguageFlag=='ar')
                            return 'الربع';
                            else
                            return 'Quarter';
                        }
                    }
                )
            },
            {
                xtype: 'panel',
                cls: 'grid-header',
                itemId: 'GridHeader1',
                layout: 'hbox',
                items: [
                    {
                        xtype: 'label',
                        flex: 1,
                        cls: 'header-cell1',
                        html: 'السجلات التجارية المجددة',
                        itemId: 'RenewedCRs'
                    },
                    {
                        xtype: 'label',
                        flex: 1,
                        cls: 'header-cell2',
                        html: 'القيمة بالريال القطري',
                        itemId: 'ValueQAR2'
                    }
                ]
            },
            {
                xtype: 'panel',
                cls: 'grid-subheader',
                itemId: 'GridSubHeader2',
                items: [
                    {
                        xtype: 'label',
                        cls: 'subheader-cell1',
                        html: 'السجلات الرئيسية',
                        itemId: 'MainCrs2'
                    }
                ]
            },
            {
                xtype: 'list',
                itemId: 'grdMainCRs2',
                itemCls: 'grid-row',
                itemTpl: Ext.create('Ext.XTemplate', 
                    '<div class="row-cell1"> {[this.LocalizeLabel()]}  {Quarter}  -  {Year} </div>',
                    '<div class="row-cell2  {[this.CheckPercentOfChange(values.MainRenewedBusinessRegisters.Change)]}">{MainRenewedBusinessRegisters.Value}</div>',
                    '',
                    {
                        CheckPercentOfChange: function(changePercent) {
                            if(parseFloat(changePercent)===0){

                                return '';

                            }else if(parseFloat(changePercent)>0){
                                return 'arrow-up-cell';
                            }else{
                                return 'arrow-down-cell';

                            }

                        },
                        LocalizeLabel: function() {
                            if(Ext.Global.LanguageFlag=='ar')
                            return 'الربع';
                            else
                            return 'Quarter';
                        }
                    }
                )
            },
            {
                xtype: 'panel',
                cls: 'grid-subheader',
                itemId: 'GridSubHeader3',
                items: [
                    {
                        xtype: 'label',
                        cls: 'subheader-cell1',
                        html: 'السجلات الفرعية',
                        itemId: 'BranchCRs2'
                    }
                ]
            },
            {
                xtype: 'list',
                itemId: 'grdSubCRs2',
                itemCls: 'grid-row',
                itemTpl: Ext.create('Ext.XTemplate', 
                    '<div class="row-cell1"> {[this.LocalizeLabel()]} {Quarter} - {Year}  </div>',
                    '<div class="row-cell2 {[this.CheckPercentOfChange(values.BranchRenewedBusinessRegisters.Change)]}">{BranchRenewedBusinessRegisters.Value}</div>',
                    '',
                    {
                        CheckPercentOfChange: function(changePercent) {
                            if(parseFloat(changePercent)===0){

                                return '';

                            }else if(parseFloat(changePercent)>0){
                                return 'arrow-up-cell';
                            }else{
                                return 'arrow-down-cell';

                            }

                        },
                        LocalizeLabel: function() {
                            if(Ext.Global.LanguageFlag=='ar')
                            return 'الربع';
                            else
                            return 'Quarter';
                        }
                    }
                )
            }
        ],
        listeners: [
            {
                fn: 'onHiddenCatIDChange',
                event: 'change',
                delegate: '#hiddenCatID'
            }
        ]
    },

    onHiddenCatIDChange: function(textfield, newValue, oldValue, eOpts) {

        //get report
        Ext.AnimationHelper.ShowLoading();


        var view = textfield.up('BusinessIndicatorsView');


        Ext.Ajax.request({

            url : Ext.Global.GetConfig('CMSWSUrl')+ '/QuarterlyBusinessReport/GetLastQuarterlyBusinessReports?culture='+ Ext.Global.LanguageFlag + '&pageIndex=0&pageSize=2&categoryId='+view.down('#hiddenCatID').getValue(),
            method : 'Get',
            success : function (response) {

                var json = Ext.util.JSON.decode(response.responseText);

                Ext.AnimationHelper.HideLoading();

                if(json.length>0)
                {
                    var store = new Ext.data.Store({
                        data : json
                    });

                    var count = 'العدد';

                    if(Ext.Global.LanguageFlag == 'en'){
                        count = 'Count';
                    }


                    if(view.down('#hiddenCatType').getValue() == 1){
                        view.down('#GridHeader').show();
                        view.down('#GridSubHeader').show();
                        view.down('#grdMainCRs').show();
                        view.down('#GridSubHeader1').show();
                        view.down('#grdSubCRs').show();
                        view.down('#GridHeader1').show();
                        view.down('#GridSubHeader2').show();
                        view.down('#grdMainCRs2').show();
                        view.down('#GridSubHeader3').show();
                        view.down('#grdSubCRs2').show();

                        view.down('#ValueQAR').setHtml(count);
                        view.down('#ValueQAR2').setHtml(count);

                        view.down('#grdMainCRs').setStore(store).setHeight(json.length * 2.3 +'em').setScrollable(false);
                        view.down('#grdSubCRs').setStore(store).setHeight(json.length * 2.3 +'em').setScrollable(false);
                        view.down('#grdMainCRs2').setStore(store).setHeight(json.length * 2.3 +'em').setScrollable(false);
                        view.down('#grdSubCRs2').setStore(store).setHeight(json.length * 2.3 +'em').setScrollable(false);
                    }

                    else if(view.down('#hiddenCatType').getValue() == 2){
                        view.down('#GridHeader').show();
                        view.down('#GridSubHeader').show();
                        view.down('#grdMainCRs').show();
                        view.down('#GridSubHeader1').hide();
                        view.down('#grdSubCRs').hide();
                        view.down('#GridHeader1').show();
                        view.down('#GridSubHeader2').show();
                        view.down('#grdMainCRs2').show();
                        view.down('#GridSubHeader3').hide();
                        view.down('#grdSubCRs2').hide();

                        view.down('#ValueQAR').setHtml(count);
                        view.down('#ValueQAR2').setHtml(count);

                        view.down('#grdMainCRs').setStore(store).setHeight(json.length * 2.3 +'em').setScrollable(false);
                        view.down('#grdMainCRs2').setStore(store).setHeight(json.length * 2.3 +'em').setScrollable(false);
                    }

                    else if(view.down('#hiddenCatType').getValue() == 3){
                        view.down('#GridHeader').show();
                        view.down('#GridSubHeader').show();
                        view.down('#grdMainCRs').show();
                        view.down('#GridSubHeader1').hide();
                        view.down('#grdSubCRs').hide();
                        view.down('#GridHeader1').show();
                        view.down('#GridSubHeader2').show();
                        view.down('#grdMainCRs2').show();
                        view.down('#GridSubHeader3').hide();
                        view.down('#grdSubCRs2').hide();

                        view.down('#grdMainCRs').setStore(store).setHeight(json.length * 2.3 +'em').setScrollable(false);
                        view.down('#grdMainCRs2').setStore(store).setHeight(json.length * 2.3 +'em').setScrollable(false);
                    }




                }else{


                    view.down('#GridHeader').hide();
                    view.down('#GridSubHeader').hide();
                    view.down('#grdMainCRs').hide();
                    view.down('#GridSubHeader1').hide();
                    view.down('#grdSubCRs').hide();
                    view.down('#GridHeader1').hide();
                    view.down('#GridSubHeader2').hide();
                    view.down('#grdMainCRs2').hide();
                    view.down('#GridSubHeader3').hide();
                    view.down('#grdSubCRs2').hide();




                    Ext.device.Notification.show({
                        title:Ext.Localization.GetMessage('Message'),
                        buttons: [Ext.Localization.GetMessage('OK')],
                        message:  Ext.Localization.GetMessage('NoData')
                    });
                }

            }


        });
    },

    initialize: function() {

        this.callParent();

        Ext.Localization.LocalizeView(this);

    }

});