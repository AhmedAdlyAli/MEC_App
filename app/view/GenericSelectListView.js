/*
 * File: app/view/GenericSelectListView.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MEC_App.view.GenericSelectListView', {
    extend: 'Ext.Panel',
    alias: 'widget.GenericSelectView',

    requires: [
        'Ext.Label',
        'Ext.dataview.List'
    ],

    config: {
        fullscreen: true,
        itemId: 'GenericSelectView',
        layout: 'vbox',
        items: [
            {
                xtype: 'label',
                cls: 'service-title',
                html: 'Test',
                itemId: 'lblTitle'
            },
            {
                xtype: 'list',
                flex: 1,
                cls: 'HList',
                itemId: 'lstLinks',
                autoDestroy: false,
                itemCls: 'HListItem'
            }
        ],
        listeners: [
            {
                fn: 'onLstLinks1ItemTap1',
                event: 'itemtap',
                delegate: '#lstLinks'
            },
            {
                fn: 'onLstLinksItemTap',
                event: 'itemtap',
                delegate: '#lstLinks'
            }
        ]
    },

    onLstLinks1ItemTap1: function(dataview, index, target, record, e, eOpts) {

        var viewData = dataview.up('GenericSelectView').getData(),
            data ={Id: record.data[viewData.KeyField], Title: record.data[viewData.ValueField]};

        Ext.Viewport.getActiveItem().push({
            xtype: viewData.ReturnView,
            title: Ext.Global.GetFixedTitle(),
            data:data
        });

    },

    onLstLinksItemTap: function(dataview, index, target, record, e, eOpts) {

    },

    initialize: function() {

        var view = this;
        Ext.Localization.LocalizeView(view);

        var viewData = view.getData();

        view.down('#lblTitle').setHtml(Ext.Localization.GetMessage(viewData.TitleKey));

        var store = new Ext.data.Store({
            data : viewData.links
        });

        //console.log(viewData.links);

        var lst = this.down('#lstLinks');
        lst.setItemTpl(new Ext.XTemplate( '<div class=\'nav-item\' style=\'background:url(resources/images/{Icon})\'>{'+viewData.ValueField+'}</div>'));

        lst.setStore(store);

        this.callParent();

    }

});