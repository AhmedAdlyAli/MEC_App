/*
 * File: app/controller/DailyPricesController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MEC_App.controller.DailyPricesController', {
    extend: 'Ext.app.Controller',
    alias: 'controller.DailyPricesController',

    config: {
        control: {
            "container#VegentsblesContainer": {
                show: 'onVegentsblesContainerShow'
            },
            "container#FruitsContainer": {
                show: 'onFruitsContainerShow'
            },
            "container#FishContainer": {
                show: 'onFishContainerShow'
            }
        }
    },

    onVegentsblesContainerShow: function(component, eOpts) {
                this.GetPrices(component,1);


    },

    onFruitsContainerShow: function(component, eOpts) {
                this.GetPrices(component,2);

    },

    onFishContainerShow: function(component, eOpts) {
                this.GetPrices(component,3);

    },

    GetPrices: function(view, typeID) {

        Ext.AnimationHelper.ShowLoading();


        Ext.Ajax.request({

            url : Ext.Global.GetConfig('CMSWSUrl')+ '/DailyDiet/GetAllDailyDietsByType?culture='+ Ext.Global.LanguageFlag +'&pageIndex=0&pageSize=100&typeId='+typeID,
            method : 'Get',
            success : function (response) {


                Ext.AnimationHelper.HideLoading();

                var json = Ext.util.JSON.decode(response.responseText);

                var store = new Ext.data.Store({
                    data : json
                });

                var lstPrices = view.down('#lstPrices');
                lstPrices.setStore(store);

                lstPrices.setHeight(json.length * 2.55 + 'em');

                lstPrices.setScrollable(false);


            }
        });


    }

});