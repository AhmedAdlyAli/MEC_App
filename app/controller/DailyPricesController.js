/*
 * File: app/controller/DailyPricesController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MEC_App.controller.DailyPricesController', {
    extend: 'Ext.app.Controller',
    alias: 'controller.DailyPricesController',

    config: {
        refs: {
            DailyPricesView: 'DailyPricesView'
        },

        control: {
            "container#VegentsblesContainer": {
                show: 'onVegentsblesContainerShow'
            },
            "container#FruitsContainer": {
                show: 'onFruitsContainerShow'
            },
            "container#FishContainer": {
                show: 'onFishContainerShow'
            },
            "searchfield#mysearchfield2": {
                action: 'onMysearchfield2Action',
                clearicontap: 'onMysearchfield2Clearicontap'
            },
            "searchfield#mysearchfield1": {
                action: 'onMysearchfield1Action',
                clearicontap: 'onMysearchfield1Clearicontap'
            },
            "searchfield#mysearchfield": {
                action: 'onMysearchfieldAction',
                clearicontap: 'onMysearchfieldClearicontap'
            },
            "label#lblLastUpdate": {
                initialize: 'onLblLastUpdateInitialize'
            }
        }
    },

    onVegentsblesContainerShow: function(component, eOpts) {

        var view = this.getDailyPricesView();

        this.GetPrices(view,component,'#lstPrices',1);

    },

    onFruitsContainerShow: function(component, eOpts) {

        var view = this.getDailyPricesView();

        this.GetPrices(view,component,'#lstPrices1',2);

    },

    onFishContainerShow: function(component, eOpts) {

        var view = this.getDailyPricesView();

        this.GetPrices(view,component,'#lstPrices2',3);

    },

    onMysearchfield2Action: function(textfield, e, eOpts) {

        var me = this,
            container = textfield.up('container').up('container');

        if(textfield.getValue() === ""){
            if(container.down('#lstPrices2').getStore()._proxy._url.toLowerCase().includes('search')){
                me.GetPrices(container,'#lstPrices2', 3);
            }
            else {
                Ext.device.Notification.show({
                    title: Ext.Localization.GetMessage('Message'),
                    buttons: [Ext.Localization.GetMessage('OK')],
                    message:  Ext.Localization.GetMessage('ErrSearchKeyword')
                });
            }
        }
        else {
            var searchString = textfield.getValue();
            this.SearchPrices(container,'#lstPrices2', 3, searchString);
        }

    },

    onMysearchfield2Clearicontap: function(textfield, e, eOpts) {

        var container = textfield.up('container').up('container');
        var view = this.getDailyPricesView();

        if(container.down('#lstPrices2').getStore()._proxy._url.toLowerCase().indexOf('search') > -1){
            this.GetPrices(view,container,'#lstPrices2', 3);
        }
        else {
            return;
        }

    },

    onMysearchfield1Action: function(textfield, e, eOpts) {

        var me = this,
            container = textfield.up('container').up('container');

        if(textfield.getValue() === ""){
            if(container.down('#lstPrices1').getStore()._proxy._url.toLowerCase().includes('search')){
                me.GetPrices(container,'#lstPrices1', 2);
            }
            else {
                Ext.device.Notification.show({
                    title: Ext.Localization.GetMessage('Message'),
                    buttons: [Ext.Localization.GetMessage('OK')],
                    message:  Ext.Localization.GetMessage('ErrSearchKeyword')
                });
            }
        }
        else {
            var searchString = textfield.getValue();
            this.SearchPrices(container,'#lstPrices1', 2, searchString);
        }

    },

    onMysearchfield1Clearicontap: function(textfield, e, eOpts) {

        var container = textfield.up('container').up('container');
        var view = this.getDailyPricesView();

        if(container.down('#lstPrices1').getStore()._proxy._url.toLowerCase().indexOf('search') > -1){
            this.GetPrices(view,container,'#lstPrices1', 2);
        }
        else {
            return;
        }

    },

    onMysearchfieldAction: function(textfield, e, eOpts) {

        var me = this,
            container = textfield.up('container').up('container');

        if(textfield.getValue() === ""){
            if(container.down('#lstPrices').getStore()._proxy._url.toLowerCase().includes('search')){
                me.GetPrices(container,'#lstPrices', 1);
            }
            else {
                Ext.device.Notification.show({
                    title: Ext.Localization.GetMessage('Message'),
                    buttons: [Ext.Localization.GetMessage('OK')],
                    message:  Ext.Localization.GetMessage('ErrSearchKeyword')
                });
            }
        }
        else {
            var searchString = textfield.getValue();
            this.SearchPrices(container,'#lstPrices', 1, searchString);
        }

    },

    onMysearchfieldClearicontap: function(textfield, e, eOpts) {

        var container = textfield.up('container').up('container');
        var view = this.getDailyPricesView();

        if(container.down('#lstPrices').getStore()._proxy._url.toLowerCase().indexOf('search') > -1){
            this.GetPrices(view,container,'#lstPrices', 1);
        }
        else {
            return;
        }

    },

    onLblLastUpdateInitialize: function(component, eOpts) {



    },

    GetPrices: function(view, tabContainer, listID, typeID) {

        var ajaxAndPagingParams = {
            view: view,
            list: tabContainer.down(listID),
            selector: 'Prices',
            moreText: Ext.Localization.GetMessage('LoadMore'),
            noRecords: Ext.Localization.GetMessage('NoMoreInfo'),
            url: Ext.Global.GetConfig('CMSWSUrl')+ '/DailyDiet/GetAllDailyDietsByType?culture='+ Ext.Global.LanguageFlag +'&typeId='+typeID,
            pageSize: 20
        };

        Ext.Global.LoadAjaxWithPaging(ajaxAndPagingParams);

    },

    SearchPrices: function(tabContainer, listID, typeID, searchString) {

        var ajaxAndPagingParams = {
            method: 'post',
            list: tabContainer.down(listID),
            moreText: Ext.Localization.GetMessage('LoadMore'),
            noRecords: Ext.Localization.GetMessage('NoMoreInfo'),
            url: Ext.Global.GetConfig('CMSWSUrl')+ '/DailyDiet/SearchDailyDietsByType?culture='+ Ext.Global.LanguageFlag +'&typeId='+typeID+'&name='+searchString,
            pageSize: 20
        };

        Ext.Global.LoadAjaxWithPaging(ajaxAndPagingParams);

    }

});