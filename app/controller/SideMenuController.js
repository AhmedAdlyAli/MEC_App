/*
 * File: app/controller/SideMenuController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MEC_App.controller.SideMenuController', {
    extend: 'Ext.app.Controller',

    config: {
        control: {
            "button#btnServices": {
                tap: 'onBtnServicesTap'
            },
            "button#btnHome": {
                tap: 'onBtnHomeTap'
            },
            "button#btnMedai": {
                tap: 'onBtnMedaiTap'
            },
            "button#btnInquiry": {
                tap: 'onBtnInquiryTap'
            },
            "button#btnContact": {
                tap: 'onBtnContactTap'
            },
            "button#btnProjects": {
                tap: 'onBtnProjectsTap'
            },
            "button#btnReports": {
                tap: 'onBtnReportsTap'
            },
            "button#btnSettings": {
                tap: 'onBtnSettingsTap'
            },
            "button#btnLogin": {
                tap: 'onBtnLoginTap'
            },
            "image#imgHome": {
                tap: 'onImgHomeTap'
            },
            "button#btnLogout": {
                tap: 'onBtnLogoutTap'
            },
            "menu#SideMenu": {
                show: 'onSideMenuShow'
            },
            "button#btnAboutApp": {
                tap: 'onBtnAboutAppTap'
            }
        }
    },

    onBtnServicesTap: function(button, e, eOpts) {

        Ext.Viewport.toggleMenu('right');

        if(Ext.Viewport.getActiveItem()._activeItem._itemId == "PublicServiceView"){
            return;
        }
        else {

            Ext.Global.ResetHistory();

            Ext.Viewport.getActiveItem().push({
                xtype: 'PublicServiceView',
                title: Ext.Global.GetFixedTitle()
            });
        }


    },

    onBtnHomeTap: function(button, e, eOpts) {
        Ext.Viewport.toggleMenu('right');


        Ext.Viewport.getActiveItem().reset();





    },

    onBtnMedaiTap: function(button, e, eOpts) {

        Ext.Viewport.toggleMenu('right');

        if(Ext.Viewport.getActiveItem()._activeItem._itemId == "MediaCenterView"){
            return;
        }
        else {

            Ext.Global.ResetHistory();

            Ext.Viewport.getActiveItem().push({
                xtype: 'MediaCenterView',
                title: Ext.Global.GetFixedTitle()

            });
        }

    },

    onBtnInquiryTap: function(button, e, eOpts) {
         Ext.Viewport.toggleMenu('right');

        if(Ext.Viewport.getActiveItem()._activeItem._itemId == "InquiriesView"){
            return;
        }
        else {

            Ext.Global.ResetHistory();

            Ext.Viewport.getActiveItem().push({
                xtype: 'InquiriesView',
                title: Ext.Global.GetFixedTitle()
            });

        }

    },

    onBtnContactTap: function(button, e, eOpts) {
        Ext.Viewport.toggleMenu('right');

        if(Ext.Viewport.getActiveItem()._activeItem._itemId == "ConnectView"){
            return;
        }
        else {

            Ext.Global.ResetHistory();

            Ext.Viewport.getActiveItem().push({
                xtype: 'ContactUsView',
                title:  Ext.Global.GetFixedTitle()
            });
        }

    },

    onBtnProjectsTap: function(button, e, eOpts) {
        Ext.Viewport.toggleMenu('right');

        if(Ext.Viewport.getActiveItem()._activeItem._itemId == "ProjectsView"){
            return;
        }
        else {

            Ext.Global.ResetHistory();

            Ext.Viewport.getActiveItem().push({
                xtype: 'ProjectsView',
                title: Ext.Global.GetFixedTitle()
            });
        }
    },

    onBtnReportsTap: function(button, e, eOpts) {
        Ext.Viewport.toggleMenu('right');

        if(Ext.Viewport.getActiveItem()._activeItem._itemId == "ReportsView"){
            return;
        }
        else {

            Ext.Global.ResetHistory();

            Ext.Viewport.getActiveItem().push({
                xtype: 'ReportsView',
                title:  Ext.Global.GetFixedTitle()
            });
        }

    },

    onBtnSettingsTap: function(button, e, eOpts) {
        Ext.Viewport.toggleMenu('right');

        if(Ext.Viewport.getActiveItem()._activeItem._itemId == "SettingsView"){
            return;
        }
        else {

            Ext.Global.ResetHistory();

            Ext.Viewport.getActiveItem().push({
                xtype: 'SettingsView',
                title: Ext.Global.GetFixedTitle()
            });
        }


    },

    onBtnLoginTap: function(button, e, eOpts) {
        Ext.Viewport.toggleMenu('right');

        if(Ext.Viewport.getActiveItem()._activeItem._itemId == "LoginFomView"){
            return;
        }
        else {

            Ext.Global.ResetHistory();

            Ext.Viewport.getActiveItem().push({
                xtype: 'LoginFomView',
                title:  Ext.Global.GetFixedTitle()
            });
        }

    },

    onImgHomeTap: function(image, e, eOpts) {
        Ext.Viewport.toggleMenu('right');
        Ext.Viewport.getActiveItem().reset();
    },

    onBtnLogoutTap: function(button, e, eOpts) {
        Ext.Global.isLogged = false;
        Ext.Global.userToken = '';

        Ext.Global.identityType = '';
        Ext.Global.identityNum = '';
        Ext.Global.identityNationality = '';

        Ext.Viewport.toggleMenu('right');

        Ext.Viewport.getActiveItem().reset();
        Ext.Viewport.getActiveItem().getNavigationBar().getBackButton().hide();

    },

    onSideMenuShow: function(component, eOpts) {
        var menu = component;

        if(Ext.Global.isLogged){
            menu.down('#btnLogout').show();
            menu.down('#btnLogin').hide();

        }else{
            menu.down('#btnLogin').show();
            menu.down('#btnLogout').hide();
        }

    },

    onBtnAboutAppTap: function(button, e, eOpts) {
                Ext.Viewport.toggleMenu('right');

                if(Ext.Viewport.getActiveItem()._activeItem._itemId == "AboutAppView"){
                    return;
                }
                else {

                    Ext.Global.ResetHistory();

                    Ext.Viewport.getActiveItem().push({
                        xtype: 'AboutAppView',
                        title: Ext.Global.GetFixedTitle()
                    });
                }
    }

});