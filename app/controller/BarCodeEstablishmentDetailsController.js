/*
 * File: app/controller/BarCodeEstablishmentDetailsController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MEC_App.controller.BarCodeEstablishmentDetailsController', {
    extend: 'Ext.app.Controller',
    alias: 'controller.BarCodeEstablishmentDetailsController',

    config: {
        control: {
            "panel#BarCodeEstablishmentDetails": {
                initialize: 'onBarCodeEstablishmentDetailsInitialize'
            }
        }
    },

    onBarCodeEstablishmentDetailsInitialize: function(component, eOpts) {
        var view = component; //me.getMyEstablishmentDetails();


        //Ext.Localization.LocalizeView(view);



        var input = view.getData();


        this.GetData(view,input,'',true);



    },

    GetData: function(view, cr, cp, tryAgain) {

        var me = this;

        Ext.AnimationHelper.ShowLoading();

        // get establishment details

        var me = this;


        requestData = {
            "serviceId": "8",
            "token": Ext.Global.userToken,
            "language": Ext.Global.LanguageFlag,
            "commercialRegistrationNum":cr,
            "moiEstablishmentNum":"",
            "siebelSpcOperationSpcObjectSpcId":"",
            "qatarChamberNum":"",
            "statusMsg":"",
            "commercialPermitNum":cp,
            "numOutputObjects":"",
            "economicalNum":""
        };


        Ext.Ajax.request({

            url : Ext.Global.GetConfig('webServiceUrl'),
            method : 'POST',
            // useDefaultXhrHeader: false,
            jsonData :requestData,
            success : function (response) {

                Ext.AnimationHelper.HideLoading();

                var json = Ext.util.JSON.decode(response.responseText);
                //Bind Data to controls


                if(json.listOfMecPrimaryEstablishment.companyEstablishment &&
                  json.listOfMecPrimaryEstablishment.companyEstablishment.length>0 &&
                   json.listOfMecPrimaryEstablishment.companyEstablishment[0].commercialRegistration!==''
                  )

                {
                var company= json.listOfMecPrimaryEstablishment.companyEstablishment[0];



                view.down('#commercialRegistration').setHtml(company.commercialRegistration);
                view.down('#commercialRegistrationIssueDate').setHtml(company.commercialRegistrationIssueDate);
                view.down('#commercialRegistrationExpiryDate').setHtml(company.commercialRegistrationExpiryDate);
                view.down('#commercialRegistrationStatus').setHtml(company.commercialRegistrationStatus);
                view.down('#establishmentEnglishName').setHtml(company.establishmentEnglishName);
                view.down('#establishmentArabicName').setHtml(company.establishmentArabicName);
                view.down('#companyCapital').setHtml(company.companyCapital);
                view.down('#commercialPermit').setHtml(company.commercialPermit);
                view.down('#commercialPermitStatus').setHtml(company.commercialPermitStatus);



                view.down('#commercialPermitExpiryDate').setHtml(company.commercialPermitExpiryDate);
                view.down('#establishmentDate').setHtml(company.establishmentDate);
                view.down('#establishmentType').setHtml(company.establishmentType);
                view.down('#establishmentLegalForm').setHtml(company.establishmentLegalForm);
                view.down('#establishmentStatus').setHtml(company.establishmentStatus);
                view.down('#establishmentRegNumber').setHtml(company.moiEstablishmentId);



                //signatories
                if(company.listOfSignatories.signatories.length>0)
                {
                    var storeSignatories = new Ext.data.Store({
                        data : company.listOfSignatories.signatories
                    });

                    var lst = view.down('#lstSignatories');
                    lst.setStore(storeSignatories);

                    lst.setHeight(company.listOfSignatories.signatories.length*6 + 'em');
                    lst.setScrollable(false);
                }




                if(company.listOfHumanPartners.humanPartners.length>0)
                {
                    //partners
                    var storePartners = new Ext.data.Store({
                        data : company.listOfHumanPartners.humanPartners
                    });

                    var lstPartners = view.down('#lstPartners');
                    lstPartners.setStore(storePartners);

                    lstPartners.setHeight(company.listOfHumanPartners.humanPartners.length*6 + 'em');
                    lstPartners.setScrollable(false);

                }




                //Branches

                if(company.listOfBranches.branches.length > 0){
                    var storeBranches = new Ext.data.Store({
                        data : company.listOfBranches.branches
                    });



                    var lstBranches = view.down('#lstBranches');
                    lstBranches.setStore(storeBranches);

                    lstBranches.setHeight(company.listOfBranches.branches.length* 4.4 + 'em');
                    lstBranches.setScrollable(false);

                }




                // business activities


                if(company.listOfCRBusinessActivities.crBusinessActivities.length > 0){
                    var storActivities = new Ext.data.Store({
                        data : company.listOfCRBusinessActivities.crBusinessActivities
                    });


                    var lstBizActivities = view.down('#lstBizActivities');
                    lstBizActivities.setStore(storActivities);

                    lstBizActivities.setHeight(company.listOfCRBusinessActivities.crBusinessActivities.length*3.6 + 'em');
                    lstBizActivities.setScrollable(false);

                }
                }else if(cr!=='' && tryAgain===true){

                       // passing the CR param as the CP now, both are 1 input...
                       me.GetData(view,'',cr,false);

                }else{


                    Ext.device.Notification.show({
                        title: Ext.Localization.GetMessage('Error'),
                        buttons:[Ext.Localization.GetMessage('OK')],
                        message: Ext.Localization.GetMessage('errWrongBarCodeInput')
                    });


                    Ext.Viewport.getActiveItem().getNavigationBar().fireEvent('back');


                }




            }
        });

    }

});