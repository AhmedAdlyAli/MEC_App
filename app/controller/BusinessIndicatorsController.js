/*
 * File: app/controller/BusinessIndicatorsController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MEC_App.controller.BusinessIndicatorsController', {
    extend: 'Ext.app.Controller',

    config: {
        control: {
            "panel#BusinessIndicatorsView": {
                initialize: 'onBusinessIndicatorsViewInitialize'
            }
        }
    },

    onBusinessIndicatorsViewInitialize: function(component, eOpts) {
        var view = component;//me.getMyBusinessView();


        Ext.AnimationHelper.ShowLoading();

        var view = component;


        Ext.Ajax.request({
            url : Ext.Global.GetConfig('CMSWSUrl')+ '/QuarterlyBusinessReport/GetAllQuarterlyBusinessReportCategories?culture='+ Ext.Global.LanguageFlag +'&pageIndex=0&pageSize=20',
            method : 'Get',
            success : function (response) {

                var json = Ext.util.JSON.decode(response.responseText);

                console.log(json);

                view.setData(json);


                if(Ext.Global.LanguageFlag=='ar')
                    view.down('#txtFilter').setValue(json[2].NameAr);
                else
                    view.down('#txtFilter').setValue(json[2].Name);




                // success - get report

                Ext.Ajax.request({

                    url : Ext.Global.GetConfig('CMSWSUrl')+ '/QuarterlyBusinessReport/GetLastQuarterlyBusinessReports?culture='+ Ext.Global.LanguageFlag +'&pageIndex=0&pageSize=2&categoryId='+json[2].Id,
                    method : 'Get',
                    success : function (response) {

                        var json = Ext.util.JSON.decode(response.responseText);



                        console.log(json);




                        var store = new Ext.data.Store({
                            data : json
                        });


                        view.down('#grdMainCRs').setStore(store).setHeight(json.length * 2.3 +'em').setScrollable(false);
                        view.down('#grdSubCRs').setStore(store).setHeight(json.length * 2.3 +'em').setScrollable(false);
                        view.down('#grdMainCRs2').setStore(store).setHeight(json.length * 2.3 +'em').setScrollable(false);
                        view.down('#grdSubCRs2').setStore(store).setHeight(json.length * 2.3 +'em').setScrollable(false);




                        Ext.AnimationHelper.HideLoading();
                    }
                });
















            }
        });






    }

});