["function _65dc33a53baf135695d112f2f1017a069dd778fb(){};",79088,36,91,1048485,1048576,37117,"A simple class to display a button in Sencha Touch.\n *\n * There are various different styles of Button you can create by using the {@link #icon},\n * {@link #iconCls}, {@link #iconAlign}, {@link #ui}, and {@link #text}\n * configurations.\n *\n * ## Simple Button\n *\n * Here is a Button in it's simplest form",729280,38,1078674,51,"text: 'Button'\n *     });\n *     Ext.Viewport.add({ xtype: 'container', padding: 10, items: [button] });\n *\n * ## Icons\n *\n * You can also create a Button with just an icon using the {@link #iconCls} configuration",729280,38,1078674,51,"iconCls: 'refresh'\n *     });\n *     Ext.Viewport.add({ xtype: 'container', padding: 10, items: [button] });\n *\n * Sencha provides the \"Font\" and \"PNG\" icons packs from http://wwww.pictos.cc. \n * Use icons with the {@link Global_CSS#icon icon} mixin in your Sass.\n *\n * ## Badges\n *\n * Buttons can also have a badge on them, by using the {@link #badgeText} configur",585052,37,887392,66,"padding: 10,",1026883,36,"xtype: 'button',\n *             text: 'My Button',\n *             badgeText: '2",1211535,32,"## UI\n *\n * Buttons also come with a range of different default UIs. Here are the included UIs\n * available (if {@link #$include-button-uis $include-button-uis} is set to `true`):\n *\n * - **normal** - a basic gray button\n * - **back** - a back button\n * - **forward** - a forward button\n * - **round** - a round button\n * - **action** - shaded using the {@link Global_CSS#$active-color $active-color} (dark blue by default)\n * - **decline** - shaded using the {@link Global_CSS#$alert-color $alert-color} (red by default)\n * - **confirm** - shaded using the {@link Global_CSS#$confirm-color $confirm-color} (green by default)\n *\n * You can also append `-round` to each of the last three UI's to give it a round shape:\n *\n * - **action-round**\n * - **decline-round**\n * - **confirm-round**\n *\n * And setting them is very simple:\n *\n *     var uiB",1078679,46,"text: 'My Button',\n *         ui: 'action'\n *     });\n *\n * And how they look:\n *\n *",1078631,34,889677,75,"padding: 4",1026819,40,"xtype: 'button',\n *             margin: 5\n *         },\n *",258880,34,"type: 'vbox',\n *             align: 'center'\n *         }",887472,38," ui: 'normal', text: 'normal' },\n *             { ui: 'round', text: 'round' },\n *             { ui: 'action', text: 'action' },\n *             { ui: 'decline', text: 'decline' },\n *             { ui: 'confirm', text: 'confirm'",889215,33,"Note that the default {@link #ui} is **normal**.\n *\n * You can also use the {@link #sencha-button-ui sencha-button-ui} CSS Mixin to create your own UIs.\n *\n * ## Example\n *\n * This example shows a bunch of icons on the screen in two toolbars. When you click on the center\n * button, it switches the {@link #iconCls} on every button on the page.",1686567,39,"createWidget('c",887405,61,"{\n *             type: 'vbox',\n *             pack:'center',\n *             align: 'center'\n *         }",887472,58,"xtype: 'button',\n *                 text: 'Change iconCls',\n *                 handler: function() {\n *                     // classes for all the icons to loop through.\n *                     var availableIconCls = [\n *                         'action', 'add', 'arrow_down', 'arrow_left',\n *                         'arrow_right', 'arrow_up', 'compose', 'delete',\n *                         'organize', 'refresh', 'reply', 'search',\n *                         'settings', 'star', 'trash', 'maps', 'locate',\n *                         'home'\n *                     ];\n *                     // get the text of this button,\n *                     // so we know which button we don't want to change\n *                     var text = this.getText();\n *\n *                     // use ComponentQuery to find all buttons on the page\n *                     // and loop through all of them\n *                     Ext.Array.forEach(Ext.ComponentQuery.query('button'), function(button) {\n *                         // if the button is the change iconCls button, continue\n *                         if (button.getText() === text) {",1313776,32,"return;\n *           ",206408,35,"           // get the index of the new available iconCls\n *                         var index = availableIconCls.indexOf(button.getIconCls()) + 1",1401006,32,"// update the iconCls of the button with the next iconCls, if one exists.\n *                         // if not, use the first one\n *                         button.setIconCls(availableIconCls[(index === availableIconCls.length) ? 0 : index]);\n *        ",1312654,32,1455309,39,"{\n",536648,38,1686685,52,"items: [\n *                     { xtype: 'spacer' },\n *                     { iconCls: 'action' },\n *                     { iconCls: 'add' },\n *                     { iconCls: 'arrow_down' },\n *                     { iconCls: 'arrow_left' },\n *                     { iconCls: 'arrow_up' },\n *                     { iconCls: 'compose' },\n *                     { iconCls: 'delete' },\n *                     { iconCls: 'organize' },\n *                     { iconCls: 'refresh' },\n *                     { xtype: 'spacer' }\n *",1079038,34,729551,76,"docked: 'bottom',\n *                 ui: 'light',\n *        ",729408,33,"        { xtype: 'spacer' },\n *                     { iconCls: 'reply' },\n *                     { iconCls: 'search' },\n *                     { iconCls: 'settings' },\n *                     { iconCls: 'star' },\n *                     { iconCls: 'trash' },\n *                     { iconCls: 'maps' },\n *                     { iconCls: 'locate' },\n *                     { iconCls: 'home' },\n *                     { xtype: 'spacer' }\n *",1079038,34,"}\n *         ]",1149254,35,"Button",1000495,36,"xtype: 'button'",1023847,35,"@preventable doTap\n     * Fires whenever a button is tapped.\n     * @param {Ext.Button} this",1028972,49,1023993,35,1602144,34,"lease\n     * @preventable doRelease\n     * Fires whenever the button is released.\n     * @param {Ext.Button} this",1028972,49,1023993,35,".\n     */\n    cachedC",1188304,46,"pressed",1149747,33,"dd to the Button when it is pre",1037772,47,"pressedCls: Ext.baseCSSPrefix + 'button-pressing",1221408,32,"String} bad",1149745,35,"dd to the Button's badge, if it has one.  Badges appear as small numbers, letters, or icons that sit on top of your button.  For instance, a small red number indicating how many updates are availabl",1422719,44,"badgeCls: Ext.baseCSSPrefix + 'badge",1221408,32,"String} hasBad",1149745,35,"dd to the Button if it has a badge (note that this goes on the\n         * Button element itself, not on the badge element)",1614000,32,1038038,32,"asBadgeCls: Ext.baseCSSPrefix + 'hasbadge",1221408,32,"String} label",1149747,33,"dd to the field's label",1149807,51,"labelCls: Ext.baseCSSPrefix + 'button-label",1221408,32,"String} iconCls\n         * Optional CSS class to add to the icon element. This is useful if you want to use a CSS\n         * background image to create your Button ic",835680,45,"iconCls: null",1252062,51,"String} badgeText\n         * Optional badge text.  Badges appear as small numbers, letters, or icons that sit on top of your button.  For instance, a small red number indicating how many updates are availabl",1422719,44,"badgeTex",930688,38,"String} text\n         * The Button tex",1222975,44,"tex",930688,38,"String} icon\n         * Url to the icon image to use if you want an icon to appear on your butt",835680,45,"icon",1023536,36," {String} iconAlign\n         * The position within the Button to render the icon Options are: `top`, `right`, `bottom`, `left` and `center` (when you have\n         * no {@link #text} set",1367776,44,"iconAlig",849193,40,"Number/Boolean} pressedDelay\n         * The amount of delay between the `tapstart` and the moment we add the `pressedCls` (in milliseconds).\n         * Settings this to `true` defaults to 100ms.\n         */\n        pressedDelay",1023613,32," {Function} handler\n         * The handler function to run when the Button",1038013,57,"and",1153790,40,"Object} scope\n         * The scope to fire the configured {@link #handler}",856831,46,1295230,42,"String} autoEvent\n         * Optional event name that will be fired instead of `tap` when the Button",1038013,56,"autoEven",930688,38,"String} ui\n         * The ui style to render this button with. The valid default option",8523,32,"'normal'` - a basic gray button (default).\n         * - `'back'` - a back button.\n         * - `'forward'` - a forward button.\n         * - `'round'` - a round button.\n         * - `'plain'`\n         * - `'action'` - shaded using the {@link Global_CSS#$active-color $active-color} (dark blue by default).\n         * - `'decline'` - shaded using the {@link Global_CSS#$alert-color $alert-color} (red by default).\n         * - `'confirm'` - shaded using the {@link Global_CSS#$confirm-color $confirm-color} (green by default)",739464,37,"append `-round` to each of the last three UI's to give it a round shape:\n         *\n         * - **action-round**\n         * - **decline-round**\n         * - **confirm-round**",1168144,53,"ui: 'norm",834992,42,"html The HTML to put in this button.\n         *\n         * If you want to just add text, please use the {@link #text}",844931,36,1023775,32,1023351,61,"button'\n    },\n    template: [\n        {\n",1151470,37,"reference: 'badgeElement',\n",1080849,33,"},\n        {\n",1151470,37,"className: Ext.baseCSSPrefix + 'button-icon',\n            reference: 'iconElement'\n        },\n        {\n",1151470,37,"reference: 'textElement',\n",1080849,33,"}\n    ]",549727,44,"callParent();\n        this.element.on({",1739310,38,"tap: 'onTap",716278,71,646768,35,"@private\n     */\n    updateBadgeText: function(badgeTex",816398,53,"badgeElement = this.badgeElement;\n        if (badgeText) {\n            badgeElement.show();\n            badgeElement.setText(badgeText",201616,32,"badgeElement.hide();\n        }\n        element[(badgeText)",1024940,35,"HasBadgeCls",1238032,48,"update",675383,35,"textElement = this.textElement;\n        if (textElement) {\n            if (text) {\n                text",791470,33,"extElement.setHtml(tex",1121072,41,"textElement.hide(",1064848,34,"refreshIconAlign(",1587584,50,"/\n",787152,41,"var textElement = this.textElement;\n        if (html) {\n            textElement.show();\n            textElement.setHtml(html",963568,33,"extElement.hide(",1587584,50,"/\n    updateBadgeCls: function(badgeCls, oldBadgeCls) {\n        this.badgeElement.replaceCls(oldBadgeCls, badgeCl",1232672,41,"/\n    updateHasBadgeCls: function(hasBadgeCls, oldHasBadgeCl",816112,53,"element.hasCls(oldHasBadgeCls)) {\n            element.replaceCls(oldHasBadgeCls, hasBadgeCls",1587584,50,"/\n    updateLabelCls: function(labelCls, oldLabelCls) {\n        this.textElement.replaceCls(oldLabelCls, labelCl",1232672,41,"/\n    updatePressedCls: function(pressedCls, oldPressedCl",816112,53,"element.hasCls(oldPressedCls)) {\n            element.replaceCls(oldPressedCls, pressedCls",1587584,50,"/\n    updateIcon: function(ic",678159,41,"element = me.iconElement;\n        if (icon) {\n            me.showIconElement();\n            element.setStyle('background-image', 'url(' + icon + ')');\n            me.refreshIconAlig",870910,34,"element.setStyle('background-image', '');\n            me.hideIconElement(",1587584,50,"/\n    updateIconCls: function(iconCls, oldIconCl",1375856,40,"element = me.iconElement;\n        if (iconCls) {\n            me.showIconElement();\n            element.replaceCls(oldIconCls, iconCls);\n            me.refreshIconAlig",870910,34,"element.removeCls(oldIconCls);\n            me.hideIconElement(",1587584,50,"/\n    updateIconAlign: function(alignment, oldAlign",816395,56,"baseCls = Ext.baseCSSPrefix + 'iconalign-';\n        if (!this.getText()) {\n            alignment = \"center\";\n        }\n",765025,36,"\"center\");\n",765025,36,"oldAlignment);\n        if (this.getIcon() || this.getIconCls()) {\n            element.addCls(baseCls + alignment);\n        }\n    },\n    refreshIconAlign",1831231,34,"IconAlign(this.getIconAlign());\n    },\n    applyAutoEvent: function(autoEvent",489263,35,"if (typeof autoEvent == 'string') {\n            autoEvent = {\n                name: autoEvent,\n                scope: me.scope || me",945536,34,"return autoEvent",969184,55,"Event: function(autoEvent) {\n        var name = autoEvent.name,\n            scope = autoEvent.scope;\n        this.setHandler(function() {\n            scope.fireEvent(name, scope, this);\n        });\n        this.setScope(scope);\n    },\n    /**\n     * Used by `icon` and `iconCls` configurations to hide the icon element.\n     * @private\n     */\n    hideIcon",708350,35,"iconElement",471945,32,"shown');\n        this.iconElement.addCls(Ext.baseCSSPrefix + 'hidden');\n    },\n    /**\n     * Used by `icon` and `iconCls` configurations to show the icon element",342608,34,"Icon",708350,35,"iconElement",471945,32,"hidden');\n        this.iconElement.addCls(Ext.baseCSSPrefix + 'shown');\n    },\n    /**\n     * We override this to check for '{ui}-back'. This is because if you have a UI of back, you need to actually add two class names.\n     * The ui class, and the back class:\n     *\n     * `ui: 'action-back'` would turn into:\n     *\n     * `class=\"x-button-action x-button-back\"`\n     *\n     * But `ui: 'action'` would turn into:\n     *\n     * `class=\"x-button-action\"`\n     *\n     * So we just split it up into an array and add both of them as a UI, when it has `back`.",1156206,35,"i",1726112,33,"config && ",1410925,36,"var array = config.split('-');\n            if (array && (array[1] == \"back\" || array[1] == \"forward\")",59835,32,390912,41,"config;\n    },\n    getUi: function() {\n        //Now that the UI can sometimes be an array, we need to check if it an array and return the proper value.\n        var ui = this._ui;\n        if (Ext.isArray(ui)) {\n            return ui.join('-');\n        }\n        return ui;\n    },\n    applyPressedDelay: function(delay) {\n        if (Ext.isNumber(delay)) {\n            return delay;\n        }\n        return (delay) ? 100 : 0;\n    },\n    // @private\n    onPress",900368,50,"element = me.element,\n            pressedDelay = me.getPressedDelay(),\n            pressedCls = me.getPressedCls();\n        if (!me.getDisabled()) {\n            if (pressedDelay > 0) {\n                me.pressedTimeout",1760221,43,"    delete me.pressedTimeout;\n            ",1724320,35,"            element.addCls(pressedCls",100032,42,", pressedDelay",48192,40,"element.addCls(pressedCl",346496,33,",\n    // @private",720287,55,"release",720575,36,"\n        ], 'doRelease');\n    },\n    // @private\n    doRelease: function(me, e) {\n        if (!me.getDisabled()) {\n            if (me.hasOwnProperty('pressedTimeout')",1239625,33,"me.pressedTimeout);\n                delete me.pressedTimeout",1841872,41,".element.removeCls(me.getPressedCls()",20784,32,",\n    // @private\n    onTap",1770240,33,720454,61,"this.fireAction('tap",720575,36,"\n        ], 'doTap'",974304,46,"doTap: function(me, e) {\n        var handler = me.getHandler(),\n            scope = me.getScope() || me;\n        if (!handler",550175,42,"if (typeof handler == 'string') {\n            handler = scope[handler];\n        }\n        //this is done so if you hide the button in the handler, the tap event will not fire on the new element\n        //where the button was.\n        if (e && e.preventDefault",1748991,54,"handler.apply(scope, ",983583,38,"/**\n * A general sheet class. This renderable container provides base support for orientation-aware transitions for popup or\n * side-anchored sliding Panels.\n *\n * In most cases, you should use {@link Ext.ActionSheet}, {@link Ext.MessageBox}, {@link Ext.picker.Picker}, or {@link Ext.picker.Date}.\n */\nExt.define('Ext.Sheet",1870994,32,"xtype: 'sheet",1149344,44,1023338,74,"sheet'",1023616,42,"inheritdoc\n         */\n        modal",1614544,46,744756,40,"c",744797,43,"containe",1031071,64,"centere",1613648,38,"Boolean} stretchX `true` to stretch this sheet horizontally.\n         */\n        stretchX",1037824,46,"stretchY `true` to stretch this sheet vertically.\n         */\n        stretchY",1240512,45,"enter\n         * The viewport side used as the enter point when shown. Valid values are 'top', 'bottom', 'left', and 'right'.\n         * Applies to sliding animation effects only.\n         */\n        enter: 'bottom",1221408,32,"String} exit\n         * The viewport side used as the exit point when hidden. Valid values are 'top', 'bottom', 'left', and 'right'.\n         * Applies to sliding animation effects only.\n         */\n        exit: 'bottom'",1023616,42,"inheritdoc\n         */\n        showAnimation: !Ext.browser.is.AndroidStock2 ? {\n            type: 'slideIn',\n            duration: 250",864923,42," ",1037824,35,849578,44,"hideAnimation: !Ext.browser.is.AndroidStock2 ? {\n            type: 'slideOut',\n            duration: 250,\n            easing: 'ease-in'\n        } : null\n    }",1820605,56,"beforeI",1866573,32,"var me = this;\n        // Temporary fix for a mysterious bug on iOS where double tapping on a sheet\n        // being animated from the bottom shift the whole body up\n        Ext.os.is.iOS && this.element.dom.addEventListener('touchstart', function(e) {\n            if (!me.isInputRegex.test(e.target.tagName)) {\n    ",1828112,40,"    }\n        }, true);\n    },\n    platformConfig: [\n        {\n            theme: [\n                'Windows'\n            ],\n            enter: 'top',\n            exit: 'top'\n        }\n    ],\n    applyHideAnim",333726,38,"exit = this.getExit(),\n            direction = exit;\n        if (exit",421920,32,"null;",338387,54,"config = {\n                type: 'slideOut",544576,35,940398,40,"config = {\n                typ",1410991,43,"var anim = Ext.factory(config, Ext.fx.Animation);\n        if (anim) {\n            if (exit == 'bottom",869008,34,"dow",10319,34,"exit == 'top",869008,51,"}\n            anim",938007,34,"}\n        return anim;\n    },\n    applyShowAnim",333726,38,"enter = this.getEnter(),\n            direction = enter;\n        if (enter",421920,32,"null;",338387,54,"config = {\n                type: 'slideIn",544576,35,940398,40,"config = {\n                typ",1410991,43,"var anim = Ext.factory(config, Ext.fx.Animation);\n        if (anim) {\n            if (enter == 'bottom",869008,34,"dow",10319,34,"enter == 'top",869008,51,"}\n            anim.setBefore({\n                display: null\n            });\n            anim.setReverse(true);\n            anim",938007,34,"}\n        return anim;\n    },\n    updateStretchX: function(newStretchX) {\n        this.getLeft();\n        this.getRight();\n        if (newStretchX) {\n            this.setLeft(0);\n            this.setRight(0",1484932,32,"retchY: function(newStretchY) {\n        this.getTop();\n        this.getBottom();\n        if (newStretchY) {\n            this.setTop(0);\n            this.setBottom(0",1085662,62978,"@class Ext.Decorator\n * @extends Ext.Component\n *\n * In a few words, a Decorator is a Component that wraps around another Component. A typical example of a Decorator is a\n * {@link Ext.field.Field Field}. A form field is nothing more than a decorator around another component, and gives the\n * component a label, as well as extra styling to make it look good in a form.\n *\n * A Decorator can be thought of as a lightweight Container that has only one child item, and no layout overhead.\n * The look and feel of decorators can be styled purely in CSS.\n *\n * Another powerful feature that Decorator provides is config proxying. For example: all config items of a\n * {@link Ext.slider.Slider Slider} also exist in a {@link Ext.field.Slider Slider Field} for API convenience.\n * The {@link Ext.field.Slider Slider Field} simply proxies all corresponding getters and setters\n * to the actual {@link Ext.slider.Slider Slider} instance. Writing out all the setters and getters to do that is a tedious task\n * and a waste of code space. Instead, when you sub-class Ext.Decorator, all you need to do is to specify those config items\n * that you want to proxy to the Component using a special 'proxyConfig' class property. Here's how it may look like\n * in a Slider Field class:\n *\n *     Ext.define('My.field.Sli",1452954,32,"Decorato",1159615,43,"component: {\n *                 xtype: 'slider",1164908,47,"proxyConfig: {\n *             minValue: 0,\n *             maxValue: 100,\n *             increment: 1\n *         }\n *",260080,36,"Once `My.field.Slider` class is created, it will have all setters and getters methods for all items listed in `proxyConfig`\n * automatically generated. These methods all proxy to the same method names that exist within the Component instance.\n */\nExt.define('Ext.Decorator",1000495,36,"isDecorator",1402271,51,"Object} component The config object to factory the Component that this Decorator wraps around\n         */\n        component: {}\n    }",548045,33,"ProxySetter",170621,38,1395775,38,"component = this.getComponent();\n                component[name].call(component, valu",283856,46,";\n        },\n        generateProxyGetter",170621,38,227840,33,"component = this.getComponent();\n                return component[name].call(component",1721951,32,550078,40,551468,48,"proxyConfig'",1319584,47,550221,34,"proxyConfig = members.proxyConfig",551603,37,";\n        members",550364,41,"proxyConfig) : proxyConfig;\n        var name, nameMap, setName, getName;\n        for (name in proxyConfig) {\n            if (proxyC",1010893,46,551108,59,198979,78,"members[setName] = this.generateProxySetter(setName);\n                members[getName] = this.generateProxyGetter(ge",511456,36,"},\n    // @private\n    applyComponent",1011435,36,"Ext.factory(config, Ext.Component);\n    },\n    // @private\n    updateComponent: function(newComponent, oldComponent) {\n        if (oldComponent) {\n    ",1057403,33,"oldComponent",1058140,35,"    oldComponent",1057478,48,"    this,\n                    oldComponent,\n    ",1058255,34,"    ], 'doUnsetComponent', this, {\n",791146,52,"oldComponent\n",1145403,38,"}",120432,41,"his.doUnsetComponent(oldComponent",1053968,42,"Component) {\n    ",1057403,33,"newComponent",1057440,34,"    newComponent",1057478,48,"    this,\n                    newComponent,\n",289082,41,"], 'doSetComponent', this, {\n",791146,52,"newComponent\n",1145403,38,"}",120432,41,"his.doSetComponent(newComponent",20784,32,",\n    // @private\n    doUns",1066991,47,"component",871456,34,"component.setLayoutSizeFlags(0);\n",1846544,34,"removeChild(component.renderElement.dom);\n        }\n    },\n    // @private\n    doS",1066991,47,"component",871456,34,"component.setLayoutSizeFlags(this.getSizeFlags());\n",1846544,34,"appendChild(component.renderElement.dom);\n        }\n    },\n    // @private",1063789,47,"var component;",1771949,39,") {\n            component = this.getComponent();\n    ",1699419,37,"    component",1064018,107,"/ @private\n    set",784713,39,853087,32,"    this.getComponent().setDisabled(disabled",816701,44,"Ext.destroy(this.getComponent())",1007680,34,"\n});\n\n/**\n * A simple label component which allows you to insert content using {@link #html} configuration.",927852,37,"Ext.Viewport.add({\n *         xtype: 'label',\n *         html: 'My label!'",929663,32,"Label",1000495,36,"xtype: 'label'",1000525,33,"Ext.baseCSSPrefix + 'label'\n    }\n});\n/**\n         * @cfg {String} html\n         * The label of this component.\n         */",1022728,224,1149100,71,1148926,3975,"{@link Ext.Menu}'s are used with {@link Ext.Viewport#setMenu}. A menu can be linked with any side of the screen (top, left, bottom or right)\n *  and will simply describe the contents of your menu. To use this menu you will call various menu related functions on the {@link Ext.Viewport}\n * such as {@link Ext.Viewport#showMenu}, {@link Ext.Viewport#hideMenu}, {@link Ext.Viewport#toggleMenu}, {@link Ext.Viewport#hideOtherMenus},\n * or {@link Ext.Viewport#hideAllMenus}.\n *\n *      @example preview\n *      var menu = Ext.create('Ext.Menu', {\n * ",729408,33," {\n *                  text: 'Settings',\n *                  iconCls: 'settings'\n *",1163007,33,"{\n *                  text: 'New Item',\n *                  iconCls: 'compose'\n *",1163007,33,"{\n *                  text: 'Star',\n *                  iconCls: 'star'\n *",1079060,57,"Viewport.setMenu(menu, {\n *          side: 'left',\n *          reveal: true\n *      });\n *\n *      Ext.Viewport.showMenu('left');\n *\n * The {@link #defaultType} of a Menu item is a {@link Ext.Button button}.\n */\nExt.define('Ext.Menu', {\n    extend: Ext.Sheet,\n    xtype: 'menu",1149344,44,1023338,75,"enu'",1023616,42,"inheritdoc",1023662,70,"inheritdoc",1023736,71,1023351,32,"ottom",1023613,45,"inheritdoc\n         */\n        height",959117,37,849578,44,"width",959117,37,849578,44,"defaultType: 'button',\n        /**",1023645,38,"showAnim",1153597,37,"hide\n         */\n",749197,37,"/**",1023645,38,"center",1530223,35,"hide\n         */\n        modal",1089728,32,"hide\n         */\n        hidden",1089728,32,"hide",1038048,36,"true,\n        /**",1023645,38,1866489,47,"null",859880,44,") {\n        this.config.translatable.translationMethod = Ext.browser.is.AndroidStock2 ? 'cssposition' : 'csstransform'",1867199,49,"platformConfig: [\n        {\n            theme: [\n                'Windows'\n            ]\n        },\n        {\n            theme: [\n                'Blackberry'\n            ],\n            ui: 'context',\n            layout: {\n                pack: 'center'\n            }\n        }\n    ],\n",764665,47,853087,32,"    if (newUi != oldUi && Ext.theme.is.Blackberry) {\n            if (newUi == 'context') {",787020,35,"swapCls('x-vertical', 'x-horizontal');\n            } else if (newUi == 'application') {",787020,35,"swapCls('x-horizontal', 'x-vertical",20783,33,1041166,155,341903,33,"Viewport.hideMenu(this.$side);",1353712,32,"\n    },\n    /**\n     * Only fire the hide event if it is initialized\n     */\n    doSetHidde",1260831,33,1057233,32,800559,32,"\n    }\n});\n\n/**\n * {@link Ext.Title} is used for the {@link Ext.Toolbar#title} configuration in the {@link Ext.Toolbar} component",663552,34,"Title",1000495,36,"xtype: 'title",1149344,44,1023338,53,"'x-title",1221408,32,"String} title The title text\n         */\n        title: ''\n    },\n    // @private\n    updateTitle: function(newTitle) {\n        this.setHtml(newTitle);\n    }\n});\n\n/**\nThe {@link Ext.Spacer} component is generally used to put space between items in {@link Ext.Toolbar} components.\n\n## Examples\n\nBy default the {@link #flex} configuration is set to 1:\n\n",1078632,32,889679,34,"       fullscreen: true,\n        items:",1006656,33,"xtype : 'toolbar',\n",1686687,32,"               items: [",995466,55,"button',\n                        text : 'Button One'",789050,44,993845,34,"spacer'",789050,44,"{\n        ",536815,38,"                   text : 'Button Two'",18384,39,"]\n            }\n        ]\n    });\n\nAlternatively you can just set the {@link #width} configuration which will get the {@link Ext.Spacer} a fixed width:\n\n    @example preview\n",889678,35,"       fullscreen: true,\n        layout: {\n            type: 'vbox',\n            pack: 'center',\n            align: 'stretch'\n        },\n        items:",1006656,33,"xtype : 'toolbar',\n",1686687,32,"               items: [",995466,55,"button',\n                        text : 'Button One'",789050,44,993845,34,"spacer'",994402,35,789050,44,"{\n        ",536815,38,"                   text : 'Button Two'",18384,39,"]",1135584,46,"xtype: 'container',\n                items: [",995466,55,"button',\n                        text : 'Change Ext.Spacer width',\n                        handle",1863631,36,"        //get the spacer using ComponentQuery",146194,33,"spacer = Ext.ComponentQuery.query('spacer')[0]",649344,34,"from =",649517,37,"to = 250;\n\n                            //set the width to a random number\n                            spacer.setWidth(Math.floor(Math.random() * (to - from + 1) + from)",238592,67,"]\n            }\n        ]\n    });\n\nYou can also insert multiple {@link Ext.Spacer}'s:\n\n    @example preview\n",889678,35,"       fullscreen: true,\n        items:",1006656,33,"xtype : 'toolbar',\n",1686687,32,"               items: [",995466,55,"button',\n                        text : 'Button One'",789050,44,993845,34,"spacer'",789050,44,"{\n        ",536815,38,"                   text : 'Button Two'",789050,44,993845,34,"spacer'",994402,33,"20",789050,44,"{\n        ",536815,38,"                   text : 'Button Three'",18384,39,"]\n            }\n        ]\n    });\n */\nExt.define('Ext.Spacer",1000495,36,"alias: 'widget.spacer',\n    config: {},\n",849375,33,"flex\n         * The flex value of this spacer. This defaults to 1, if no width has been se",1222975,40,"/**\n         * @cfg {Number",741448,37,"spacer. If this is set, the value of {@link #flex} will be ignor",1037774,41,"// @private",891056,45,1480041,35,"!config.width) {\n            config.flex = 1",708000,36,1821294,37,"}\n});\n\n/**\n * @aside video tabs-toolbars\n *\n * {@link Ext.Toolbar}s are most commonly used as docked items as within a {@link Ext.Container}. They can be docked either `top` or `bottom` using the {@link #docked} configuration.\n *\n * They allow you to insert items (normally {@link Ext.Button buttons}) and also add a {@link #title}.\n *\n * The {@link #defaultType} of {@link Ext.Toolbar} is {@link Ext.Button}.\n *\n * You can alternatively use {@link Ext.TitleBar} if you want the title to automatically adjust the size of its items.\n *\n * ## Examples\n *\n *",1078631,34,889677,83,"{\n *             type: 'vbox',\n *             pack: 'center'\n *         }",887472,58,"xtype ",729595,32,1686703,34,"title: 'My Toolbar'",1310720,34,1869759,60,"defaults: {\n *     ",536815,34,"*                     margin: '10 10 0 10",1163000,43,"items",1594243,56,"text: 'Toggle docked',\n *                         handler: function() {",1313776,32,"var toolbar = Ext.ComponentQuery.query('toolbar')[0]",1313775,37,"newDocked = (toolbar.getDocked() === 'top') ? 'bottom' : 'top'",1401006,32,"    toolbar.setDocked(newDocked);\n *        ",1311230,34,1594415,63,"text: 'Toggle UI',\n *                         handler: function() {",1313776,32,"var toolbar = Ext.ComponentQuery.query('toolbar')[0]",1313775,37,"newUi = (toolbar.getUi() === 'light') ? 'dark' : 'light'",1401006,32,"    toolbar.setUi(newUi);\n *        ",1311230,34,1594415,63,"text: 'Change tit",1165583,32,"handler: function() {",1313776,32,"var toolbar = Ext.ComponentQuery.query('toolbar')[0]",1313775,37,"titles = ['My Toolbar', 'Ext.Toolbar', 'Configurations are awesome!', 'Beautiful.']",649344,34,"   //internally, the title configuration gets converted into a {@link Ext.Title}",802640,32,"               //so you must get the title configuration of that component",1313776,36,"title = toolbar.getTitle().getTitle()",1313775,37,"newTitle = titles[titles.indexOf(title) + 1] || title",1401002,36,"    toolbar.setTitle(newTitle);\n *        ",1311230,34,1595072,69,");\n *\n * ## Notes\n *\n",744198,131,"*\n *     <!doctype html>\n *\n",744389,60,"*\n *     <!doctype html>\n *     <html>\n *         <head>\n",744546,52,"*             ...\n *\n */\nExt.define('Ext.Toolbar",1817152,44,"toolbar',\n    // @private\n    isToolbar",1402271,50,"baseCls",1023338,74,"toolbar",1221408,32,"String} ui\n         * The ui for this {@link Ext.Toolbar}. Either 'light' or 'dark'. You can create more UIs by using using the CSS Mixin {@link #sencha-toolbar-ui}",1605488,42,"ui: 'dark",1221408,32,"String/Ext.Title} title\n         * The title of the toolbar",836480,43,"title",1240512,52,"Type\n         * The default xtype to creat",1422719,44,"defaultType: 'button",1221408,32,744024,34,"ed position for this {@link Ext.Toolbar}.\n         * If you specify `left` or `right`, the {@link #layout} configuration will automatically change to a `vbox`. It's also\n         * recommended to adjust the {@link #width} of the toolbar if you do thi",1606288,44,"/**\n         * @cfg {",742724,48,"height of the Toolbar",1037776,44,"inHeigh",930688,38,1032251,734,1819984,54,520411,34,"f you set the {@link #docked} configuration to `left` or `right`, the default layout will change from the\n         * `hbox` to a `vbox`",752400,54,"layout: {\n",1819420,35,"   align: 'center'\n        }\n    },\n    hasCSSMinHeight",1038111,52,1480041,42,"docked == \"left\" || config.docked == \"right\") {\n            config.layout = {\n                type: 'vbox',\n                align: 'stretch",544576,35,1480316,60,"// @private\n    applyTitle: function(title) {\n        if (typeof title == 'string') {\n            title = {\n                title: title,\n                centered: Ext.theme.is.Tizen ? false : true",945536,34,"return Ext.factory(title, Ext.Title, this.getTitle());\n    },\n    // @private\n    updateTitle: function(newTitle, oldTitle) {\n        if (newTitle) {\n            this.add(newTitle);\n        }\n        if (oldTitle) {\n            oldTitle",434912,33,"/**\n     * Shows the title, if it exists.\n     */\n    showTitle: function() {\n        var title = this.getTitle();\n        if (title) {\n            title.show(",463328,35,"Hides the title, if it exists.\n     */\n    hideTitle: function() {\n        var title = this.getTitle();\n        if (title) {\n            title.hide();\n        }\n    }\n}, /**\n     * Returns an {@link Ext.Title} component.\n     * @member Ext.Toolbar\n     * @method getTitle\n     * @return {Ext.Title}\n     */\n/**\n     * Use this to update the {@link #title} configuration.\n     * @member Ext.Toolbar\n     * @method setTitle\n     * @param {String/Ext.Title} title You can either pass a String, or a config/instance of {@link Ext.Title}.\n     */\n",723483,53,"field.Inpu",1000494,37,"xtype: 'input',\n    /**\n     * @event clearicontap\n     * Fires whenever the clear icon is tapped.\n     * @param {Ext.field.Input} this",1023977,64,"/**\n     * @event masktap\n     * @preventable doMaskTap\n     * Fires whenever a mask is tapped.\n     * @param {Ext.field.Input} this",1023977,51,956160,32,"focus\n     * @preventable doFocus\n     * Fires whenever the input get focus.",1023977,51,956160,32,"blur\n     * @preventable doBlur\n     * Fires whenever the input loses focus.",1023977,51,956160,32,"click\n     * Fires whenever the input is clicked.",1023977,51,956160,32,"keyup\n     * Fires whenever keyup is detected.",1023977,51,956160,32,"paste\n     * Fires whenever paste is detected.",1023977,51,956160,32,"mousedown\n     * Fires whenever the input has a mousedown occur.",1023977,51,".",1689888,35,"String} tag The el tag.\n     * @private\n     */\n    tag: 'input',\n    cachedC",1188304,46,"cls The `className` to be applied to this inpu",1222975,44,"cls: Ext.baseCSSPrefix + 'form-field",1221408,32,"String} focusCls The CSS class to use when the field receives focu",1606288,44,"focusCls: Ext.baseCSSPrefix + 'field-focus',\n        // @private\n        maskCls: Ext.baseCSSPrefix + 'field-mask',\n        /**\n          * @cfg {String/Boolean} useMask\n         * `true` to use a mask on this field, or `auto` to automatically select when you should use it",1614000,32,1449135,34,"Mask",1189133,39,"String} type The type attribute for input fields -- e.g. radio, text, password.\n         *\n         * If you want to use a `file` input, please use the {@link Ext.field.File} component instea",1037775,44,"type: 'tex",849200,42,"checked `true` if the checkbox should render initially check",1037774,45,"checked: false",1252062,49,1023338,74,"field-inpu",849200,33,"String} name The field's HTML name attribute.\n         * __Note:__ This property must be set if this field is to be automatically included with\n         * {@link Ext.form.Panel#method-submit form submit()",1457407,44,1422767,41,"Mixed} value A value to initialize this field with",836480,43,"value",1037824,32,"property {Boolean} `true` if the field currently has focu",1606288,44,"isFocu",1530222,41,"Number} tabIndex The `tabIndex` for this field.",520411,33,"This only applies to fields that are rendered, not those which are built via `applyTo`",836480,43,"tabIndex",1240512,45,"placeHolder A string value displayed in the input (if supported) when the control is empty",836480,44,"laceHold",1153791,39,"Number} [minValue=undefined] The minimum value that this Number field can accept (defaults to `undefined`, e.g. no minimum",1367776,44,"minValue",1037824,37,"Number} [maxValue=undefined] The maximum value that this Number field can accept (defaults to `undefined`, e.g. no maximum",1367776,44,"maxValue",1037824,37,"Number} [stepValue=undefined] The amount by which the field is incremented or decremented each time the spinner is tapped.",1088179,35,", which means that the field goes up or down by 1 each time the spinner is tapp",1037774,45,"stepValue",1037824,37,"Number} [maxLength=0] The maximum number of permitted input character",1606288,44,"maxLength",1037824,46,"[autoComplete=undefined]\n         * `true` to set the field's DOM element `autocomplete` attribute to `\"on\"`, `false` to set to `\"off\"`. Defaults to `undefined`, leaving the attribute unset",1605696,47,"Complete",1037824,46,"[autoCapitalize=undefined]\n         * `true` to set the field's DOM element `autocapitalize` attribute to `\"on\"`, `false` to set to `\"off\"`. Defaults to `undefined`, leaving the attribute unset",1605488,46,"Capitaliz",1153454,32,"`true` to set the field DOM element `autocorrect` attribute to `\"on\"`, `false` to set to `\"off\"`. Defaults to `undefined`, leaving the attribute unset.\n         * @cfg {Boolean} autoCorrect",1605488,46,"Correc",930688,38,"Boolean} [readOnly=undefined]\n         * `true` to set the field DOM element `readonly` attribute to `\"true\"`. Defaults to `undefined`, leaving the attribute unse",1222975,44,"readOnly",1037824,37,"Number} [maxRows=undefined]\n         * Sets the field DOM element `maxRows` attribute. Defaults to `undefined`, leaving the attribute unset",1037776,44,"axRow",1224160,44,"} pattern The value for the HTML5 `pattern` attribute.\n         * You can use this to change which keyboard layout will be used",1214480,32,"define('Ux.field.Pattern', {\n         *         extend : 'Ext.field.Text',\n         *         xtype  : 'patternfield",155856,33,"config : {\n         *             component : {\n         *                 pattern : '[0-9]*",1610559,89,"Even though it extends {@link Ext.field.Text}, it will display the number keyboard",752400,54,"pattern",1037824,46,"[disabled=false] `true` to disable the field.\n         *\n         * Be aware that conformant with the [HTML specification](http://www.w3.org/TR/html401/interact/forms.html),\n         * disabled Fields will not be {@link Ext.form.Panel#method-submit submitted",1457407,44,"/**\n         * @cfg {Mixed} startValue\n         * The value that the Field had at the time it was last focused. This is the value that is passed\n         * to the {@link Ext.field.Text#change} event which is fired if the value has been changed when the Field is blurred.\n         *\n         * __This will be `undefined` until the Field has been visited.__ Compare {@link #originalValue}",1293984,44,"tartValue",1023536,36," {Boolean} fastFocus\n         *\n         * Enable Fast Input Focusing on iOS, using this workaround will stop some touchstart events in order to prevent\n         * delayed focus issue",1224080,43," */\n        fastFocus: true\n    },\n    /**\n     * @cfg {String/Number} originalValue The original value when the input is render",342606,32,"// @private",1150093,43,"items =",1080607,55,"put',\n                    tag: this.tag\n",789055,35,1735652,34,"mask',\n        ",1038432,41,"        this.config.maskCls\n",1145403,38,1735919,53,"clearIcon',\n                    cls: 'x-clear-icon'",208124,32,";",1066345,34,"ini",1800831,35,943003,33,");\n        me.input.on({\n",1049354,35,"keyup: 'onKeyUp',\n            keydown: 'onKeyDown',\n            focus: 'onFocus',\n            blur: 'onBlur',\n            input: 'onInput',\n            paste: 'onPaste',\n            tap: 'onInputTap'\n        });\n        // Stock android has a delayed mousedown event that is dispatched\n        // this prevents the mousedown from focus's an input when not intended (click a message box button or picker button that lays over an input)\n        // we then force focus on touchen",1748910,42,") {\n            me.input.dom.addEventListener(\"mousedown\"",430389,32,"if (document.activeElement != e.target) {\n        ",1828112,40,367385,34,"    me.input.dom.addEventListener(\"touchend\"",1839612,33,".focus();",857600,35,"me.mask.on({\n",1049354,35,"tap: 'onMaskTap'\n        });\n        if (me.clearIcon) {\n            me.clearIcon.on({\n                tap: 'onClearIconTap',\n                touchstart: 'onClearIconPress',\n                touchend: 'onClearIconRelease'",802502,52,"}\n        // Hack for IE10. Seems like keyup event is not fired for 'enter' keyboard button, so we use keypress event instead to handle enter.\n        if (Ext.browser.is.ie && Ext.browser.version.major >= 10) {\n            me.input.on({\n",1049350,43,"keypress: 'onKeyPress'",1630768,45,"astFocus: function(newValue) {\n        // This is used to prevent 300ms delayed focus bug on iOS\n        if (newValue) {\n            if (this.getFastFocus() && ",986348,33,"this.input.on({\n",789641,53,"touchstart: \"onTouchStart",940653,34,"}",1015152,35,"input.un({\n",789645,45,"touchstart: \"onTouchStart\"",1630768,38,"/**\n     * Manual Max Length processing is required for the stock \"Browser\" on Android",1550736,42,"'true' if non-chrome browser is detected on Android\n     */\n    useManualMaxLength",571103,38,"(Ext.os.is.Android && !Ext.browser.is.Chrome));\n    },\n    applyUseMask: function(useMask) {\n        if (useMask === 'auto') {\n            useMask = ",1712828,32,"lt('5');\n        }\n        return Boolean(useMask)",1151923,36,"useMask configuration\n     */\n    updateUseMask: function(newUseMask) {\n        this.mask[newUseMask ? 'show' : 'hide']();\n    },\n    updatePattern: function(pattern) {\n        this.updateFieldAttribute('pattern', pattern);\n    },\n    /**\n     * Helper method to update a specified attribute on the `fieldEl`, or remove the attribute all togeth",1116720,32,"updateFieldAttribute: function(attribute, newValue) {\n        var input = this.input;\n        if (!Ext.isEmpty(newValue, true)) {\n            input.dom.setAttribute(attribute, newV",1005167,36,"input.",415739,40,"}",1151924,35,"{@link #cls} configuration.\n     */\n",772222,50,"this.input.addCls(Ext.baseCSSPrefix + 'input-el');\n        this.inpu",772456,34,"},\n    /**\n     * Updates the type attribute with",858036,35,1259598,33,1411463,47,"prefix = Ext.baseCSSPrefix + 'input-';\n        this.input.replaceCls(prefix + oldType, prefix + newType);\n        this.updateFieldAttribute('type', newType)",1151923,36,"name attribute with the {@link #name",1152418,51,1237682,34,"this.updateFieldAttribute('name', newName",492288,37,"field data value.\n     * @return {Mixed} value The field value.\n     */",701887,40,"input = this.input;\n        if (input) {\n            this._value = input.dom.",704719,37,"_value;\n    },\n    // @private\n    apply",1004992,33,"return (Ext.isEmpty(value)) ? ''",644668,32,"Updates the {@link #value",1152418,51,"Value: function(newValue) {\n        var input = this.input;\n        if (input) {\n            input.dom.value = newValue;\n        }\n    },\n    setValue: function(newValue) {\n        var oldValue = this._value",1001730,32,"applyValue(newValue));\n        newV",899849,32,"if (String(newValue) != String(oldValue) && ",779616,32,"this.onChange(this, newValue, oldValue",1540128,46,"/ @private\n    applyTabIndex: function(tabIndex) {\n        if (tabIndex !== null && typeof tabI",1054964,32,"throw new Error(\"Ext.field.Field: [applyTabIndex] trying to pass a value which is not a number\");\n        }\n        return tabIndex",1151923,36,"tabIndex attribute with the {@link #tabIndex",1152016,50,"TabIndex: function(newTabIndex) {\n        this.updateFieldAttribute('tabIndex', newTabIndex);\n    },\n    // @private\n    testAutoFn",1388494,35,"[\n            true,\n            'on'\n        ].indexOf(value) !== -1;\n    },\n    applyMaxLength: function(maxLength) {\n        if (maxLength !== null && typeof maxLength != 'number'",319007,37,"field.Text: [applyMaxLength] trying to pass a value which is not a number\");\n        }\n        return maxLength",1151923,36,"`maxlength` attribute with the {@link #maxLength",1152418,52,"axLength: function(newMaxLength) {\n        if (!this.useManualMaxLength()) {\n            this.updateFieldAttribute('maxlength', newMaxLength",463328,35,"Updates the `placeholder` attribute with the {@link #placeHolder",1152418,51,"PlaceHolder: function(newPlaceHolder) {\n        this.updateFieldAttribute('placeholder', newPlaceHolder);\n    },\n    // @private\n    applyAutoComplete: function(autoComplete) {\n        return this.testAutoFn(autoComplete)",1151923,36,"`autocomplete` attribute with the {@link #autoComplete",1152418,51,"AutoComplete: function(newAutoComplete) {\n        var value = newAutoComplete ? 'on' : 'off';\n        this.updateFieldAttribute('autocomplete', value);\n    },\n    // @private\n    applyAutoCapitalize: function(autoCapitalize) {\n        return this.testAutoFn(autoCapitalize)",1151923,36,"`autocapitalize` attribute with the {@link #autoCapitalize",1152418,51,"AutoCapitalize: function(newAutoCapitalize) {\n        var value = newAutoCapitalize ? 'on' : 'off';\n        this.updateFieldAttribute('autocapitalize', value);\n    },\n    // @private\n    applyAutoCorrect: function(autoCorrect) {\n        return this.testAutoFn(autoCorrect)",1151923,36,"`autocorrect` attribute with the {@link #autoCorrect",1152418,51,"AutoCorrect: function(newAutoCorrect) {\n        var value = newAutoCorrect ? 'on' : 'off';\n        this.updateFieldAttribute('autocorrect', value)",1151923,36,"`min` attribute with the {@link #minValue",1152418,52,"inValue: function(newMinValue) {\n        this.updateFieldAttribute('min', newMinValue)",1151923,36,"`max` attribute with the {@link #maxValue",1152418,52,"axValue: function(newMaxValue) {\n        this.updateFieldAttribute('max', newMaxValue)",1151923,36,"`step` attribute with the {@link #stepValu",1152015,51,"StepValue: function(newStepValue) {\n        this.updateFieldAttribute('step', newStepValue);\n    },\n    // @private\n    checkedRe: /^(true|1|on)/i,\n    /**\n     * Returns the `checked` value of this field\n     * @return {Mixed} value The field value\n     */\n    getChecked: function() {\n        var el = this.input,\n            checked",487419,32,"checked = el.dom.checked;\n            this._checked = checked;\n        }\n        return checked;\n    },\n    // @private\n    applyChecked: function(checked) {\n        return !!this.checkedRe.test(String(checked));\n    },\n    setChecked: function(newChecked) {\n        this.updateChecked(this.applyChecked(newChecked));\n        this._checked = newChecked",1151923,36,"`autocorrect` attribute with the {@link #autoCorrect",1152016,50,"Checked: function(newChecked) {\n        this.input.dom.checked = newChecked",1151923,36,"`readonly` attribute with the {@link #readOnly",1152016,50,"ReadOnly: function(readOnly) {\n        this.updateFieldAttribute('readonly', readOnly ? true : null);\n    },\n    // @private\n    applyMaxRows: function(maxRows) {\n        if (maxRows !== null && typeof maxRows !== 'number'",319007,37,"field.Input: [applyMaxRows] trying to pass a value which is not a number\");\n        }\n        return maxRows;\n    },\n    updateMaxRows: function(newRows) {\n        this.updateFieldAttribute('rows', newRows);\n    },\n",784797,48,853087,32,"    if (Ext.browser.is.Safari && !",1741635,41,"input.dom.tabIndex = (disabled) ? -1 : 0;\n        }\n        this.input.dom.disabled = (Ext.browser.is.Safari && !Ext.os.is.BlackBerry) ? false : disabled;\n        if (!disabled) {\n            this.blu",1495856,37,"Returns `true` if the value of this Field has been changed from its original value.\n     * Will return `false` if the field is disabled or has not been rendered yet",1626622,41,"Dirt",546480,33,720454,61,"return String(this.getValue()) !== String(this.originalValue);\n    },\n    /**\n     * Resets the current field value to the original value.\n     */",701398,38,"setValue(this.originalValue);\n    },\n    // @private\n    onInputTap",720301,41,"inputtap",720575,36,"\n        ], 'doInputTap');\n    },\n    // @private\n    doInputTap: function(me, e) {\n        if (me",720453,62,"// Fast focus switching\n        if (this.getFastFocus() && Ext.os.is.iOS) {\n            me.focus();\n        }\n    },\n    // @private\n    onMaskTap",720301,41,"masktap",720575,36,"\n        ], 'doMaskTap');\n    },\n    // @private\n    doMaskTap: function(me, e) {\n        if (me",720453,62,"me.focus();\n    },\n    // @private\n    showMask",1260832,32,"getUseMask()) {\n            this.mask.setStyle('display', 'block');\n        }\n    },\n    // @private\n    hideMask",1260832,32,"getUseMask()) {\n            this.mask.setStyle('display', 'none",463327,36,"Attempts to set the field as the active input focus.\n     * @return {Ext.field.Input} this\n     */\n    focus",900368,50,"el = me.input;\n        if (el && el.dom.focus) {\n            el.dom.focus();",439888,52,"Attempts to forcefully blur input focus for the field.\n     * @return {Ext.field.Input",971578,37,"blu",1496048,51,"el = this.input;\n        if (el && el.dom.blur) {\n            el.dom.blur();",439888,52,"Attempts to forcefully select all the contents of the input field.\n     * @return {Ext.field.Input",971578,38,"elect",900368,50,"el = me.input;\n        if (el && el.dom.setSelectionRange) {\n            el.dom.setSelectionRange(0, 9999);",439888,41,"on",1822860,35,"ireAction('focus', [\n            e\n        ], 'doFocus');\n    },\n    // @private\n    doFocus",1759166,37,";\n        me.hideMask();\n        if (!me.getIsFocused()) {\n            me.setStart",1003076,36,"    me.setIsFocused(true)",1777213,49,"// This will prevent 300ms delayed focus from occurring on iOS\n        if (document.activeElement != e.target",1748991,50,"},\n    onBlur",720301,41,"blur', [\n            e\n        ], 'doBlur');\n    },\n    // @private\n    doBlur",1759166,51,900893,35,"startValue = me.getStartValue();\n        me.showMask();\n        me.setIsFocused(false);\n        if (String(value) != String(startValue)) {\n            me.onChange(me, value, startValue);\n        }\n    },\n    // @private\n    onClearIconTap",720301,33,"Event('clearicontap', this, e);\n        //focus the field after cleartap happens, but only on android.\n        //this is to stop the keyboard from hiding. TOUCH-2064\n   ",358441,35,"       this.focus();\n        }\n    },\n    onClearIconPress",1675553,33,"Icon.addCls(Ext.baseCSSPrefix + 'pressing');\n    },\n    onClearIconRelease",1675553,33,"Icon",471945,32,"pressing');\n    },\n    onClick",720301,33,"Event('click', e);\n    },\n    onChange: function(me, value, startValue) {\n        if (this.useManualMaxLength()) {\n            this.trimValueToMaxLength();\n        }\n",1184128,33,"me, value, startValue);\n    },\n    onPaste",1770240,33,"useManualMaxLength()) {\n            this.trimValueToMaxLength();\n        }\n        this.fireEvent('paste', e);\n    },\n    onKeyUp",1770240,33,"useManualMaxLength()) {\n            this.trimValueToMaxLength();\n        }\n        this.fireEvent('keyup', e);\n    },\n    onKeyDown: function() {\n        // tell the class to ignore the input event. this happens when we want to listen to the field change\n        // when the input autocompletes\n        this.ignoreInput = true;\n    },\n    on",1827311,33,"me = this;\n        // if we should ignore input, stop now.\n        if (me.ignoreInput) {\n            me.ignoreInput = false",1834559,40,"// set a timeout for 10ms to check if we want to stop the input event.\n        // if not, then continue with the event (keyup)",471888,45,"if (!me.ignoreInput",759913,34,"keyup', e);\n                me.ignoreInput",804400,32,"}, 10);\n    },\n    // Hack for IE10 mobile. Handle pressing 'enter' button and fire keyup event in this case.\n    onKeyPress: function(e) {\n        if (e.browserEvent.keyCode == 13",974495,32,"keyup', e);\n        }\n    },\n    onMouseDown",720301,33,"Event('mousedown', e);\n    },\n    trimValueToMaxLength: function() {\n        var maxLength = this.getMaxLength();\n        if (maxLength) {",899831,58,"value.length > this.getMaxLength()) {\n                this.setValue(value.slice(0, maxLength)",20784,32,"\n});\n\n/**\n * @aside guide forms\n *\n * Field is the base class for all form fields used in Sencha Touch. It provides a lot of shared functionality to all\n * field subclasses (for example labels, simple validation, {@link #clearIcon clearing} and tab index management), but\n * is rarely used directly. Instead, it is much more common to use one of the field subclasses:\n *\n *     xtype            Class\n *    ",730864,40,"\n *     textfield        {@link Ext.field.Text}\n *     numberfield      {@link Ext.field.Number}\n *     textareafield    {@link Ext.field.TextArea}\n *     hiddenfield      {@link Ext.field.Hidden}\n *     radiofield       {@link Ext.field.Radio}\n *     filefield        {@link Ext.field.File}\n *     checkboxfield    {@link Ext.field.Checkbox}\n *     selectfield      {@link Ext.field.Select}\n *     togglefield      {@link Ext.field.Toggle}\n *     fieldset         {@link Ext.form.FieldSet}\n *\n * Fields are normally used within the context of a form and/or fieldset. See the {@link Ext.form.Panel FormPanel}\n * and {@link Ext.form.FieldSet FieldSet} docs for examples on how to put those together, or the list of links above\n * for usage of individual field types. If you wish to create your own Field subclasses you can extend this class,\n * though it is sometimes more useful to extend {@link Ext.field.Text} as this provides additional text entry\n * functionality.\n */\nExt.define('Ext.field.Field', {\n    extend: Ext.Decorator",848912,32,"orm.Field',\n    xtype: 'field',\n    /**\n     * Set to `true` on all Ext.field.Field subclasses. This is used by {@link Ext.form.Panel#getValues} to determine which\n     * components inside a form are fields.\n     * @property isField",1361272,34,"isField: true,\n    // @private\n    isForm",1402266,54,1023338,74,"field',\n        /**\n         * The label of this field\n         * @cfg {String} label",1605488,42,"lab",1367472,39,"String} labelAlign The position to render the label relative to the field input.\n         * Available options are: 'top', 'left', 'bottom' and 'right'",1605488,42,"labelAlig",849193,40,"Number/String} labelWidth The width to make this field's label",836480,43,"labelWidth: '30%",1221408,32,"Boolean} labelWrap `true` to allow the label to wrap. If set to `false`, the label will be truncated with\n         * an ellipsi",1606288,44,"labelWrap",1023536,36," {Boolean} clearIcon `true` to use a clear icon in this fiel",1037775,44,"clearIc",1153600,39,"Boolean} required `true` to make this field required.",520411,33,"this only causes a visual indication.\n         *\n         * Doesn't prevent user from submitting the form",836480,43,"requir",1530223,34,"The label Element associated with this Field.",520411,33,"Only available if a {@link #label} is specified.\n         * @type Ext.Element\n         * @property labelEl\n         * @deprecated 2.0",1217344,42,"String} [inputType='text'] The type attribute for input fields -- e.g. radio, text, password, file.\n         * The types 'file' and 'password' must be used to render those field types currently -- there are\n         * no separate Ext components for those.\n    ",1691098,34,"`input.type` instea",1037775,44,"inputType",1240512,45,"name The field's HTML name attribute.",520411,33,"this property must be set if this field is to be automatically included with.\n         * {@link Ext.form.Panel#method-submit form submit()",1457407,44,1422767,41,"Mixed} value A value to initialize this field with",836480,43,"value",1037824,37,"Number} tabIndex The `tabIndex` for this field. Note this only applies to fields that are rendered,\n         * not those which are built via `applyTo`",836480,43,"tabIndex: null\n    },\n",1421312,33,"component The inner component for this field.\n         */\n",1293136,34,"fullscreen",1023645,34,"platformConfig: [\n        {\n            theme: [\n                'Windows',\n                'MountainView',\n                'Blackberry',\n                'Tizen'\n            ],\n            labelAlign: 'top'\n        }\n    ],\n    cachedC",1188304,46,"labelCls Optional CSS class to add to the Label",1149807,51,"label",1224158,46,"} requiredCls The `className` to be applied to this Field when the {@link #required} configuration is set",738910,53,"requiredCls: Ext.baseCSSPrefix + 'field-required",1221408,32,"String} inputCls CSS class to add to the input element of this fields {@link #component}\n         */\n        inputCls: null\n    ",696639,33,"isFocused\n     * `true` if this field is currently focus",342606,32,760638,39,"var p",1829819,35,1728384,41,",\n            className: 'x-contain",1012591,67,"reference: 'label',\n",1150571,35,"form-label",1012687,89,"reference: 'label",1151488,35,"tag: 'span'",86384,47,"]\n",789055,35,1735652,34,1038605,37,"s: prefix + 'component-outer'",1736188,55,"// @private\n    updateLabel: function(newLabel, oldLabel) {\n        var renderE",1082607,41,"p",1829819,35,"if (newLabel) {\n            this.labelspan.setHtml(newLabel);\n            renderElement.addCls(prefix + 'field-labeled",460095,33,"renderElement.removeCls(prefix + 'field-labeled');\n        }\n    },\n    // @private\n    updateLabelAlign: function(newLabelAlign, oldLabelAlign) {\n        var renderE",1082607,41,"p",1829819,35,"if (newLabelAlign) {\n            renderElement.addCls(prefix + 'label-align-' + newLabelAlign);\n            if (newLabelAlign == \"top\" || newLabelAlign == \"bottom\") {\n                this.label.setWidth('100%",390240,41,"this.updateLabelWidth(this.getLabelWidth()",1053968,39,"oldLabelAlign) {\n            renderElement.removeCls(prefix + 'label-align-' + oldLabelAlign);\n        }\n    },\n    // @private\n    updateLabelCls: function(newLabelCls, oldLabelCls) {\n        if (newLabelCls) {\n            this.label.addCls(newLabe",965170,32,"LabelCls) {\n            this.label.removeCls(oldLabelCls);\n        }\n    },\n    // @private\n    updateLabelWidth: function(newLabelWidth) {\n        var labelAlign = this.getLabelAlign();\n        if (newLabelWidth) {\n            if (labelAlign == \"top\" || labelAlign == \"bottom\") {\n                this.label.setWidth('100%",390240,41,"this.label.setWidth(newLabelWid",1003775,40,"// @private\n    updateLabelWrap: function(newLabelWrap, oldLabelWrap",1152094,43,"form-label-nowrap';\n        if (!newLabelWrap",1152173,98,"},\n",772515,35,"required",1152418,51,"Required: function(newRequired) {\n        this.renderElement[newRequired",1024940,35,"RequiredCls())",1151923,36,"{@link #required",1152016,50,"RequiredCls: function(newRequiredCls, oldRequiredCls) {\n        if (this.getRequired()",792353,35,"replaceCls(oldRequiredCls, newRequiredCls);\n        }\n    },\n    // @private",549728,38,942999,37,");\n        me.doInitValu",1192703,48,"doInitValue: function(",483966,38,"Mixed} originalValue\n         * The original value of the field as configured in the {@link #value} configuration.\n         * setting is `true`.\n         */\n        this.originalValue = this.getInitialConfig().value;\n    },\n    /**\n     * Resets the current field value back to the original value on this field when it was created.\n     *\n",1478151,33,"field with an original value\n     *     var field =",326771,35,"xtype: 'textfield',\n     *         value: 'first value'",239088,38,"pdate the value\n     *     field.setValue('new value');\n     *\n     *     // Now you can reset it back to the `first value`\n     *     field.reset();\n     *\n     * @return {Ext.field.Field} this\n     */",701398,38,"setValue(this.originalValue",472000,48,"sets the field's {@link #originalValue} property so it matches the current {@link #getValue value}. This is\n     * called by {@link Ext.form.Panel}.{@link Ext.form.Panel#setValues setValues} if the form's\n     * {@link Ext.form.Panel#trackResetOnLoad trackResetOnLoad} property is set to true.\n     */\n    resetOriginalValue: function() {\n        this.originalValue = this.getValue(",1682064,47,"value of this Field has been changed from its {@link #originalValue}.\n     * Will return `false` if the field is disabled or has not been rendered yet.\n     *",600112,38,"is field has been changed from its original value (and\n     * is not disabled)",600200,33,"isDirty",1855371,42,"\n}, function() {});\n\n/**\n * @aside guide forms\n *\n * The text field is the basis for most of the input fields in Sencha Touch. It provides a baseline of shared\n * functionality such as input validation, standard events, state management and look and feel. Typically we create\n * text fields inside a form, like this",887360,44,"form",732447,51,887485,45,"xtype: 'fieldset',\n *                 title: 'Enter your name',\n *        ",729408,33,1400717,33,"    xtype: 'textfield',\n *                         label: 'First Name',\n *    ",1400729,38,1594399,79,"xtype: 'textfield',\n *                         label: 'Last Name',\n *                         name: 'lastName'",1595056,85,");\n *\n * This creates two text fields inside a form. Text Fields can also be created outside of a Form,",1160642,38,"field.Text', {\n *         label: 'Your Name',\n *         value: 'Ed Spencer'\n *     });\n *\n * ## Configuring\n *\n * Text field offers several configuration options, including {@link #placeHolder}, {@link #maxLength},\n * {@link #autoComplete}, {@link #autoCapitalize} and {@link #autoCorrect}. For example, here is how we would configure\n * a text field to have a maximum length of 10 characters, with placeholder text that disappears when the field is\n * focused:\n *\n *     Ext.create('Ext.field.Text', {\n *         label: 'Username',\n *         maxLength: 10,\n *         placeHolder: 'Enter your username'\n *     });\n *\n * The autoComplete, autoCapitalize and autoCorrect configs simply set those attributes on the text field and allow the\n * native browser to provide those capabilities. For example, to enable auto complete and auto correct, simply\n * configure your text field",1160642,38,"field.Text', {\n *         label: 'Username',\n *         autoComplete: true,\n *         autoCorrect: true\n *     });\n *\n * These configurations will be picked up by the native browser, which will enable the options at the OS level.\n *\n * Text field inherits from {@link Ext.field.Field}, which is the base class for all fields in Sencha Touch and provides\n * a lot of shared functionality for all fields, including setting values, clearing and basic validation. See the\n * {@link Ext.field.Field} documentation to see how to leverage its capabilities.\n */\nExt.define('Ext.field.Text', {\n    extend: Ext.field.Field,\n    xtype: 'textfield'",848912,32,"orm.Text',\n    /**\n     * @event focus\n     * Fires when this field receives input focus\n     * @param {Ext.field.Text} this This field",714576,34,1603756,32,"lur\n     * Fires when this field loses input focus\n     * @param {Ext.field.Text} this This field",714576,34,"\n     */\n    /**\n     * @event paste\n     * Fires when this field is pasted.\n     * @param {Ext.field.Text} this This field",714576,34,1029363,33,"usedown\n     * Fires when this field receives a mousedown\n     * @param {Ext.field.Text} this This field",714576,34,"\n     */\n    /**\n     * @event keyup\n     * @preventable doKeyUp\n     * Fires when a key is released on the input element\n     * @param {Ext.field.Text} this This field",714576,34,1604021,36,"icontap\n     * @preventable doClearIconTap\n     * Fires when the clear icon is tapped\n     * @param {Ext.field.Text} this This field",714576,34,"\n     */",1182317,43,"just before the field blurs if the field value has changed\n     * @param {Ext.field.Text} this This field\n     * @param {Mixed} newValue The new value\n     * @param {Mixed} oldValue The original valu",1603755,32,"action\n     * @preventable doAction\n     * Fires whenever the return key or go is pressed. FormPanel listeners\n     * for this event, and submits itself whenever it fires. Also note\n     * that this event bubbles up to parent containers.\n     * @param {Ext.field.Text} this This field\n     * @param {Mixed} e The key event object",1817807,50,849578,44,"ui: 'text'",1023616,42,"inheritdoc\n         */\n        clearIcon",1089728,45,"placeHolder A string value displayed in the input (if supported) when the control is empty",836480,44,"laceHold",1153791,39,"Number} maxLength The maximum number of permitted input character",1606288,44,"maxLengt",1294774,32,"True to set the field's DOM element autocomplete attribute to \"on\", false to set to \"off\".\n         * @cfg {Boolean} autoComplete",1605488,46,"Complet",1153454,32,"True to set the field's DOM element autocapitalize attribute to \"on\", false to set to \"off\".\n         * @cfg {Boolean} autoCapitalize",1605488,46,"Capitaliz",1153454,32,"True to set the field DOM element autocorrect attribute to \"on\", false to set to \"off\".\n         * @cfg {Boolean} autoCorrect",1605488,46,"Correc",930688,32,"True to set the field DOM element readonly attribute to true.\n         * @cfg {Boolean} readOnly",1605488,42,"readOnly",1609872,45,"component The inner component for this field, which defaults to an input tex",1222975,44,"component: {\n            xtype: 'input',\n            type: 'text',\n            fastFocus: true\n        },\n        bubbleEvents: [\n            'action'\n        ]\n    },\n    // @private",549728,38,942999,37,");\n        me.getComponent().on({",1739310,38,"keyup: 'onKeyUp',\n            change: 'onChange',\n            focus: 'onFocus',\n            blur: 'onBlur',\n            paste: 'onPaste',\n            mousedown: 'onMouseDown',\n            clearicontap: 'onClearIconTap'\n        });\n        // set the originalValue of the textfield, if one exists\n        me.originalValue = me.getValue() || \"\";\n        me.getComponent().originalValue = me.originalValue;\n        me.syncEmptyCls();\n    },\n    syncEmptyCls: function() {\n        var empty = (this._value) ? this._value.length : false,\n            cls = Ext.baseCSSPrefix + 'empty';\n        if (empty)",1152221,45," else",1152174,42,"\n    },\n    // @private\n    updateValue: function(newValue",1021123,33,"getComponent(),\n            // allows newValue to be zero but not undefined or null (other falsey values)\n            valueValid = newValue !== undefined && newValue !== null && newValue !== \"\"",1699417,39,"component.setValue(newValue);\n        }\n        this[valueValid && this.isDirty() ? 'showClearIcon' : 'hideClearIcon']();\n        this.syncEmptyCls(",951452,50,"e = this;\n        me._value = me.getComponent().getValue();\n        me.syncEmptyCls();\n        return me._value;\n    },\n    // @private\n    updatePlaceHolder: function(newPlaceHolder) {\n        this.getComponent().setPlaceHolder(newPlaceHolder);\n    },\n    // @private\n    updateMaxLength: function(newMaxLength) {\n        this.getComponent().setMaxLength(newMaxLength);\n    },\n    // @private\n    updateAutoComplete: function(newAutoComplete) {\n        this.getComponent().setAutoComplete(newAutoComplete);\n    },\n    // @private\n    updateAutoCapitalize: function(newAutoCapitalize) {\n        this.getComponent().setAutoCapitalize(newAutoCapitalize);\n    },\n    // @private\n    updateAutoCorrect: function(newAutoCorrect) {\n        this.getComponent().setAutoCorrect(newAutoCorrect);\n    },\n    // @private\n    updateReadOnly: function(newReadOnly) {\n        if (newReadOnly) {\n            this.hideClearIcon",963567,38,"showClearIcon();\n        }\n        this.getComponent().setReadOnly(newReadOnly);\n    },\n    // @private\n    updateInputType: function(newInputType",1021123,33,"getComponent(",1699416,40,"component.setType(newInputType);\n        }\n    },\n    // @private",1237671,45,"var component = this.getComponent(",1699416,40,"component.setName(newName);\n        }\n    },\n    // @private\n    updateTabIndex: function(newTabIndex",1021123,33,"getComponent(",1699416,40,"component.setTabIndex(newTabI",1057776,39,"Updates the {@link #inputCls} configuration on this fields {@link #component}",1152704,37,"putCls: function(newInputCls, oldInputCls",1021123,33,"getComponent(",1699416,40,"component.replaceCls(oldInputCls, newInputCls);\n        }\n    },\n",784797,48,942999,57,"var component = me.getComponent(",1699416,40,"component.setDisabled(disabled);\n        }",963510,37,"me.hideClearIc",870909,35,"me.showClearIcon();\n        }\n    },\n    // @private\n    showClearIco",900367,51,900893,35,"// allows value to be zero but not undefined or null (other falsey values)\n            valueValid = ",1393751,51,"\"\";\n        if (me.getClearIcon() && !me.getDisabled() && !me.getReadOnly() && valueValid) {\n            me.element.addCls(Ext.baseCSSPrefix + 'field-clearable');",439888,42,"/ @private\n    hideClearIco",1260831,33,"getClearIcon()) {\n",779307,35,"Ext.baseCSSPrefix + 'field-clearable');\n        }\n    },\n    onKeyUp",720301,41,"keyup",720575,36,"\n        ], 'doKeyUp');\n    },\n    /**\n     * Called when a key has been pressed in the `<input>`\n     * @private\n     */\n    doKeyUp: function(me, e) {\n        // getValue to ensure that we are in sync with the dom\n        var",900892,36,"// allows value to be zero but not undefined or null (other falsey values)\n            valueValid = ",1393751,51,"\"\";\n        this[valueValid ? 'showClearIcon' : 'hideClearIcon']();\n        if (e.browserEvent.keyCode === 13) {\n            me.fireAction('action', [\n",1555822,36,"e\n            ], 'doAction');\n        }\n    },\n    doA",1253548,33,"blur();\n    },\n    onClearIconTap",720301,41,"clearicontap",720575,36,"\n        ], 'doClearIconTap');\n    },\n    // @private\n    doClearIconTap: function(me, e) {\n        me.setValue('');\n        //sync with the input\n        me.getValue();\n    },\n    onChange: function(me, value, startValue) {\n        me.fireEvent('change', this, value, startValue);\n    },\n    on",1822860,34,"addCls(Ext.baseCSSPrefix + 'field-focused');\n        this.isFocused",975960,33,"focus', this, e);\n    },\n    onBlur",1759166,37,";\n        this",471945,32,"field-focused');\n        this.isFocused",871754,32,"blur', me, e",471886,47,"me.isFocused = false;\n        }, 50);\n    },\n    onPast",720300,34,"Event('paste', this, e);\n    },\n    onMouseDown",720301,33,"Event('mousedown', this, e)",305304,36,"set the field as the active input focus.\n     * @return {Ext.field.Text} This field\n     */\n    focu",963246,34,"mponent().focus(",428976,46,"Attempts to forcefully blur input focus for the field.\n     * @return {Ext.field.Text} This field\n     */\n    blur",963247,33,"mponent().blur(",428976,46,"Attempts to forcefully select all the contents of the input field.\n     * @return {Ext.field.Text} this\n     */\n    select",963247,33,"mponent().selec",1830318,37,"resetOriginalValue",1063168,39,");\n        var component = this.getComponent();\n        if (component && component.hasOwnProperty(\"originalValue\")) {\n            this.getComponent().originalValue = this.originalValue;\n        }",701369,67,"getComponent().reset();\n        //we need to call this to sync the input with this field\n        this.getValue();\n        this[this.isDirty() ? 'showClearIcon' : 'hideClearIcon']();\n    },\n    is",1567974,32,"component = this.getComponent(",1699416,40,"return component.isDirty(",1108896,40,853120,43,"ield.TextAreaInput', {\n    extend: Ext.field.Input,\n    xtype: 'textareainput',\n    tag: 'textarea'\n});\n\n/**\n * @aside guide forms\n *\n * Creates an HTML textarea field on the page. This is useful whenever you need the user to enter large amounts of text\n * (i.e. more than a few words). Typically, text entry on mobile devices is not a pleasant experience for the user so\n * it's good to limit your use of text areas to only those occasions when free form text is required or alternative\n * input methods like select boxes or radio buttons are not possible. Text Areas are usually created inside forms, like\n * this",887360,44,"form",732447,51,887485,45,"xtype: 'fieldset',\n *                 title: 'About you',\n *        ",729408,33,1400717,33,"    xtype: 'textfield',\n *                         label: 'Name',\n *                         name: 'name'",1594399,79,"xtype: 'textareafield',\n *                         label: 'Bio',\n *                         maxRows: 4,\n *                         name: 'bio'",1595056,85,1590223,32,"'re creating a form with a {@link Ext.field.Text text field} for the user's name and a text\n * area for their bio. We used the {@link #maxRows} configuration on the text area to tell it to grow to a maximum of 4\n * rows of text before it starts using a scroll bar inside the text area to scroll the text.\n *\n * We can also create a text area outside the context of a form, like this:\n *\n * This creates two text fields inside a form. Text Fields can also be created outside of a Form,",1160642,38,"field.TextArea', {\n *         label: 'About You',\n *         {@link #placeHolder}: 'Tell us about yourself...'",929663,32,"field.TextArea', {\n    extend: Ext.field.Text,\n    xtype: 'textareafield'",848912,32,"orm.TextArea",1149344,44,849578,44,"ui: 'textarea'",1023616,42,"inheritdoc\n         */\n        autoCapital",1818560,36,849575,47,"component: {\n            xtype: 'textareainput'",170384,36,"cfg {Number} maxRows The maximum number of lines made visible by the input",1037776,44,"axRows: null\n    },\n    // @private\n    updateMaxRows: function(newRows) {\n        this.getComponent().setMaxRows(newRow",1831311,37,"newHeight",1006413,48,"var component = this.getComponent();\n        component.input.setHeight(newHeight",1831432,35,"newWidth",1006413,48,"var component = this.getComponent();\n        component.input.setWidth(newWidth);\n    },\n    /**\n     * Called when a key has been pressed in the `<input>`\n     * @private\n     */\n    doKeyUp: function(me) {\n        // getValue to ensure that we are in sync with the dom\n        var value = me.getValue();\n        // show the {@link #clearIcon} if it is being used\n        me[value ? 'showClearIcon' : 'hideClearIcon']();\n    }\n});\n\n/**\n * Utility class for generating different styles of message boxes. The framework provides a global singleton\n * {@link Ext.Msg} for common usage which you should use in most cases.\n *\n * If you want to use {@link Ext.MessageBox} directly, just think of it as a modal {@link Ext.Container}.\n *\n * Note that the MessageBox is asynchronous. Unlike a regular JavaScript `alert` (which will halt browser execution),\n * showing a MessageBox will not cause the code to stop. For this reason, if you have code that should only run _after_\n * some user feedback from the MessageBox, you must use a callback function (see the `fn` configuration option parameter\n * for the {@link #method-show show} method for more details).",1686567,39,"Msg.alert('Title', 'The quick brown fox jumped over the lazy dog.', Ext.emptyFn);\n *\n * Checkout {@link Ext.Msg} for more examples.\n *\n */\nExt.define('Ext.MessageBox', {\n    extend: Ext.Sheet",853552,43,849578,44,"ui: 'dark'",1023616,42,1023351,62,"sgbox",1221408,32,"String} iconCls\n         * CSS class for the icon. The icon should be 40px x 40px",836480,43,"ic",1224156,40,849578,44,"show",865552,32,"popIn',\n            duration: 250",864923,52,1023775,32,"inheritdoc\n         */\n        hide",865552,32,"popOut',\n            duration: 250",864923,52,"/**\n         * Override the default `zIndex` so it is normally always above floating components.\n         */\n        zIndex: 999",1294432,39,"defaultTextHeight\n         * The default height in pixels of the message box's multiline textarea if display",1037774,45,"defaultTextHeight: 75",1424272,39,"title\n         * The title of this {@link Ext.MessageBox",1457407,44,"title",1037824,37,"Array/Object} buttons\n         * An array of buttons, or an object of a button to be displayed in the toolbar of this {@link Ext.MessageBox}.\n         */\n        button",1224160,44,1516059,33,"to be displayed in the {@link Ext.MessageBox}",1037776,44,"essage",1420560,46,"sg\n         * The message to be displayed in the {@link Ext.MessageBox}",1032129,46,"#messag",7407,32,"/**\n         * @cfg {Object} prompt\n         * The configuration to be passed if you want an {@link Ext.field.Text} or {@link Ext.field.TextArea} field\n         * in your {@link Ext.MessageBox}.\n         *\n         * Pass an object with the property `multiLine` with a value of `true`, if you want the prompt to use a TextArea.",1036728,51,"pass in an object which has an xtype/xclass of another c",1617375,32,"    prompt: {\n         *         xtype: 'textareafield',\n         *         value: 'test'",1404640,40,1818816,32,"omp",930688,33,"private\n         */\n        modal",1089728,35,849578,44,"layout: {\n            type: 'vbox',\n            pack: 'center'\n        }\n    },\n    platformConfig: [\n        {\n            theme: [\n                'Windows'\n            ],\n            ui: 'light',\n            showAnimation: {\n                type: 'fadeIn'\n            },\n            hideAnimation: {\n                type: 'fadeOut'",280016,34,"{\n            theme: [\n                'Blackberry'\n            ],\n            ui: 'plain'\n        },\n        {\n            theme: [\n                'MoutainView'\n            ]\n        }\n    ],\n    statics: {\n        OK: {\n            text: 'OK',\n            itemId: 'ok',\n            ui: 'action'\n        },\n        YES: {\n            text: 'Yes',\n            itemId: 'yes',\n            ui: 'action'\n        },\n        NO: {\n            text: 'No',\n            itemId: 'no'\n        },\n        CANCEL: {\n            text: 'Cancel',\n            itemId: 'cancel'\n        },\n        INFO: Ext.baseCSSPrefix + 'msgbox-info',\n        WARNING: Ext.baseCSSPrefix + 'msgbox-warning',\n        QUESTION: Ext.baseCSSPrefix + 'msgbox-question',\n        ERROR: Ext.baseCSSPrefix + 'msgbox-error',\n        OKCANCEL:",1006656,33,"text: 'Cancel',\n                itemId: 'cancel'",1135584,46,"text: 'OK',\n                itemId: 'ok',\n                ui: 'action'\n            }\n        ],\n        YESNOCANCEL:",1006656,33,"text: 'Cancel',\n                itemId: 'cancel'",1135584,46,"text: 'No',\n                itemId: 'no'",1135584,46,"text: 'Yes',\n                itemId: 'yes',\n                ui: 'action'\n            }\n        ],\n        YESNO:",1006656,33,"text: 'No',\n                itemId: 'no'",1135584,46,"text: 'Yes',\n                itemId: 'yes',\n                ui: 'action'\n            }\n        ]",520880,52,1480041,42,"hasOwnProperty('promptConfig'",1176720,39,"'promptConfig' config is deprecated, please use 'prompt' config instead\", this);\n",940543,50,"prompt: config.promptConfig",1572244,36,"config.promptConfig;\n        }\n",1888,34,"'multiline') || config.hasOwnProperty('multiLine')) {\n            config.prompt = config.prompt || {};\n            Ext.applyIf(config.prompt, {\n                multiLine: config.multiline || config.multiLine",1572244,36,"config.multiline;\n            delete config.multiLine;\n        }\n        this.defaultAllowedConfig = {};\n        var allowedConfigs = [\n                'ui',\n                'showAnimation',\n                'hideAnimation',\n                'title',\n                'message',\n                'prompt',\n                'iconCls',\n                'buttons',\n                'defaultTextHeight'\n            ],\n            ln = allowedConfigs.length,\n            i, allowedConfig",1304304,49,"allowedConfig = allowedConfigs[i];\n            this.defaultAllowedConfig[allowedConfig] = this.defaultConfig[allowedConfig]",708000,36,1821294,37,1191439,32,"{@link Ext.Toolbar} instance using {@link Ext#factory}.",1064398,34,"Title",1726112,33,"typeof config == \"string\")",1416014,42,"titl",1410991,43,"var minHeight = '1.3em';\n        if (Ext.theme.is.Cupertino) {\n            minHeight = '1.5em';\n        } else if (Ext.filterPlatform('blackberry') || Ext.filterPlatform('ie10')) {\n            minHeight = '2.6em'",1553190,32,"config, {\n",536696,32,"       minHeight: minHeight,\n            ui: Ext.filterPlatform('blackberry') ? 'light' : 'dark',\n            cls: this.getBaseCls() + '-title'\n        });\n        if (Ext.theme.is.Tizen) {\n",940543,50,"centered: fals",1518048,43,"Ext.factory(config, Ext.Toolbar, this.getTitle())",448829,33,"new {@link Ext.Toolbar} instance into this contain",1116720,32,"updateTitle: function(newTitle) {\n        if (newTitle) {\n            this.add(newTitle",463328,35,"Adds the new {@link Ext.Toolbar} instance into this contain",1116720,32,"updateButtons: function(newButt",676976,44,"there are no new buttons or it is an empty array, set newButtons\n        // to false\n        newButtons = (!newButtons || newButtons.length === 0) ? false : newButtons;\n        if (newButtons) {\n            if (me.buttonsToolbar) {\n                me.buttonsToolbar.show();\n                me.buttonsToolbar.removeAll();\n                me.buttonsToolbar.setItems(newButton",7552,41,"var layout = ",670450,33,"hbox',\n                        pack: 'center'",5584,40,"var isFlexed = Ext.theme.is.CupertinoClassic || Ext.theme.is.MountainView || Ext.theme.is.Blackberry;\n                me.buttonsToolbar = Ext.create('Ext.Toolbar', {\n                    docked: 'bottom',\n                    defaultType: 'button',\n            ",1202226,32,"            flex: (isFlexed) ? 1 : undefined,\n                        ui: (Ext.theme.is.Blackberry) ? 'action' : undefined",789050,44,"layout: layout,\n                    ui: me.getUi(),\n                    cls: me.getBaseCls() + '-buttons',\n                    items: newButtons",790494,37,"me.add(me.buttonsToolbar",724240,36,"me.buttonsToolbar) {\n            me.buttonsToolbar.hide(",1587584,50,"/\n    applyMessage",1619965,38,"{\n            html: config,\n            cls: this.getBaseCls() + '-text'\n        };",1237966,40,"Component, this._messag",1844544,47,1152060,46,1152159,38,"(newMessage);\n        }\n    },\n    getMessage",1260832,32,"_message) {\n            return this._message.getHtml()",481963,44,1238048,37,"IconCls",1619965,38,"{\n",993487,44,"docked: 'left',\n            width: 40,\n            height: 40,\n    ",1023374,38,"icon',\n            hidden: (config) ? false : true,\n            cls: config\n        };",1237966,40,"Component, this._iconCl",1232672,41,"/\n    updateIconCls: function(newIconCls, oldIconCls) {\n        //ensure the title and button elements are added first\n        this.getTitle();\n        this.getButtons();\n        if (newIconCls) {\n            this.add(newIconCls",963568,37,"remove(oldIconCls);\n        }\n    },\n    getIconCls: function() {\n        var icon = this._iconCls,\n            iconCls;\n        if (icon) {\n            iconCls = icon.getCls();\n            return (iconCls) ? iconCls[0] :",1077214,33,"ull",876096,45,"applyPrompt: function(prompt) {\n        if (prompt) {\n            var",940445,32,"label: false",5103,32,"if (Ext.isObject(prompt))",1177459,37,"promp",1743904,34,"config.multiLine) {\n                config.height = Ext.isNumber(config.multiLine) ? parseFloat(config.multiLine) : this.getDefaultTextHeight();",1584375,36,"config, Ext.field.TextArea, this.getPrompt()",999136,42,"turn Ext.factory(config, Ext.field.Text, this.getPrompt()",564736,42,"prompt",969184,51,"Prompt: function(newPrompt, oldPrompt) {\n        if (newPrompt) {\n            this.add(newPrompt);\n        }\n        if (oldPrompt) {\n            this.remove(oldPrompt);\n        }\n    },\n    // @private\n    // pass `fn` config to show method instead\n    onClick: function(button) {\n        if (button) {\n            var config = button.config.userConfig || {}",169216,34,"button.getInitialConfig(),\n                prompt = this.getPrompt();\n            if (typeof config.fn",1284080,34,"button.disable();\n                this.on({\n",789590,34,788992,37,"config.fn.call(config.scope || null, initialConfig.itemId || initialConfig.text, prompt ? prompt.getValue() : null, config);\n                        button.enable(",789048,47,791129,33,719245,54,"    if (config.input) {\n                config.input.dom.blur",900144,36,"this.hide();\n    },\n    /**\n     * Displays the {@link Ext.MessageBox} with a specified configuration. All\n     * display functions (e.g. {@link #method-prompt}, {@link #alert}, {@link #confirm})\n     * on MessageBox call this function internally, although those calls\n     * are basic shortcuts and do not support all of the config options allowed here",795182,49,"@example\n     *     Ext.Msg.show({\n     *        title: 'Address',\n     *        message: 'Please enter your address:',\n     *        width: 300,\n     *        buttons: Ext.MessageBox.OKCANCEL,\n     *        multiLine: true,\n     *        prompt : { maxlength : 180, autocapitalize : true },\n     *        fn:",333468,40,"alert('You pressed the \"' + buttonId + '\" button.');\n     *",239904,39,311997,90,"Object/Array} [config.buttons=false]\n     * A button config object or Array of the same(e.g., `Ext.MessageBox.OKCANCEL` or `{text:'Foo', itemId:'cancel'}`),\n     * or false to not show any button",330702,40,"cls\n     * A custom CSS class to apply to the message box's container element.",312064,40,"fn\n     * A callback function which is called when the dialog is dismissed by clicking on the configured button",330702,40,"fn.buttonId The `itemId` of the button pressed, one of: 'ok', 'yes', 'no', 'cancel'",1833513,32,"fn.value Value of the input field if either `prompt` or `multiline` option is `true`.\n     * @param {Object} config.fn.opt The config object passed to show",971294,32,"[config.width=auto]\n     * A fixed width for the MessageBox",971294,32,"[config.height=auto]\n     * A fixed height for the MessageBox.",317119,38,"scope\n     * The scope",94997,32,"\n     * @param {String} config.icon\n     * A CSS class that provides a background image to be used as the body icon for the dialog\n     * (e.g. Ext.MessageBox.WARNING or 'custom-class')",1556684,34,"config.modal=true]\n     * `false` to allow user interaction with the page while the message box is displayed",330703,32,"[config.message=&#160;]\n     * A string that will replace the existing message box body text.\n     * Defaults to the XHTML-compliant non-breaking space character `&#160;`",971294,32,"[config.defaultTextHeight=75]\n     * The default height in pixels of the message box's multiline textarea if displayed",1556684,34,"config.prompt=false]\n     * `true` to prompt the user to enter single-line text. Please view the {@link Ext.MessageBox#method-prompt} documentation in {@link Ext.MessageBox}.\n     *",331197,37,"@param {Boolean} [config.multiline=false]\n     * `true` to prompt the user to enter multi-line text",330703,39,"title\n     * The title text",330703,39,"value\n     * The string value to set into the active textbox element if displayed.\n     *\n     * @return {Ext.MessageBox} this\n     */\n    show: function(initialConfig",1024224,34,"blockInputs();\n        //if it has not been added to a container, add it to the Viewport.\n        if (!this.getParent() && Ext.Viewport)",1838575,32,"this);\n        }\n        if (!initialConfig) {\n",155964,35,");\n        }\n        var config = Ext.Object.merge({}, {\n                value: ''\n            }, initialConfig);\n        var buttons = initialConfig.buttons || Ext.MessageBox.OK || [],\n            buttonBarItems = [],\n            userConfig = initialConfig;\n        Ext.each(buttons, function(buttonConfig) {\n            if (!buttonConfi",987456,55,"buttonBarItems.push(Ext.apply({\n                userConfig: userConfig,\n",789645,45,"handler: 'onClick'\n            }, buttonConfig));\n        }, this);\n        config.buttons = buttonBarItems;\n        if (config.prompt",1480088,33,"deprecate(\"'promptConfig' config is deprecated, please use 'prompt' config instead\", this);\n        }\n        config.prompt = (config.promptConfig || config.prompt) || null;\n        if (config.multiLine) {\n            config.prompt = config.prompt || {};\n            config.prompt.multiLine = config.multiLine;\n            delete config.multiLine",1010637,43,"this.defaultAllowedConfig, config);\n        this.setConfig(config);\n        var prompt = this.getPrompt();\n        if (prompt) {\n            prompt.setValue(initialConfig.value || ''",707999,37,428976,46,"Displays a standard read-only message box with an OK button (comparable to the basic JavaScript alert prompt). If\n     * a callback function is passed it will be called after the user clicks the button, and the `itemId` of the button\n     * that was clicked will be passed as the only parameter to the callback",330703,32,"title The title bar text",1811149,33,"The message box body text",947334,32,"A callback function which is called when the dialog is dismissed by clicking on the configured buttons.\n     * @param {String} fn.buttonId The `itemId` of the button pressed, one of: 'ok', 'yes', 'no', 'cancel'.\n     * @param {String} fn.value Value of the input field if either `prompt` or `multiLine` option is `true`.\n     * @param {Object} fn.opt The config object passed to show",540207,43,108016,32,569432,40,": the browser window\n     *\n     * @return {Ext.MessageBox} this\n     */\n    alert: function(title, message, ",1653303,33,"show({\n            title: title || null,\n            message: message || null,\n            buttons: Ext.MessageBox.OK,\n            promptConfig: false,\n            fn:",1062528,34,"fn)",762133,42,178304,40,",\n",290048,33,"});\n    },\n    /**\n     * Displays a confirmation message box with Yes and No buttons (comparable to JavaScript's confirm). If a callback\n     * function is passed it will be called after the user clicks either button, and the id of the button that was\n     * clicked will be passed as the only parameter to the callback (could also be the top-right close button)",330703,32,"title The title bar text",1811149,33,"The message box body text.\n     * @param {Function} fn A callback function which is called when the dialog is dismissed by clicking on the configured buttons.\n     * @param {String} fn.buttonId The `itemId` of the button pressed, one of: 'ok', 'yes', 'no', 'cancel'.\n     * @param {String} fn.value Value of the input field if either `prompt` or `multiLine` option is `true`.\n     * @param {Object} fn.opt The config object passed to show",540207,43,108016,32,"callback is executed.\n     *\n     * Defaults to: the browser window\n     *\n     * @return {Ext.MessageBox} this\n     */\n    confirm: function(title, message, ",1653303,33,"show({\n            title: title || null,\n            message: message || null,\n            buttons: Ext.MessageBox.YESNO,\n            promptConfig: false,\n",527279,38,"fn:",1062528,34,"fn)",762133,42,178304,40,646768,35,"Displays a message box with OK and Cancel buttons prompting the user to enter some text (comparable to\n     * JavaScript's prompt). The prompt can be a single-line or multi-line textbox. If a callback function is passed it\n     * will be called after the user clicks either button, and the id of the button that was clicked (could also be the\n     * top-right close button) and the text that was entered will be passed as the two parameters to the callback",795182,49,"@example\n     *     Ext.Msg.prompt(\n     *         'Welcome!',\n     *         'What\\'s your name going to be today?',\n     *         function (buttonId, value",240847,35,"value",1660894,36,"null,\n     *         false,\n     *         null",1645823,38,"autoCapitalize: true,\n     *             placeHolder: 'First-name please...'\n     *         }\n     *     ",644303,33,"title The title bar text",1811149,33,"The message box body text.\n     * @param {Function} fn A callback function which is called when the dialog is dismissed by clicking on the configured buttons.\n     * @param {String} fn.buttonId The `itemId` of the button pressed, one of: 'ok', 'yes', 'no', 'cancel'.\n     * @param {String} fn.value Value of the input field if either `prompt` or `multiLine` option is `true`.\n     * @param {Object} fn.opt The config object passed to show",1278368,73,"callback is executed.\n     *\n     * Defaults to: the browser",1095152,38,"/Number} [multiLine=false] `true` to create a multiline textbox using the `defaultTextHeight` property,\n     * or the height in pixels to create the textbox",330703,32,"[value] Default value of the text input element",391661,32,"[prompt=true]\n     * The configuration for the prompt. See the {@link Ext.MessageBox#cfg-prompt prompt} documentation in {@link Ext.MessageBox}\n     *",331197,37,"@return {Ext.MessageBox} this\n     */\n    prompt: function(title, message, fn, scope, multiLine, value, prompt) {\n        return this.show({\n            title: title || null,\n            message: message || null,\n            buttons: Ext.MessageBox.OKCANCEL,\n",527279,38,"prompt: prompt || true,\n            multiLine: multiLine,\n",1657712,38,"fn:",1062528,34,"fn)",762133,42,178304,40,"\n        });\n    }\n}, function(MessageBox) {\n    Ext.onSetup(function() {\n        /**\n         * @class Ext.Msg\n         * @extends Ext.MessageBox\n         * @singleton\n         *\n         * A global shared singleton instance of the {@link Ext.MessageBox} class.\n         *\n         * Allows for simple creation of various different alerts and notifications.\n         *\n         * To change any configurations on this singleton instance, you must change the\n         * `defaultAllowedConfig` object.  For example to remove all animations on `Msg`",266575,32,"Msg.defaultAllowedConfig.showAnimation = false;\n         *     Ext.Msg.defaultAllowedConfig.hideAnimation = false;",753550,33,"s\n         *\n         * ### Alert\n         * Use the {@link #alert} method to show a basic alert:",138320,35," preview\n         *     Ext.Msg.alert('Title', 'The quick brown fox jumped over the lazy dog.', Ext.emptyFn);\n         *\n         * ### Prompt\n         * Use the {@link #method-prompt} method to show an alert which has a textfield:",138320,35," preview\n         *     Ext.Msg.prompt('Name', 'Please enter your name:', function(text) {\n         *         // process text value and close...",149648,42,"### Confirm\n         * Use the {@link #confirm} method to show a confirmation alert (shows yes and no buttons)",138319,36," preview\n         *     Ext.Msg.confirm(\"Confirmation\", \"Are you sure you want to do that?\", Ext.emptyFn);\n         */\n        Ext.Msg = new MessageBox();\n    });\n});\n\n/**\n * {@link Ext.TitleBar}'s are most commonly used as a docked item within an",1022768,32,"e main difference between a {@link Ext.TitleBar} and an {@link Ext.Toolbar} is that\n * the {@link #title} configuration is **always** centered horizontally in a {@link Ext.TitleBar} between\n * any items aligned left or right.\n *\n * You can also give items of a {@link Ext.TitleBar} an `align` configuration of `left` or `right`\n * which will dock them to the `left` or `right` of the bar.\n *\n * ## Examples",1686567,65,"xtype: 'titlebar',\n *",1078908,35,259064,32,887485,45,"iconCls: 'add',\n *                 align: 'left'",1310720,34,"{\n *                 iconCls: 'home',\n *                 align: 'right'",889200,48,"    Ext.Viewport.setStyleHtmlContent(true);\n *     Ext.Viewport.setHtml('This shows the title being centered and buttons using align <i>left</i> and <i>right</i>.');\n *\n * <br />",1686567,65,"xtype: 'titlebar',\n *",1078908,35,259064,32,887485,45,"align: 'left',\n *                 text: 'This button has a super long title'",1310720,34,"{\n *                 iconCls: 'home',\n *                 align: 'right'",889200,48,"    Ext.Viewport.setStyleHtmlContent(true);\n *     Ext.Viewport.setHtml('This shows how the title is automatically moved to the right when one of the aligned buttons is very wide.');\n *\n * <br />",1686567,65,"xtype: 'titlebar',\n *",1078908,35,"title: 'A very long title",887471,59,"align: 'left',\n *                 text: 'This button has a super long title'",1310720,34,"{\n *                 align: 'right',\n *                 text: 'Another button'",889200,48,"    Ext.Viewport.setStyleHtmlContent(true);\n *     Ext.Viewport.setHtml('This shows how the title and buttons will automatically adjust their size when the width of the items are too wide..');\n *\n * The {@link #defaultType} of Toolbar's is {@link Ext.Button button}.\n */\nExt.define('Ext.TitleBar",1817152,44,"titlebar',\n    // @private\n    isToolbar",1402271,49,1023338,74,"toolbar'",1023616,42,"inheritdoc",1149641,47,"navigation-bar",1221408,32,"String} ui\n         * Style options for Toolbar. Either 'light' or 'dark'",1422720,44,"i: 'dark",1221408,32,"String} title\n         * The title of the toolbar",836480,43,"title",1240512,45,"titleAlign\n         * The alignment for the title of the toolbar",836480,43,"titleAlign: 'center",1221408,32,1035885,43,"xtype to creat",1422719,44,"defaultType: 'button",1221408,32,742724,48,"height of the Toolbar",1037776,44,"inHeigh",930688,36,1023645,39,"ayout: {\n            type: 'hbox'",170384,36,1035153,56,"TitleBar. The {@link #defaultType} of\n         * a TitleBar is {@link Ext.Button}, so you do not need to specify an `xtype` if you are adding\n         * buttons",739464,37,"give items a `align` configuration which will align the item to the `left` or `right` of\n         * the TitleBar",836480,43,"item",1173520,36,"String} maxButtonWidth The maximum width of the button by percentage",1605488,42,"maxButtonWidth: '40%'\n    },\n    platformConfig: [\n        {\n            theme: [\n                'Blackberry',\n                'Tizen'\n            ],\n            titleAlign: 'left'\n        },\n        {\n            theme: [\n                'Cupertino'\n            ],\n            maxButtonWidth: '80%'\n        }\n    ],\n    hasCSSMinHeight: true,\n    beforeI",1866573,32,"this.applyItems = this.applyInitialItems;",1866560,45,"delete this.applyItems;\n        this.add(this.initialItems);\n        delete this.initialItems",1024137,32,"painted: 'refreshTitlePosition',",866160,42,"},\n    applyInitial",891246,37,"me = this,\n            titleAlign = me.getTitleAlign()",1045672,41," || {};\n        me.initialItems = items;\n        me.leftBox = me.add({\n",1869768,33,"           style: 'position: relative',\n            layout: {\n   ",1819419,36,"       align: 'center'\n            }",962880,43,"resize: 'refreshTitlePosition'",802502,41,"\n        });\n        me.spacer = me.add({\n",993487,44,"style: 'position: relative',\n            flex: 1",962880,43,"resize: 'refreshTitlePosition'",802502,41,"\n        });\n        me.rightBox = me.add({\n",1869768,33,"           style: 'position: relative',\n            layout: {\n   ",1819419,36,"       align: 'center'\n            }",962880,43,"resize: 'refreshTitlePosition'",802502,41,"\n        });\n        switch (titleAlign) {\n            case 'left':\n                me.titleComponent = me.leftBox.add({\n ",1078934,32,"',\n        ",1105436,38,"title-align-left',\n                    hidden: defaults.hidden",790494,37,"me.refreshTitlePosition",783727,32,"break;\n            case 'right':\n                me.titleComponent = me.rightBox.add({\n ",1078934,32,"',\n        ",1105436,38,"title-align-right',\n                    hidden: defaults.hidden",790494,37,"me.refreshTitlePosition",783727,32,1868891,44,"me.titleComponent = me.add({\n ",1078934,32,"',\n                    hidden: defaults.hidden,\n                    centered",1841680,43,"break;\n        }\n        me.doAdd = me.doBoxAdd;\n        me.remove = me.doBoxRemove;\n        me.doInsert = me.doBoxInsert;\n    },\n    doBoxAdd: function(item) {\n        if (item.config.align == 'right') {\n            this.rightBox.add",1271916,37,"this.leftBox.add(item);\n        }\n    },\n    doBoxR",1048924,41,"if (item.config.align == 'right') {\n            this.rightBox.remove(item, destroy",963568,37,"leftBox.remove(item, destroy);\n        }\n    },\n    doBoxI",1054875,39,"if (item.config.align == 'right') {\n            this.rightBox.insert(index",569680,38,"this.leftBox",1056802,36,"},\n    calculateMaxButtonWidth: function() {\n        var maxButtonWidth = this.getMaxButtonWidth();\n        //check if it is a percentage\n        if (Ext.isString(maxButtonWidth)) {\n            maxButtonWidth = parseInt(maxButtonWidth.replace('%', ''), 10);\n        }\n        maxButtonWidth = Math.round((this.element.getWidth() / 100) * maxButtonWidth);\n        return maxButtonWidth;\n    },\n    refreshTitlePositio",1260831,33,1737036,57,"titleElement = this.titleComponent.renderElement;\n        titleElement.setWidth(null);\n        titleElement.setLeft(null);\n        //set the min/max width of the left button\n        var leftBox = this.leftBox,\n            leftButton = leftBox.down('button'),\n            singleButton = leftBox.getItems().getCount() == 1,\n            leftBoxWidth, maxButtonWidth;\n        if (leftButton && singleButton) {\n            if (leftButton.getWidth() == null) {\n                leftButton.renderElement.setWidth('auto');\n            }\n            leftBoxWidth = leftBox.rend",868395,34,"maxButtonWidth = this.calculateMaxButtonWidth();\n            if (leftBoxWidth > maxButtonWidth) {\n                leftButton.renderElement.setWidth(maxButtonWid",1003775,33,"    var spacerBox = this.spacer.renderElement.getPageBox();\n   ",356464,35,"       titleElement.setWidth(spacerBox.width);\n        }\n        var titleBox = titleE",803472,33,"widthDiff = titleBox.width - spacerBox.width,\n            titleLeft = titleBox.left,\n            titleRight = titleBox.right,\n            halfWidthDiff, leftDiff, rightDiff;\n        if (widthDiff > 0) {\n            halfWidthDiff = widthDiff / 2;\n            titleLeft += halfWidthDiff;\n            titleRight -= halfWidthDiff;\n            titleElement.setWidth(spacerBox.width);\n        }\n        leftDiff = spacerBox.left - titleLeft;\n        rightDiff = titleRight - spacerBox.right;\n        if (leftDiff > 0) {\n            titleElement.setLeft(leftDiff);\n        } else if (rightDiff > 0) {\n            titleElement.setLeft(-rightDiff);\n        }\n        titleElement.repaint();\n    },\n    // @private\n    updateTitle: function(newTitle) {\n        this.titleComponent.setTitle(newTitle);\n        if (this.isPainted()) {\n            this.refreshTitlePosition",713376,32,1181773,37,1152938,525293,"Ext.Direct aims to streamline communication between the client and server by providing a single interface that\n * reduces the amount of common code typically required to validate data and handle returned data packets (reading data,\n * error conditions, etc).\n *\n * The Ext.direct namespace includes several classes for a closer integration with the server-side. The Ext.data\n * namespace also includes classes for working with Ext.data.Stores which are backed by data from an Ext.Direct method.\n *\n * # Specification\n *\n * For additional information consult the [Ext.Direct Specification](http://sencha.com/products/extjs/extdirect).\n *\n * # Providers\n *\n * Ext.Direct uses a provider architecture, where one or more providers are used to transport data to and from the\n * server. There are several providers that exist in the core at the moment:\n *\n * - {@link Ext.direct.JsonProvider JsonProvider} for simple JSON operations\n * - {@link Ext.direct.PollingProvider PollingProvider} for repeated requests\n * - {@link Ext.direct.RemotingProvider RemotingProvider} exposes server side on the client.\n *\n * A provider does not need to be invoked directly, providers are added via {@link Ext.direct.Manager}.{@link #addProvider}.\n *\n * # Router\n *\n * Ext.Direct utilizes a \"router\" on the server to direct requests from the client to the appropriate server-side\n * method. Because the Ext.Direct API is completely platform-agnostic, you could completely swap out a Java based server\n * solution and replace it with one that uses C# without changing the client side JavaScript at all.\n *\n * # Server side events\n *\n * Custom events from the server may be handled by the client by adding listeners, for example:\n *\n *     {\"type\":\"event\",\"name\":\"message\",\"data\":\"Successfully polled at: 11:19:30 am\"}\n *\n *     // add a handler for a 'message' event sent by the server\n *     Ext.direct.Manager.on('message', function(e){\n *         out.append(String.format('<p><i>{0}</i></p>', e.data));\n *         out.el.scrollTo('t', 100000, true);",1387278,33,"alternateClassName Ext.Direct\n */\nExt.define('Ext.direct.Manag",1021898,32,1166880,62,"alternateClassName: 'Ext.Direct',\n    exceptions: {\n        TRANSPORT: 'xhr',\n        PARSE: 'parse',\n        LOGIN: 'login',\n        SERVER: 'exception'\n    },\n    /**\n     * @event event\n     * Fires after an event.\n     * @param {Ext.direct.Event} e The Ext.direct.Event type that occurred.\n     * @param {Ext.direct.Provider} provider The {@link Ext.direct.Provider Provider}",956160,32,"exception\n     * Fires after an event",1361636,32,"irect.Event} e The event type that occurre",903151,37,489263,38,"transaction",1253588,38,"this.getKey);\n        me.provid",1253586,40,"this.getKey);\n    },",1270581,50,"getId(",1267712,33,"Ext.Direct Provider and creates the proxy or stub methods to execute server-side methods. If the provider\n     * is not already connected, it will auto-connect.\n     *\n     *     Ext.direct.Manager.addProvider({\n     *         type: \"remoting\",       // create a {@link Ext.direct.RemotingProvider}\n     *         url: \"php/router.php\", // url to connect to the Ext.Direct server-side router.\n     *         actions: {              // each property within the actions object represents a Class\n     *             TestAction: [       // array of methods within each server side Class",536622,45,"name: \"doEcho\", // name of method\n     *                 len: 1\n     *             },{\n     *                 name: \"multiply\",\n     *                 len: 1\n     *             },{\n     *                 name: \"doForm\",\n     *                 formHandler: true,  // handle form on server with Ext.Direct.Transaction\n     *                 len: 1\n     *             }]",1660896,34,"namespace: \"myApplication\" // namespace to create the Remoting Provider in",312656,38,"Ext.direct.Provider/Object...} provider\n     * Accepts any number of Provider descriptions (an instance or config object for\n     * a Provider). Each Provider description instructs Ext.Direct how to create\n     * client-side stub methods",1551328,38,"addProvider: function(provid",389088,42,"rgs = Ext.toArray(arguments)",654864,34,"n;\n        if (args.length > 1) {\n            for (ln = arg",486683,37,"    me.addProvider(arg",1574464,33,"return;\n        }\n        // if provider has not already been instantiated\n        if (!provider.isProvider) {\n            provider = Ext.create('direct.' + provider.type + 'provider', provider);\n        }\n        me.providers.add(provider);\n        provider.on('data', me.onProviderData, me);\n        if (!provider.isConnected()) {\n            provider.connect();\n        }\n        return provider",562796,35," {@link Ext.direct.Provider provider} by the **{@link Ext.direct.Provider#id id}** specified when the\n     * provider is {@link #addProvider added}.\n     * @param {String/Ext.direct.Provider} id The id of the provider, or the provider instance",1551328,41,"Provider",1641087,32,"id.isProvider ? id : this.providers",567328,34,"moves the provider.\n     * @param {String/Ext.direct.Provider} provider The provider instance or the id of the provider.\n     * @return {Ext.direct.Provider/null} The provider, `null` if not found.\n     */\n    removeProvider: function(provid",389088,41,"providers = me.providers;\n        provider = provider.isProvider ? provider : providers.get(provider);\n        if (provider) {\n            provider.un('data', me.onProviderData, me);\n            providers.remove(provider);\n            return provider",481963,44,"/**\n     * Adds a transaction to the manag",1119967,35,"Ext.direct.Transaction} transaction The transaction to add\n     * @return {Ext.direct.Transaction} transaction\n     */\n    addTransaction: function(transaction) {\n        this.transactions.add(transaction);\n        return transaction",491693,33," transaction from the manag",1119967,35,"String/Ext.direct.Transaction} transaction The transaction/id of transaction to remove\n     * @return {Ext.direct.Transaction} transaction\n     */\n    removeTransaction: function(transaction) {\n        transaction = this.getTransaction(transaction);\n        this.transactions.remove(transaction);\n        return transaction;\n    },\n    /**\n     * Gets a transac",1432912,36,"String/Ext.direct.Transaction} transaction The transaction/id of transaction to get\n     * @return {Ext.direct.Transaction}\n     */\n    getTransaction: function(transaction) {\n        return Ext.isObject(transaction) ? transaction : this.transactions.get(transaction);\n    },\n    onProviderData: function(provider, ev",697280,42,"i = 0,\n            ln, name;\n        if (Ext.isArray(event)) {\n            for (ln = event",486684,36,"    me.onProviderData(provider, event",987806,32,"return;\n        }\n        name = event.getName();\n        if (name && name != 'event' && name != 'exception') {\n            me.fireEvent(name, event);\n        } else if (event.getStatus() === fals",1116158,43,"event)",944939,34,"event', event, provider)",423964,33,"direct function. It may be passed in a string format, for example:\n     * \"MyApp.Person.read\"",1450087,35,"String/Function} fn The direct fun",932257,32,"The function to use in the direct call. Null if not found\n     */\n    parseMethod: function(fn) {\n        if (Ext.isString(fn)) {\n            var parts = fn.split('.')",61504,46,"parts.length,\n                current = window;\n            while (current && i < ln) {\n                current = current[parts[i]];\n                ++i;\n            }",489899,33,"current) ? current :",1077214,32,"fn || null",1349040,41,1678252,7845,"**\n * Tracks what records are currently selected in a databound widget. This class is mixed in to {@link Ext.dataview.DataView} and\n * all subclasse",663551,35,"mixin.Select",1251981,70,"select",519629,36,"updateStore: 'updateStore",934719,35,"event beforeselectionchange\n     * Fires before an item is selected.\n     * @param {Ext.mixin.Selectable} this\n     * @preventable selectionchange",77360,33,"listen to the {@link #selectionchange} event with an order of `before`",1602136,40,"selectionchange\n     * Fires when a selection changes.\n     * @param {Ext.mixin.Selectabl",1601166,37,"[]} records The records whose selection has changed",1817806,62,"disableSelection `true` to disable selection",1421439,32,"will lock the selection model that the DataView use",1606288,44,"disableSelec",1153598,41,"String} mode\n         * Modes of selection.\n         * Valid values are `'SINGLE'`, `'SIMPLE'`, and `'MULTI'`",1037776,46,"e: 'SINGLE",1221408,32,"Boolean} allowDeselect\n         * Allow users to deselect a record in a DataView, List or Grid. Only applicable when the Selectable's `mode` is\n         * `'SINGLE'`",1457408,44,"llowDeselec",1023535,37," {Ext.data.Model} lastSelected",746656,62,"lastSelect",714959,39,"Ext.data.Model} lastFocused",746656,62,"lastFocus",714959,39,"Boolean} deselectOnContainerClick `true` to deselect current selection when the container body is\n         * click",1037774,45,"deselectOnContainerClick: true\n    },\n    modes: {\n        SINGLE: true,\n        SIMPLE: true,\n        MULTI: true\n    },\n    selectableEventHooks: {\n        addrecords: 'onSelectionStoreAdd',\n        removerecords: 'onSelectionStoreRemove',\n        updaterecord: 'onSelectionStoreUpdate',\n        load: 'refreshSelection',\n        refresh: 'refreshSelection'",520880,34,") {\n        this.selected",1270302,32,1041424,43,1042976,44,"Mode: function(mode) {\n        mode = mode ? mode.toUpperCase() : 'SINGLE';\n        // set to mode specified unless it doesnt exist, in that case\n        // use single.\n        return this.modes[mode] ? mode : 'SINGLE'",969184,51,"Store: function(newStore, oldStor",1652080,40,"bindEvents = Ext.apply({}, me.selectableEventHooks, {",802503,51,"if (oldStore && Ext.isObject(oldStore) && oldStore.isStore) {\n            if (oldStore.autoDestroy) {\n                oldStore.destro",1480896,42,"oldStore.un(bindEvents);\n                if (newStore) {\n                    newStore.un('clear', 'onSelectionStoreClear'",799501,39,"}\n        }\n        if (newStore) {\n            newStore.on(bindEvents);\n            newStore.onBefore('clear', 'onSelectionStoreClear', this);\n            me.refreshSelection(",463328,35,"Selects all records",1183631,33,"`true` to suppress all select events.\n     */\n    select",1636175,32,"var me = this,\n            selections = me.getStore().getRange();\n        me.select(selections, true, silent);\n    },\n    /**\n     * Deselects all records.\n     */\n    deselectAll: function(supres",1375856,40,"selections = me.getStore().getRange();\n        me.deselect(selections, supress);\n        me.selected.clear();\n        me.setLastSelected(null);\n        me.setLastFocused(null);\n    },\n    // Provides differentiation of logic between MULTI, SIMPLE and SINGLE\n    // selection modes.\n    selectWithEven",1642843,34,"me = this,\n            isSelected = me.isSelected(record);\n        switch (me.getMode()) {\n            case 'MULTI':\n            case 'SIMPLE':\n                if (isSelected) {\n                    me.deselect(record",1377216,48,"me.select(record, true",6879,38,"break;\n            case 'SINGLE':\n                if (me.getAllowDeselect() && isSelected) {\n                    // if allowDeselect is on and this record isSelected, deselect it\n                    me.deselect(record",1377216,48,"// select the record and do NOT maintain existing selections\n                    me.select(record, false",6879,38,"break",569920,34,"Selects a range of rows if the selection model {@link Ext.mixin.Selectable#getDisableSelection} is not locked.\n     * All rows in between `startRecord` and `endRecord` are also selected.\n     * @param {Number} startRecord The index of the first row in the range.\n     * @param {Number} endRecord The index of the last row in the range.\n     * @param {Boolean} [keepExisting] `true` to retain existing selections.\n     */\n    selectRange: function(startRecord, endRecord, keepExisting",542384,39,"store = me.getStore()",1329360,40,"tmp, i;\n        if (me.getDisableSelectio",1844814,45,"// swap values\n        if (startRecord > endRecord) {\n            tmp = endRecord;\n            endRecord = startRecord;\n            startRecord = tmp;\n        }\n        for (i = startRecord; i <= endRecord; i++) {\n            records.push(store.getAt(i));\n        }\n        this.doMultiSelect(records, keepExisting)",448829,39,"records to the currently selected set",1634169,32,"Array/Number} records The records to select.\n     * @param {Boolean} keepExisting If `true`, the existing selection will be added to (if not, the old selection is replaced).\n     * @param {Boolean} suppressEvent If `true`, the `select` event will not be fir",380497,33,"records, keepExisting, suppressEv",697280,42,"record;\n        if (me.getDisableSelectio",1844814,45,"if (typeof records === \"number\"",1634342,44,"me.getStore().getAt(records",1691357,35,"if (!records",550175,42,"if (me.getMode() == \"SINGLE\" && records",1484846,32,".length ? records[0] : records;\n            me.doSingleSelect(record, suppressEv",892720,35,"me.doMultiSelect(records, keepExisting, suppressEven",1119424,36,"Selects a single",1538800,37,"doSingleSelect: function(record, suppressEv",697280,42,"selected = me.selected;\n        if (me.getDisableSelectio",1844814,45,"// already selected.\n        // should we also check beforeselect?\n        if (me.isSelected(record",1319584,43,"if (selected.getCount() > 0) {\n            me.deselect(me.getLastSelected(), suppressEvent);\n        }\n        selected.add(record);\n        me.setLastSelected(record);\n        me.onItemSelect(record, suppressEvent);\n        me.setLastFocused(record);\n        if (!suppressEvent) {\n            me.fireSelectionChange(",1642361,38,463328,35,"Selects a set of multiple records.\n     * @private\n     */\n    doMultiSelect: function(records, keepExisting, suppressEvent) {\n        if (records === null || this.getDisableSelectio",1844814,45,"records = !Ext.isArray(records) ? [\n            records\n        ] : records;",907648,36,"selected = me.selected",1636672,47,"change",1634458,41,"record;\n        if (!keepExisting && selected.getCount() > 0) {\n            change = true;\n            me.deselect(me.getSelection(), true",1666489,33,"n",1655983,54,"if (keepExisting && me.isSelected(record)) {\n",1247117,33,439755,36,"change = true;\n            me.setLastSelected(record);\n            selected.add(record);\n            if (!suppressEvent) {\n                me.setLastFocused",1637055,32,"    me.onItemSelect(record, suppressEvent);\n        }\n        if (change && !",1653662,34,"fireSelectionChange(records",463328,35,"Deselects the given record(s). If many records are currently selected, it will only deselect those you pass in.\n     * @param {Number/Array/Ext.data.Model} records The record(s) to deselect. Can also be a number to reference by index.\n     * @param {Boolean} suppressEvent If `true` the `deselect` event will not be fired.\n     */\n    deselect: function(records, suppressEvent",489263,35,"if (me.getDisableSelectio",1844814,45,"records = Ext.isArray(records) ? records : [\n            records\n        ];\n        var selected = me.selected,\n            change",1634458,41,"store = me.getStore",1634656,49,"record",1291886,44,1484862,33,"if (typeof record === 'number') {\n                record = store.getAt",1637055,32,"    if (selected.remove(record)) {\n                if (me.getLastSelected() == record) {\n                    me.setLastSelected(selected.last()",104368,37,"change",685005,35,"if (record) {\n                me.onItemDeselect(record, suppressEvent",1053968,39,"change && !suppressEvent) {\n            me.fireSelectionChange(records",463328,35,"Sets a record as the last focused record. This does NOT mean\n     * that the record has been selected.\n     * @param {Ext.data.Record} newRecord\n     * @param {Ext.data.Record} oldRecord\n     */\n    updateLastFocuse",793972,44,"this.onLastFocusChanged(oldRecord, newRecord);\n    },\n    fireSelectionChange: function(record",424496,36,"me.fireAction('selectionchange', [\n            me,\n            records\n        ], 'getSelection'",492288,33,"an array of the currently selected records",919711,37,"selected records.\n     */\n    getSe",1621245,37,"this.selected.getRange(",1682064,47,"specified row is select",1634167,34,"Number} record The record or index of the record",359343,50,"Selected: function(record) {\n        record = Ext.isNumber(record) ? this.getStore().getAt(record) : record;\n        return this.selected.indexOf(record) !=",1468863,36,"`true` if there is a selected record",1626622,39,"hasSe",1621245,37,"this.selected.getCount() > 0",876096,45,"refreshSelec",871056,54,"selections = me.getSelection();\n        me.deselectAll(true);\n        if (selections.length) {\n            me.select(selections, false, true);\n        }\n    },\n    // prune records from the SelectionModel if\n    // they were selected at the time they were\n    // removed.\n    onSelectionStoreRemove",1484399,41,"me = this,\n            selected = me.selected",1636672,47,"record, i;\n        if (me.getDisableSelectio",1844814,50,1302960,67,"if (selected.remove(record)) {\n                if (me.getLastSelected() == record) {\n                    me.setLastSelected(null",104368,41,"me.getLastFocused() == record) {\n                    me.setLastFocused(null",104368,37,"me.fireSelectionChange([\n    ",1642363,35,"    ",542768,32,"},\n    onSelectionStoreClear: function(store) {\n        var records = store.getData().items;\n        this.onSelectionStoreRemove(store, records",492288,37,"number of selections",439966,41,"Selection",485776,40,"selected.getCount();\n    },\n    onSelectionStoreAdd: Ext.emptyFn,\n    onSelectionStoreUpdate: Ext.emptyFn,\n    onItemSelect: Ext.emptyFn,\n    onItemDeselect: Ext.emptyFn,\n    onLastFocusChanged: Ext.emptyFn,\n    onEditorKey: Ext.emptyFn\n}, function() {});\n/**\n     * Selects a record instance by record instance or index.\n     * @member Ext.mixin.Selectable\n     * @method doSel",1600660,33,"/Number} records An array of records or an index.\n     * @param {Boolean} keepExisting\n     * @param {Boolean} suppressEvent Set to `false` to not fire a select event.",77360,44,"#select} instead.\n     */\n/**\n     * Deselects a record instance by record instance or index.\n     * @member Ext.mixin.Selectable\n     * @method doDesel",1600660,33,"/Number} records An array of records or an index.\n     * @param {Boolean} suppressEvent Set to `false` to not fire a deselect event.",77360,44,"#deselect} instead.\n     */\n/**\n     * Returns the selection mode currently used by this Selectable.\n     * @member Ext.mixin.Selectable\n     * @method getSelectionMode",465580,37,"mode.",77360,44,"#getMode} instead.\n     */\n/**\n     * Returns the array of previously selected items.\n     * @member Ext.mixin.Selectable\n     * @method getLastSelected\n     * @return {Array} The previous selection",365432,33,"/\n",1626512,34,"electable is currently locked.\n     * @member Ext.mixin.Selectable\n     * @method isLocked",1468701,34,"currently locked",77360,44,"#getDisableSelection} instead.\n     */\n/**\n     * This was an internal function accidentally exposed in 1.x and now deprecated. Calling it has no effect\n     * @member Ext.mixin.Selectable\n     * @method setLastFocused",365433,32,"/\n/**\n     * Deselects any currently selected records and clears all stored selections.\n     * @member Ext.mixin.Selectable\n     * @method clearSelections",77360,44,"#deselectAll} instead.\n     */\n",485676,33,"selections.\n     * @member Ext.mixin.Selectable\n     * @method getCount",1575685,33,748272,36,"getSelectionCount} instead.\n     */\n/**\n     * @cfg {Boolean} locked\n     * @inheritdoc Ext.mixin.Selectable#disableSelection",77360,44,"#disableSelection} instead.\n     */\n\n/**\n * A DataItem is a container for records inside of {@link Ext.dataview.DataView} with useComponents: true.\n * It ties together {@link Ext.data.Model records} to its contained Components. Consider the following example:\n *\n *      @example phone portrait preview\n *     // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! MODEL\n *\n *     Ext.define('TestModel",1452656,44,1414719,43,"{\n *                 name: 'val1'",1455664,40,"name: 'val2'",1387247,49,"    // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! STORE\n *\n *     Ext.define('TestStor",1684160,35,"Store",1387008,39,"data: [{\n *                 val1: 'A Button',\n *                 val2: 'with text'",1455664,40,"val1: 'The Button',\n *                 val2: 'more text'",1455664,40,"val1: 'My Button',\n *                 val2: 'My Text'\n *             }],\n *             model: 'TestModel',\n *             storeId: 'TestStore'",518944,35,"// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! DATA ITEM\n *\n *     Ext.define('MyDataItem",1452656,33,"view.component.DataItem',\n *         alias: 'widget.mydataitem",1387008,39,"padding: 1",258871,54,"hbox'",1310720,34,"defaults: {\n *                 margin",258960,37,"items: [{\n * ",536815,34,"*                 text: 'Val1'",1455664,40,300867,39,727704,35,"val2',\n *                 itemId: 'textCmp",259346,32,",\n *         updateRecord: function(record) {\n *             var me = this;\n *\n *             me.down('button').setText(record.get('val1'));\n *             me.down('#textCmp').setHtml(record.get('val2'));\n *\n *     ",1344494,35,1026992,35," !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! DATA VIEW\n *\n *     Ext.define('MyDataView",1452656,33,"view.DataView",1387008,39,"defaultType: 'mydataitem',\n *             useComponents: true",518944,35,"// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! RUN\n *\n *     Ext.create('MyDataView",729343,45,"store: Ext.create('TestStore')\n *     });\n *\n * Another way to accomplish this is via a {@link #dataMap dataMap} configuration.\n *\n * For example, lets say you have a `text` configuration which, when applied, gets turned into an instance of an\n * Ext.Component. We want to update the {@link #html} of a sub-component when the 'text' field of the record gets\n * changed.\n *\n * As you can see below, it is simply a matter of setting the key of the object to be the getter of the config\n * (getText), and then give that property a value of an object, which then has 'setHtml' (the html setter) as the key,\n * and 'text' (the field name) as the value. You can continue this for a as many sub-components as you wish.\n *\n *     dataMap: {\n *         // When the record is updated, get the text configuration, and\n *         // call {@link #setHtml} with the 'text' field of the record.\n *         getText: {\n *             setHtml: 'text'\n *         },\n *\n *         // When the record is updated, get the userName configuration, and\n *         // call {@link #setHtml} with the 'from_user' field of the record.\n *         getUserName: {\n *             setHtml: 'from_user'\n *         },\n *\n *         // When the record is updated, get the avatar configuration, and\n *         // call `setSrc` with the 'profile_image_url' field of the record.\n *         getAvatar: {\n *             setSrc: 'profile_image_url'",1342086,47,"view.component.DataItem",1817152,44,"dataitem'",1000525,33,"Ext.baseCSSPrefix + 'data-item',\n        defaultType: 'componen",849200,33,1642762,42,"of this DataItem. It is controlled by the Component DataView",836480,43,"recor",714960,46,"itemCls\n         * An additional CSS class to apply to items within the DataView",836480,43,"item",1224158,39,"dataMap\n         * The dataMap allows you to map {@link #record} fields to specific configurations in this c",1617375,32,"For example, lets say you have a `text` configuration which, when applied, gets turned into an instance of an Ext.Component.\n         * We want to update the {@link #html} of this component when the 'text' field of the record gets changed",265085,52," dataMap: {\n         *          getText: {\n         *              setHtml: 'text'",246462,40,"\n         *\n         * In this example, it is simply a matter of setting the key of the object to be the getter of the config (`getText`), and then give that\n         * property a value of an object, which then has `setHtml` (the html setter) as the key, and `text` (the field name) as",930891,32,"dataMap: {},\n        /*\n         * @private dataview\n         */\n        dataview: null,",1820167,32,"items:",1006656,33,"xtype: 'component'\n            }\n        ]",1041534,83,1038303,47,"updateItem",772232,40,"if (oldCl",454972,32,"oldCls);\n        }\n        if (newCls) {\n            this.addCls(newCls);\n        }\n    },\n    doMapData: function(dataMap, data, item) {\n        var componentName, component, setterMap, setterName;\n        for (componentName in dataMap) {\n            setterMap = dataMap[componentName];\n            component = this[componentName]();\n    ",1699419,37,"    for (setterName in setterMap) {\n                    if (data && component[setterName] && data[setterMap[setterName]] !== undefined && data[setterMap[setterName]] !",92224,35,"component[setterName](data[setterMap[setterName]",100031,56,"}\n        }",1052672,33,"// Bypassing setter because sometimes we pass the same object (different properties)\n            item.updateData(",1653920,39,"Updates this container's child items, passing through the `dataMap`",1638368,33,"newR",1644463,34,793961,32,") {\n",794120,38,"return;\n        }\n        this._record = newRecord;",907648,36,"dataview = me.dataview || this.getDataview(),\n            data = dataview.prepareData(newRecord.getData(true), dataview.getStore().indexOf(newRecord), newRecord)",1048294,50,"tem = items.first(),\n            dataMap = me.getDataMap();",1045154,34,"return;\n        }\n        if (dataMap) {\n            this.doMapData(dataMap, data, ite",412894,37,"@event updatedata\n",793483,42,"DataItem is upda",1090595,32,"view.component.DataItem} this The DataItem insta",17118,32,"newData The new data.\n         */\n        me.fireEvent('updatedata', me, data",1725280,50,"dataview.componen",1028697,34,"ntainer,\n    /**\n     * @event itemtouchstart",1029756,34,"touched\n     * @param {Ext.dataview.component.Container} this\n     * @param {Ext.dataview.component.DataItem} item The item touched",1052512,47,"item touched",1023977,64,"/**\n     * @event itemtouchmov",1029755,35,"moved\n     * @param {Ext.dataview.component.Container} this\n     * @param {Ext.dataview.component.DataItem} item The item moved",1052512,47,"item moved",1023977,64,"/**\n     * @event itemtouchend",1029756,34,"touched\n     * @param {Ext.dataview.component.Container} this\n     * @param {Ext.dataview.component.DataItem} item The item touched",1052512,47,"item touched",1023977,64,"/**\n     * @event itemtap",1029756,34,"tapped\n     * @param {Ext.dataview.component.Container} this\n     * @param {Ext.dataview.component.DataItem} item The item tapped",1052512,47,"item tapped",1023977,64,"/**\n     * @event itemtaphold",1029756,34,"tapped\n     * @param {Ext.dataview.component.Container} this\n     * @param {Ext.dataview.component.DataItem} item The item tapped",1052512,47,"item tapped",1023977,64,"/**\n     * @event itemsingletap",1029756,34,"doubletapped\n     * @param {Ext.dataview.component.Container} this\n     * @param {Ext.dataview.component.DataItem} item The item singletapped",1052512,47,"item singletapped",1023977,64,"/**\n     * @event itemdoubletap",1029756,34,"doubletapped\n     * @param {Ext.dataview.component.Container} this\n     * @param {Ext.dataview.component.DataItem} item The item doubletapped",1052512,47,"item doubletapped",1023977,64,"/**\n     * @event itemswip",1029755,35,"swiped\n     * @param {Ext.dataview.component.Container} this\n     * @param {Ext.dataview.component.DataItem} item The item swiped",1052512,47,"item swiped",1023977,64,149024,34,"this.itemCache = []",1867199,49,"//@private\n    doI",1866573,32,"this.innerElement.on({\n            touchstart: 'onItem",960922,38,"ItemTouchEnd',\n            tap: 'onItemTap',\n            taphold: 'onItemTapHold',\n            touchmove: 'onItemTouchMove',\n            singletap: 'onItemSingleTap',\n            doubletap: 'onItemDoubleTap',\n            swipe: 'onItemSwipe',\n            delegate: '> .' + Ext.baseCSSPrefix + 'data-item",716348,36,");\n    },\n    //@private",549728,43,"callParent();\n        this.doInitialize();\n    },\n    onItem",1768208,34,1752661,38,"getTarget(),\n            item = Ext.getCmp(target.id);\n        item.on({\n            touchmove: 'onItemTouchMove',\n",1049354,35,866173,33,"me.fireEvent('itemtouchstart', me, item, me.indexOf(item), e);\n    },\n    onItem",1780910,33,1752661,38,"getTarget(),\n            item = Ext.getCmp(target.id);\n        me.fireEvent('itemtouchmove', me, item, me.indexOf(item), e);\n    },\n    onItem",1786528,36,1752665,34,"getTarget(),\n            item = Ext.getCmp(target.id);\n        item.un({\n            touchmove: 'onItemTouchMove',\n            scope: me\n        });\n        me.fireEvent('itemtouchend', me, item, me.indexOf(item), e);\n    },\n    onItemTap",1759166,51,"target = e.getTarget(),\n            item = Ext.getCmp(target.id);\n        me.fireEvent('itemtap', me, item, me.indexOf(item), e);\n    },\n    onItemTapHol",1759165,52,"target = e.getTarget(),\n            item = Ext.getCmp(target.id);\n        me.fireEvent('itemtaphold', me, item, me.indexOf(item), e);\n    },\n    onItemSingleTap",1759166,51,"target = e.getTarget(),\n            item = Ext.getCmp(target.id);\n        me.fireEvent('itemsingletap', me, item, me.indexOf(item), e);\n    },\n    onItemDoubleTap",1759166,51,"target = e.getTarget(),\n            item = Ext.getCmp(target.id);\n        me.fireEvent('itemdoubletap', me, item, me.indexOf(item), e);\n    },\n    onItem",1846763,33,1752665,34,"getTarget(),\n            item = Ext.getCmp(target.id);\n        me.fireEvent('itemswipe', me, item, me.indexOf(item), e);\n    },\n    moveItemsToCache: function(from, to",542384,39,"dataview = me.dataview,\n            maxItemCache = dataview.getMaxItemCache(),\n            items = me.getViewItems(),\n            itemCache = me.itemCache,\n            cacheLn = itemCache.length,\n            pressedCls = dataview.getPressedCls(),\n            selectedCls = dataview.getSelectedCls(),\n            i = to - from",908974,37,">= 0; i--) {\n            item = items[from + i];\n            if (cacheLn !== maxItemCache) {\n                me.remove(item, false);\n                item",461320,33,"pressedCls,\n                    selectedCls\n",1103023,36,"itemCache.push(item);\n                cacheLn++",804352,40,"tem",337866,34,"}\n        if (me.getViewItems().length == 0) {\n            this.dataview.showEmptyText();\n        }\n    },\n    moveItemsFromCache: function(record",1375856,40,"dataview = me.dataview,\n            store = dataview.getStore",1634656,49,"xtype = dataview.getDefaultType(),\n            itemConfig = dataview.getItemConfig(),\n            itemCache = me.itemCache,\n            cacheLn = itemCache.length",297657,41,"item, record;\n        if (ln) {\n            dataview.hideEmptyText()",1540863,59,"records[i]._tmpIndex = store.indexOf(records[i])",945550,35,"records, function(record1, record2) {\n            return record1._tmpIndex > record2._tmpIndex ? 1 : -1;\n        })",1304304,49,1484862,33,"if (cacheLn) {\n                cacheLn--;\n                item = itemCache.pop();\n                this.updateListItem(record, ",831468,44,"item = me.getDataItemConfig(xtype, record, item",516848,35,"item = this.insert(record._tmpIndex, item);\n            delete record._tmpIndex;",1179463,44,"getView",1059501,40,"getInnerItems();\n    },\n    updateListItem: function(record, item) {\n        if (item.updateRecord) {\n            if (item.getRecord() === record) {\n                item.updateRecord(r",1303903,45,"item.setRecord",1637055,38,"},\n    getDataItemConfig: function(xtype, record, itemConfig) {\n        var dataview = this.dataview,\n            dataItemConfig = {\n                xtype: xtype,\n                record: record,\n                itemCls: dataview.getItemCls(),\n                defaults: itemConfig,\n                dataview: dataview\n            };\n        return Ext.merge(dataItemConfig, itemConfig);\n    },\n    doRemoveItemCls: function(cls",1065999,32,"ViewItems()",1266718,46," = 0",1291886,45,"tems[i].removeCls(cls);\n        }\n    },\n    doAddItemCls: function(cls",1065999,32,"ViewItems()",1266718,46," = 0",1291886,45,"tems[i].addCls(cls);\n        }\n    },\n    updateAtNewIndex: function(oldIndex, newIndex, record) {\n        this.moveItemsToCache(oldIndex, oldIndex);\n        this.moveItemsFromCache([\n            record\n        ]",816701,48,"me = this,\n            itemCache = me.itemCache,\n            ln = itemCache",1433993,48,"n; i++) {\n            itemCache[i]",1062153,35,"callParent",1725279,51,"dataview.elemen",1028697,47,"/**\n     * @event itemtouchstart",1029756,34,"touched\n     * @param {Ext.dataview.element.Container} this",489614,33,"item The item touched",1052512,47,"item touched",1023977,64,"/**\n     * @event itemtouchmov",1029755,35,"moved\n     * @param {Ext.dataview.element.Container} this",489614,33,"item The item moved",1052512,47,"item moved",1023977,64,"/**\n     * @event itemtouchend",1029756,34,"touched\n     * @param {Ext.dataview.element.Container} this",489614,33,"item The item touched",1052512,47,"item touched",1023977,64,"/**\n     * @event itemtap",1029756,34,"tapped\n     * @param {Ext.dataview.element.Container} this",489614,33,"item The item tapped",1052512,47,"item tapped",1023977,64,"/**\n     * @event itemtaphold",1029756,34,"tapped\n     * @param {Ext.dataview.element.Container} this",489614,33,"item The item tapped",1052512,47,"item tapped",1023977,64,"/**\n     * @event itemsingletap",1029756,34,"singletapped\n     * @param {Ext.dataview.element.Container} this",489614,33,"item The item singletapped",1052512,47,"item singletapped",1023977,64,"/**\n     * @event itemdoubletap",1029756,34,"doubletapped\n     * @param {Ext.dataview.element.Container} this",489614,33,"item The item doubletapped",1052512,47,"item doubletapped",1023977,64,"/**\n     * @event itemswip",1029755,35,"swiped\n     * @param {Ext.dataview.element.Container} this",489614,33,"item The item swiped",1052512,47,"item swiped",1023977,64,"doI",1866573,32,"this.element.on({\n            touchstart: 'onItem",960922,38,"ItemTouchEnd',\n            tap: 'onItemTap',\n            taphold: 'onItemTapHold',\n            touchmove: 'onItemTouchMove',\n            singletap: 'onItemSingleTap',\n            doubletap: 'onItemDoubleTap',\n            swipe: 'onItemSwipe',\n            delegate: '> div",716348,36,");\n    },\n    //@private",549728,43,"callParent();\n        this.doInitialize();",1041534,83,";\n        me.callParent([\n            newBaseCls + '-container',\n            oldBaseCls\n        ]);\n    },\n    onItem",1768208,34,1752661,38,"getTarget(),\n            index = me.getViewItems().indexOf(target);\n        Ext.get(target).on({\n            touchmove: 'onItemTouchMove',\n",1049354,35,866173,33,"me.fireEvent('itemtouchstart', me, Ext.get(target), index, e);\n    },\n    onItem",1786528,36,1752665,34,"getTarget(),\n            index = me.getViewItems().indexOf(target);\n        Ext.get(target).un({\n            touchmove: 'onItemTouchMove',\n            scope: me\n        });\n        me.fireEvent('itemtouchend', me, Ext.get(target), index, e);\n    },\n    onItem",1780910,33,1752661,38,"getTarget(),\n            index = me.getViewItems().indexOf(target);\n        me.fireEvent('itemtouchmove', me, Ext.get(target), index, e);\n    },\n    onItemTap",1759166,51,"target = e.getTarget(),\n            index = me.getViewItems().indexOf(target);\n        me.fireEvent('itemtap', me, Ext.get(target), index, e);\n    },\n    onItemTapHol",1759165,52,"target = e.getTarget(),\n            index = me.getViewItems().indexOf(target);\n        me.fireEvent('itemtaphold', me, Ext.get(target), index, e);\n    },\n    onItemDoubleTap",1759166,51,"target = e.getTarget(),\n            index = me.getViewItems().indexOf(target);\n        me.fireEvent('itemdoubletap', me, Ext.get(target), index, e);\n    },\n    onItemSingleTap",1759166,51,"target = e.getTarget(),\n            index = me.getViewItems().indexOf(target);\n        me.fireEvent('itemsingletap', me, Ext.get(target), index, e);\n    },\n    onItem",1846763,33,1752665,34,"getTarget(),\n            index = me.getViewItems().indexOf(target);\n        me.fireEvent('itemswipe', me, Ext.get(target), index, e);\n    },\n    updateListItem: function(record",1054896,45,"dataview = me.dataview,\n            store = dataview.getStore(),\n            index = store.indexOf(record),\n            data = dataview.prepareData(record.getData(true), index, record);\n        data.xcount = store.getCount();\n        data.xindex = typeof data.xindex === 'number' ? data.xindex : index;\n        item.innerHTML = dataview.getItemTpl().apply(data);\n    },\n    addListItem: function(index, record",542384,39,"dataview = me.dataview,\n            store = dataview.getStore(),\n            data = dataview.prepareData(record.getData(true), index, record),\n            element = me.element,\n            childNodes = element.dom.childNodes,\n            ln = childNodes.length,\n            wrapElement;\n        data.xcount = typeof data.xcount === 'number' ? data.xcount : store.getCount();\n        data.xindex = typeof data.xindex === 'number' ? data.xindex : index;\n        wrap",554100,37,"ItemElementConfig(index, data));\n        if (!ln || index == ln) {\n            wrapElement.appendTo(e",892717,38,"wrapElement.insertBefore(childNodes[index]);\n        }\n    },\n    getItemElementConfig: function(index, data) {\n        var dataview = this.dataview,\n            itemCls = dataview.getItemCls(),\n            cls = dataview.getBaseCls() + '-item';\n        if (itemCls) {\n            cls += ' ' + itemCls",1112815,41,"cls: cls,\n            html: dataview.getItemTpl().apply(data)\n        };\n    },\n    doRemoveItemCls: function(cl",486832,33,"getViewItems()",486873,48,"i = 0",1291886,44,"Ext.fly(elements[i]).removeCls(cls);\n        }\n    },\n    doAddItemCls: function(cl",486832,33,"getViewItems()",486873,48,"i = 0",1291886,44,"Ext.fly(elements[i]).addCls(cls);\n        }\n    },\n    // Remove\n    moveItemsToCache: function(from, to",542384,39,"items = me.getViewItems(),\n            i = to - from",908974,37,">= 0; i--) {\n            item = items[from + i];\n            Ext.get(item).d",1049133,32,"me.getViewItems().length == 0) {\n            this.dataview.showEmptyText();\n        }\n    },\n    // Add\n    moveItemsFromCache: function(record",1375856,40,"dataview = me.dataview,\n            store = dataview.getStore",1634656,50,", record;\n        if (ln) {\n            dataview.hideEmptyText()",1540863,59,"records[i]._tmpIndex = store.indexOf(records[i])",945550,35,"records, function(record1, record2) {\n            return record1._tmpIndex > record2._tmpIndex ? 1 : -1;\n        })",1304304,49,1484862,33,"me.addListItem(record._tmpIndex, record);\n            delete record._tmpIndex;\n        }\n    },\n    // Transform ChildNodes into a proper Array so we can do indexOf...\n    getView",1059501,35,"Array.prototype.slice.call(this.element.dom.childNodes);\n    },\n    updateAtNewIndex: function(oldIndex, newIndex, record) {\n        this.moveItemsToCache(oldIndex, oldIndex);\n        this.moveItemsFromCache([\n            record\n        ]",816701,55,"s = this.getViewItems()",486873,48,"i = 0",1291886,44,"Ext.get(elements[i])",1062153,35,"callParent(",872780,34,"dataview\n *\n * DataView makes it easy to create lots of components dynamically, usually based off",1439368,36,"It's great for rendering lots of data from your server backend or any other data source and is what powers\n * components like {@link Ext.List}.\n *\n * Use DataView whenever you want to show sets of the same component many times, for examples in apps like these:\n *\n * - List of messages in an email app\n * - Showing latest news/tweets\n * - Tiled set of albums in an HTML5 music player\n *\n * # Creating a Simple DataView\n *\n * At its simplest, a DataView is just a Store full of data and a simple template that we use to render each item:\n *\n *",1078631,34,"     var touchTeam = Ext.create('Ext.DataView",729343,45,"store: {\n *             fields: ['name', 'age'],\n *    ",929234,32,"    {name: 'Jamie',  age: 100},\n *                 {name: 'Rob',   age: 21},\n *                 {name: 'Tommy', age: 24},\n *                 {name: 'Jacky', age: 24},\n *                 {name: 'Ed',   age: 26",1519058,47,"itemTpl: '<div>{name} is {age} years old</div>'\n *     });\n *\n * Here we just defined everything inline so it's all local with nothing being loaded from a server. For each of the 5\n * data items defined in our Store, DataView will render a",303608,33,"and pass in the name and age\n * data. The component will use the tpl we provided above, rendering the data in the curly bracket placeholders we\n * provided.\n *\n * Because DataView is integrated with Store, any changes to the Store are immediately reflected on the screen. For\n * example, if we add a new record to the Store it will be rendered into our DataView:\n *\n *     touchTeam.getStore().add({\n *",1380950,39,"age: 33\n *     });\n *\n * We didn't have to manually update the DataView, it's just automatically updated. The same happens if we modify one\n * of the existing records in the Store:\n *\n *     touchTeam.getStore().getAt(0).set('age', 42);\n *\n * This will get the first record in the Store (Jamie), change the age to 42 and automatically update what's on the\n * screen.",927852,41,"touchTeam = Ext.create('Ext.DataView",729343,45,"store: {\n *             fields: ['name', 'age'],\n *    ",929234,32,"    {name: 'Jamie',  age: 100},\n *                 {name: 'Rob',   age: 21},\n *                 {name: 'Tommy', age: 24},\n *                 {name: 'Jacky', age: 24},\n *                 {name: 'Ed',   age: 26",1519058,47,"itemTpl: '<div>{name} is {age} years old</div>'\n *     });\n *\n *     touchTeam.getStore().add({\n *",1380950,39,"age: 33\n *     });\n *\n *     touchTeam.getStore().getAt(0).set('age', 42);\n *\n * # Loading data from a server\n *\n * We often want to load data from our server or some other web service so that we don't have to hard code it all\n * locally. Let's say we want to load some horror movies from Rotten Tomatoes into a DataView, and for each one\n * render the cover image and title. To do this all we have to do is grab an api key from rotten tomatoes (http://developer.rottentomatoes.com/)\n * and modify the {@link #store} and {@link #itemTpl} a little:\n *\n *     @example",889665,33,"DataView",729343,45,"store: {\n *",1455535,44,"fields: ['id', 'title',",1078877,39,"name:'thumbnail_image',\n *",1400774,37,", record) {return record.raw.posters.thumbnail; }\n *              }],\n *",1523560,51,"jsonp',\n *                 // Modify this line with your API key, pretty please...\n *                 url: 'http://api.rottentomatoes.com/api/public/v1.0/movies.json?apikey=hbjgfgryw8tygxztr5wtag3u&q=Horror',\n *\n *    ",1381328,42,1593816,37,"    rootProperty: 'results'",1311227,37,"}",1026866,33,"Tpl: '<img src=\"{thumbnail_image}\" /><p>{title}</p><div style=\"clear: both\"></div>'\n *     });\n *\n * The Store no longer has hard coded data, instead we've provided",1588988,39,"which fetches\n * the data for us. In this case we used a JSON-P proxy so that we can load from Twitter's JSON-P search API. We also\n * specified the fields present for each tweet, and used Store's {@link Ext.data.Store#autoLoad autoLoad} configuration\n * to load automatically. Finally, we configured a Reader to decode the response from Twitter, telling it to expect\n * JSON and that the tweets can be found in the 'results' part of the JSON response.\n *\n * The last thing we did is update our template to render the image, Twitter username and message. All we need to do\n * now is add a little CSS to style the list the way we want it and we end up with a very basic Twitter viewer. Click\n * the preview button on the example above to see it in action.\n */\nExt.define('Ext.dataview.DataView",1817152,36,"alternateClassName: 'Ext.DataView'",713741,34,"Selectable\n    ],\n    xtype: 'dataview',\n    /**\n     * @event containertap\n     * Fires when a tap occurs and it is not on a template node",1415271,48,"event itemtouchstart",1029756,34,"touched\n     * @param {Ext.dataview.DataView} this",1052512,47,"item touched\n     * @param {Ext.Element/Ext.dataview.component.DataItem} target The element or DataItem touched",1651695,32,"record The record associated to the item",1023977,64,"/**\n     * @event itemtouchmov",1029755,35,"moved\n     * @param {Ext.dataview.DataView} this",1052512,47,"item moved\n     * @param {Ext.Element/Ext.dataview.component.DataItem} target The element or DataItem moved",1651695,32,"record The record associated to the item",1023977,64,"/**\n     * @event itemtouchend",1029756,34,"touched\n     * @param {Ext.dataview.DataView} this",1052512,47,"item touched\n     * @param {Ext.Element/Ext.dataview.component.DataItem} target The element or DataItem touched",1651695,32,"record The record associated to the item",1023977,64,"/**\n     * @event itemtap",1029756,34,"tapped\n     * @param {Ext.dataview.DataView} this",1052512,47,"item tapped\n     * @param {Ext.Element/Ext.dataview.component.DataItem} target The element or DataItem tapped",1651695,32,"record The record associated to the item",1023977,64,"/**\n     * @event itemtaphold\n     * Fires whenever an item's taphold event fires\n     * @param {Ext.dataview.DataView} this",1052512,47,"item touched\n     * @param {Ext.Element/Ext.dataview.component.DataItem} target The element or DataItem touched",1651695,32,"record The record associated to the item",1023977,64,"/**\n     * @event itemsingletap",1029756,34,"singletapped\n     * @param {Ext.dataview.DataView} this",1052512,47,"item singletapped\n     * @param {Ext.Element/Ext.dataview.component.DataItem} target The element or DataItem singletapped",1651695,32,"record The record associated to the item",1023977,64,"/**\n     * @event itemdoubletap",1029756,34,"doubletapped\n     * @param {Ext.dataview.DataView} this",1052512,47,"item doubletapped\n     * @param {Ext.Element/Ext.dataview.component.DataItem} target The element or DataItem doubletapped",1651695,32,"record The record associated to the item",1023977,64,"/**\n     * @event itemswip",1029755,35,"swiped\n     * @param {Ext.dataview.DataView} this",1052512,47,"item swiped\n     * @param {Ext.Element/Ext.dataview.component.DataItem} target The element or DataItem swiped",1651695,32,"record The record associated to the item",1023977,64,"/**\n     * @event select\n     * @preventable doItemSelect",1029756,34,"selected\n     * @param {Ext.dataview.DataView",1601167,49,"record associated to the item",1030360,33,"select\n     * @preventable doItemDeselect",1029756,34,"deselected\n     * @param {Ext.dataview.DataView",1601167,49,"record associated to the item\n     * @param {Boolean} supressed Flag to suppress the event",955804,46,"@preventable doR",955836,33,"DataView is refreshed\n     * @param {Ext.dataview.DataView} this\n     */\n    /**\n     * @hide\n     * @event add\n     */\n    /**\n     * @hide\n     * @event remove\n     */\n    /**\n     * @hide\n     * @event move",1817807,51,"layout\n         * Hide layout config in DataView. It only causes confus",1295184,36," @private",1217344,42,"Ext.data.Store/Object} store\n         * Can be either a Store instance or a",1478947,35,"turned into a Store. The Store is used\n         * to populate the set of items that will be rendered in the DataView. See the DataView intro documentation for\n         * more information about the relationship between Store and DataView",1293984,44,"tore",1609872,43,"[]} data",849578,44,1526863,40,"baseCls",1023338,74,"dataview",1221408,32,"String} emptyText",1149405,35,"the view when there is no data to display\n         */\n        emptyTex",930688,38,"Boolean} deferEmptyText `true` to defer `emptyText` being applied until the store's first load.\n         */\n        deferEmptyText",1367200,44,"String[]/Ext.XTemplate} itemTpl\n         * The `tpl` to use for each of the items displayed in this DataView.\n         */\n        itemTpl: '<div>{text}</div>",1221408,32,"String} pressed",1149747,41,"an item on the view while it is being pre",1037772,47,"pressedCls: 'x-item-pressed",1221408,32,"String} itemCls\n         * An additional CSS class to apply to items within the DataView",836480,43,"item",1224158,46,"} selected",1149747,41,"an item on the view while it is select",1037774,45,"selectedCls: 'x-item-selected",1221408,32,"String} triggerEvent\n         * Determines what type of touch event causes an item to be selected.\n         * Valid options are: 'itemtap', 'itemsingletap', 'itemdoubletap', 'itemswipe', 'itemtaphold'",836480,43,"triggerEvent: 'itemta",1221407,33,"String} triggerCtEvent\n         * Determines what type of touch event is recognized as a touch on the container.\n         * Valid options are 'tap' and 'singletap'",836480,43,"triggerCtEvent: 'ta",1221407,33,"Boolean} deselectOnContainerClick\n         * When set to true, tapping on the DataView's background (i.e. not on\n         * an item in the DataView) will deselect any currently selected item",1606288,44,"deselectOnContainerClick",1089728,36,"scrollable",849578,44,"scrollable",1614544,44,"/Object} inline\n         * When set to `true` the items within the DataView will have their display set to inline-block\n         * and be arranged horizontally. By default the items will wrap to the width of the DataView.\n         * Passing an object with `{ wrap: false }` will turn off this wrapping behavior and overflowed\n         * items will need to be scrolled to horizontally",836480,43,"inline",1037824,37,"Number} pressedDelay\n         * The amount of delay between the `tapstart` and the moment we add the `pressedCls`.\n         *\n         * Settings this to `true` defaults to 100m",1606288,46,"essedDelay: 100",1424272,37,"/Boolean} loadingText\n         * A string to display during data load operations.  If specified, this text will be\n         * displayed in a loading div and the view's contents will be cleared while loading, otherwise the view's\n         * contents will continue to display normally until the new data is loaded and the contents are replaced.\n         */\n        loadingText",1149520,45,"Boolean} useComponents\n         * Flag the use a component based DataView implementation.  This allows the full use of components in the\n         * DataView at the cost of some",746108,36,"Checkout the [DataView Guide](#!/guide/dataview) for more information o",747674,69,"useComponen",1035119,39,"Object} itemConfig",1609924,35,"that is passed to every item created by a component based DataView. Because each\n         * item that a DataView renders is a Component, we can pass configuration options to each component to\n         * easily customize how each child component behaves.",520411,33,"this is only used when `{@link #useComponents}` is `true`",836480,43,"itemConfig",1171567,35,"Number} maxItemCache\n         * Maintains a cache of reusable components when using a component based DataView.  Improving performance at\n         * the cost of memory.",520411,33,"this is currently only used when `{@link #useComponents}` is `true`",1037776,44,"axItemCache: 20",1425440,40,"efaultType\n         * The xtype used for the component based DataView.",520411,33,"this is only used when `{@link #useComponents}` is `true`",836480,43,"defaultType: 'dataitem",1221408,32,"Boolean} scrollToTopOnRefresh\n         * Scroll the DataView to the top when the DataView is refresh",1037774,45,"scrollToTopOnRefresh",839885,40,"config",542384,39,"layout;\n        me.hasLoadedStore = false;\n        me.mixins.selectable.constructor.apply(me, arguments);\n        me.indexOffset = 0",1038303,40,"   ",1057375,40,"layout && !layout.isAuto",1282095,34,"The base layout for a DataView must always be an Auto Layout');\n        }\n    },\n    updateItem",772232,40,718908,44,"container) {\n            if (oldCls) {\n                container.doRemoveItemCls(oldCls",1100928,33,"newCls) {\n                container.doAddItemCls(",772477,32,"\n    },\n    storeEventHooks: {\n        beforeload: 'onBeforeLoad',\n        load: 'onLoad',\n        refresh: 'refresh',\n        addrecords: 'onStoreAdd',\n        removerecords: 'onStoreRemove',\n        updaterecord: 'onStoreUpdate'",1866560,45,"this.callParent();",907648,36,"container,\n            triggerEvent = me.getTriggerEvent();\n        me.on(me.getTriggerCtEvent(), me.onContainerTrigger, me);\n        container = me.container = this.add(new Ext.dataview[me.getUseComponents() ? 'component' : 'element'].Container({\n            baseCls: this.getBaseCls()\n        }));\n        container.dataview = me;\n        if (triggerEvent) {\n            me.on(triggerEvent, me.onItemTrigger, me",880871,34,"{\n            itemtouchstart: 'onItemTouchStart',\n            itemtouchend: 'onItemTouchEnd',\n            itemtap: 'onItemTap',\n            itemtaphold: 'onItemTapHold',\n            itemtouchmove: 'onItemTouchMove',\n            itemsingletap: 'onItemSingleTap',\n            itemdoubletap: 'onItemDoubleTap',\n            itemswipe: 'onItemSwipe',\n            scope: me\n        });\n        if (me.getStore()) {\n            if (me",1020655,32,"me.refresh",120431,41,"me.on({\n                    painted: 'refresh',\n",320697,49,"}",20784,32,",\n    applyInline",1726112,37,338524,32,1533484,40,"}",1006880,35,"updateInline: function(newInline, oldInline) {\n",764708,39,";\n        if (oldInline) {\n",461304,45,"baseCls + '-inlineblock',\n                baseCls + '-nowrap'",1436320,39,"newInline) {\n            this.addCls(baseCls + '-inlineblock');\n            if (Ext.isObject(newInline) && newInline.wrap",504761,35,"addCls(baseCls + '-nowrap",390240,41,"this.removeCls(baseCls + '-nowrap",20783,33,",\n    /**\n     * Function which can be overridden to provide custom formatting for each Record that is used by this\n     * DataView's {@link #tpl template} to render each node.\n     * @param {Object/Object[]} data The raw data object that was used to create the Record.\n     * @param {Number} index the index number of the Record being prepared for rendering",1638368,33,"record The Record being prepared for rendering.\n     * @return {Array/Object} The formatted data in a format expected by the internal {@link #tpl template}'s `overwrite()` method.\n     * (either",656500,36," (i.e. `{0}`) or an object (i.e. `{foo: 'bar'}`))\n     */\n    prepareData: function(data, index, record",1325504,37,"/ apply to the selection model to maintain visual UI cues\n    onContainerTrigger",1759166,37,";\n        if (e.target != me.element.dom",550175,42,"if (me.getDeselectOnContainerClick() && me.getStore()) {\n            me.deselectAll();\n        }\n    },\n    // apply to the selection model to maintain visual UI cues\n    onItemTrigger: function(me, index",1005289,49,"this.selectWithEvent(this.getStore().getAt(index));\n        }\n    },\n    doAddPressedCls",1642844,33,"me = this,\n            item = me.getItemAt(me.getStore().indexOf(record));\n        if (Ext.isElement(item)) {\n            item = Ext.get(item);\n        }",1052672,33,1045868,36,"    item.renderElement.addCls(me.getPressedCls()",1334144,41,"tem.addCls(me.getPressedCls()",20784,32,",\n    onItemTouchStart: function(container, target, index, ",1652080,40,"store = me.getStore(),\n            record = store && store.getAt(index);\n        me.fireAction('itemtouchstart', [\n            me,\n            index,\n",1739360,32,"record,\n            e\n        ], 'doItemTouchStart');\n    },\n    doItemTouchStart: function(me, index, target, record) {\n        var pressedDelay = me.getPressedDelay();\n",1227530,34,"if (pressedDelay > 0) {\n                me.pressedTimeout = Ext.defer(me.doAddPressedCls, pressedDelay, me, [\n    ",1642363,35,1555884,45,"me.doAddPressedCls",1637055,38,"},\n    onItemTouchEnd: function(container, target, index, ",1652080,40,"store = me.getStore(),\n            record = store && store.getAt(index);\n",168176,32,"'pressedTimeout",1014671,36,"pressedTimeout);\n            delete this.pressedTimeout;\n        }\n        if (record && target) {\n            if (target",1061096,32,"target.renderElement.removeCls(me.getPressedCls()",120432,41,"arget.removeCls(me.getPressedCls()",354096,35,"me.fireEvent('itemtouchend', me, index, target, record, e);\n    },\n    onItemTouchMove: function(container, target, index, ",1652080,40,"store = me.getStore(),\n            record = store && store.getAt(index);\n        if (me.hasOwnProperty('pressedTimeout')) {\n            clearTimeout(me.pressedTimeout);\n            delete me.pressedTimeout;\n        }\n        if (record && target) {\n            if (target",1061096,32,"target.renderElement.removeCls(me.getPressedCls()",120432,41,"arget.removeCls(me.getPressedCls()",354096,35,"me.fireEvent('itemtouchmove', me, index, target, record, e);\n    },\n    onItemTap: function(container, target, index, ",1652080,40,"store = me.getStore(),\n            record = store && store.getAt(index);\n        me.fireEvent('itemtap', me, index, target, record, e);\n    },\n    onItemTapHold: function(container, target, index, ",1652080,40,"store = me.getStore(),\n            record = store && store.getAt(index);\n        me.fireEvent('itemtaphold', me, index, target, record, e);\n    },\n    onItemSingleTap: function(container, target, index, ",1652080,40,"store = me.getStore(),\n            record = store && store.getAt(index);\n        me.fireEvent('itemsingletap', me, index, target, record, e);\n    },\n    onItemDoubleTap: function(container, target, index, ",1652080,40,"store = me.getStore(),\n            record = store && store.getAt(index);\n        me.fireEvent('itemdoubletap', me, index, target, record, e);\n    },\n    onItemSwipe: function(container, target, index, ",1652080,40,"store = me.getStore(),\n            record = store && store.getAt(index);\n        me.fireEvent('itemswipe', me, index, target, record, e);\n    },\n    // invoked by the selection model to maintain visual UI cues\n    onItemSelect: function(record, suppressEvent",489263,35,1653658,33,"me.doItemSelect(me",1643741,40,"me.fireAction('select', [\n",1555822,36,"record\n            ], 'doItemSelect');\n        }\n    },\n    // invoked by the selection model to maintain visual UI cues\n    doItemSelect: function(me, record) {\n        if (me.container && !me",1005310,32,"item = me.getItemAt(me.getStore().indexOf(record));\n            if (Ext.isElement(item)) {\n                item = Ext.get",831165,34,306057,32,1045872,32,"        item.renderElement.removeCls(me.getPressedCls());\n                    item.renderElement.addCls(me.getSelectedCls(",1377215,49,"item.removeCls(me.getPressedCls());\n                    item.addCls(me.getSelectedCls()",1282480,44,"\n    },\n    // invoked by the selection model to maintain visual UI cues\n    onItemDeselect: function(record, suppressEvent",489263,35,"if (me.container && !me.isDestroyed) {\n    ",1653759,41,"    me.doItemDeselect(me, r",1303903,45,"me.fireAction('deselect'",1555814,48,"record,\n                    suppressEvent\n                ], 'doItemDeselect",20783,33,",\n    doItemDeselect: function(me, record) {\n        var item = me.getItemAt(me.getStore().indexOf(record));\n        if (Ext.isElement(item)) {\n            item = Ext.get(item);\n        }",1052672,33,1045868,36,"    item.renderElement",461320,33,"me.getPressedCls(),\n                    me.getSelectedCls()",1553614,58,"item",461320,33,"me.getPressedCls(),\n                    me.getSelectedCls()",1100910,43,"}\n    },\n    update",1541599,35,"store = this.getStore();\n        if (!store) {\n            this.setStore(",1381167,32,1331183,43,"autoDestroy: tru",922238,34,"{\n            store.add(data);\n        }\n    },\n    apply",1484962,33,"var me = this,\n            bindEvents = Ext.apply({}, me.storeEventHooks, {",802503,41,",\n            proxy, reader;\n        if (store) {\n           ",1581281,38,"store);\n            if (store && Ext.isObject(store) && ",1604398,33,"store.on(bindEvents);\n                proxy = store.getProxy();\n        ",1675631,33,1542386,56,"if (reader)",1542448,33,".on('exception', 'handleException', this",100032,55,1357838,36,"warn(\"The specified Store cannot be found",521551,32,"}\n        return store;\n    },\n    /**\n     * Method called when the Store's Reader throws an exception\n     * @method handleException\n     */\n    handle",1300682,32,1040140,34,"updateStore: function(newStore, oldStor",1652080,40,"bindEvents = Ext.apply({}, me.storeEventHooks, {",802503,41,",\n            proxy, reader;\n        if (oldStore && Ext.isObject(oldStore) && oldStore.isStore) {\n            oldStore.un(bindEvents);\n            if (!m",173007,33,"me.onStoreClear",504800,34,"oldStore.getAutoDestroy()) {\n                oldStore.destro",1480896,42,"proxy = oldStore.getProxy();\n        ",1675631,33,1542386,56,"if (reader)",1542448,33,".un('exception', 'handleException', this",100032,55,"}\n        }\n        if (newStore) {\n            if (newStore.isLoaded()) {\n                this.hasLoadedStore",685005,35,"if (newStore.isLoading()) {\n                me.onBeforeLoad",504800,34,"me.container) {\n                me.refresh",900144,32,"},\n    onBeforeLoad: function() {\n        var loadingText = this.getLoadingText();\n        if (loadingText && this.isPainted()) {\n            this.setMasked({\n       ",1037353,37,"       message: loadingText",1850800,40,"hideEmptyText();\n    },\n    updateEmptyText: function(newEmptyText, oldEmptyTex",1557808,40,"store;\n        if (oldEmptyText && me.emptyTextCmp) {\n            me.remove(me.emptyTextCmp, true);\n            delete me.emptyTextCmp;\n        }\n        if (newEmptyText) {\n            me.emptyTextCmp = me.add({\n",993855,52,"cls: me.getBaseCls() + '-emptytext',\n                html: newEmptyText,\n",1080845,41,"});\n            store = me.getStore();\n            if (store && me.hasLoadedStore && !store.getCount()) {\n                this.showEmptyText",900144,32,"},\n    onLoad: function(store) {\n        //remove any masks on the store\n        this.hasLoadedStore = true;",1040131,36,"    if (!store.getCount()) {\n            this.showEmptyText(",463328,35,"Refreshes the view by reloading the data from the store and re-rendering the template.",970585,43,"var me = this,\n            container = me.container;\n        if (!me.getStore()) {\n            if (!me.hasLoadedStore && !me.getDeferEmptyText()) {\n                me.showEmptyText",506575,36,";\n        }",1040916,38,"me.fireAction('refresh',",1553253,36," 'doRefresh'",1042385,33,792718,32,792754,93,"},\n    onAfterRend",1496047,38,1038303,40,"    me.updateStore(me.getStore()",492288,33,"an item",1639424,54,"I",914542,34,"Ext.dom.Element/Ext.dataview.component.DataItem} item I",915051,34,"/\n    getItem",1051900,42,"getViewItems()[index - this.indexOffset",1654528,36,"index for the specified item.\n     * @param {Number} item The item to locate",1286823,32,"for the specified item.\n     */\n    getItemIndex",881534,32,"ndex = this.getViewItems().indexOf(item);\n        return (index === -1) ? index : this.indexOffset +",1286683,38,"an array of the current items in the DataView",428384,33,"[]/Ext.dataview.component.DataItem[]} Array of Items.\n     */\n    getView",1059501,40,"container.getViewItems();\n    },\n    doRefresh: function(me) {\n        var container = me.container,\n            store = me.getStore(),\n            records = store.getRange(),\n            items = me.getViewItems(),\n            recordsL",1666384,32,"i",1271754,35,"deltaLn = recordsLn - itemsLn,\n            scrollable = me.getScrollable()",1066083,35,"this.getScrollToTopOnRefresh() && scrollable) {\n            scrollable.getScroller().scrollToTop();\n        }\n        // No items, hide all the items from the collection.\n        if (recordsLn < 1) {\n            me.onStoreClear",336384,33," else {\n            me.hideEmptyText();\n        }\n        // Too many items, hide the unused ones\n        if (deltaLn < 0) {\n            container.moveItemsToCache(itemsLn + deltaLn, itemsLn - 1);\n            // Items can changed, we need to refresh our references\n            items = me.getViewItems();\n            itemsLn = items.length;\n        }\n        // Not enough items, create new ones\n        else if (deltaLn > 0) {\n            container.moveItemsFromCache(store.getRange(itemsLn));\n        }\n        // Update Data and insert the new html for existing items\n        for (i = 0; i < itemsL",1267406,51,"container.updateListItem(records[i]",1280770,32,"his.hasSelection()) {\n            var selection = this.getSelection(),\n                selectionLn = this.getSelectionCount()",1511606,38,"for (i = 0; i < selectionLn; i++) {\n                record = selection[i];\n                this.doItemSelect(this, ",1637056,37,"},\n    showEmptyText",1260832,32,"getEmptyText() && (this.hasLoadedStore || !this.getDeferEmptyText())) {\n            this.emptyTextCmp",1014933,34,"EmptyText",1260832,32,"getEmptyText()) {\n            this.emptyTextCmp.hid",862512,56,"var store = this.getStore(),\n            proxy = (store && store.getProxy()),\n            reader = (proxy && proxy.getReader());",1369152,35,"// TODO: Use un() instead of clearListeners() when TOUCH-2723 is fixed.\n            //          reader.un('exception', 'handleException', this);\n            reader.clearListeners",707998,54,"    this.setStore(null);\n    },\n    onStoreClea",1496048,51,"container = me.container,\n            items = me.getViewItems();\n        container.moveItemsToCache(0, items.length - 1);\n        this.showEmptyText",1192704,41," @param {Ext.data.Store} store\n     * @param {Array} records\n     */\n    onStoreAdd",1484399,37,"if (records) {\n            this.hideEmptyText();\n            this.container.moveItemsFromCache(records",1587584,51,"@param {Ext.data.Store} store\n     * @param {Array} records\n     * @param {Array} indices\n     */\n    onStoreRemove: function(store, records, indices",718896,42,1636672,48,1304304,49,"container.moveItemsToCache(indices[i], indices[i]",1587584,51,"@param {Ext.data.Store}",1600281,36,"} recor",1601246,33,1601410,32,"\n     */\n    onStoreUpdate: function(store, record, newIndex, oldI",1285101,43,"container = me.container,\n            item;\n        oldIndex = (typeof oldIndex === 'undefined') ? newIndex : oldIndex;\n        if (oldIndex !== newIndex) {\n            container.updateAtNewIndex(oldIndex, newIndex, record);\n            if (me.isSelected(record)) {\n                me.doItemSelect(me, ",1637056,32," else {\n            item = me.getViewItems()[newIndex",306042,43,"// Bypassing setter because sometimes we pass the same record (different data)\n                container.updateListItem(record, ",820352,35,"}\n});\n\n/**\n * @aside video list\n * @aside guide list\n *\n * IndexBar is a component used to display a list of data (primarily an alphabet) which can then be used to quickly\n * navigate through a list (see {@link Ext.List}) of data. When a user taps on an item in the {@link Ext.IndexBar},\n * it will fire the {@link #index} event.\n *\n * Here is an example of the usage in a {@link Ext.List}:\n *\n *     @example phone portrait preview\n *     Ext.define('Contact",1452656,44,1414719,49,"Name', 'lastName'",1311264,36,"var store = new Ext.data.JsonStore({\n *        model: 'Contact'",927975,46,"grouper: {\n *",1610362,41,"*",1610417,39,"Name')[0];\n *            }\n *        }",928006,38,928045,40,"},\n *            {",928105,40,"},\n *",1637860,33,928185,39,928225,39,"},\n *",1637983,33,"  lastName: 'Conran'},\n *            {firstName: 'Dave',    lastName: 'Kaneda'},\n *            {firstName: 'Jacky',   lastName: 'Nguyen'},\n *            {firstName: 'Abraham', lastName: 'Elias'},\n *            {firstName: 'Jay',     lastName: 'Robinson'},\n *            {firstName: 'Nigel',   lastName: 'White'},\n *            {firstName: 'Don',     lastName: 'Griffin'},\n *            {firstName: 'Nico',    lastName: 'Ferrero'},\n *            {firstName: 'Jason',   lastName: 'Johnsto",928324,37,"var list = new Ext.List(",928384,121,"\n *        grouped     : true,\n *        indexBar    : true,\n *",1593983,32,"hideOnMaskTap: false\n *     });\n *\n*/\nExt.define('Ext.dataview.IndexBar",1000495,36,"alternateClassName: 'Ext.IndexBar',\n    /**\n     * @event index\n     * Fires when an item in the index bar display has been tapped.\n     * @param {Ext.dataview.IndexBar} this The IndexBar instance",413992,33,"HTML inside the tapped node.",489614,33,"target The node on the indexbar that has been tapped",1817806,32,"baseCls: Ext.baseCSSPrefix + 'indexbar",1221408,32,"String} direction\n         * Layout direction, can be either 'vertical' or 'horizontal'",1605488,42,"direction: 'vertic",834992,34,"Array} letters\n         * The letters to show on the index bar",836480,43,"letters: [\n            'A',\n            'B',\n            'C',\n            'D',\n            'E',\n            'F',\n            'G',\n            'H',\n            'I',\n            'J',\n            'K',\n            'L',\n            'M',\n            'N',\n            'O',\n            'P',\n            'Q',\n            'R',\n            'S',\n            'T',\n            'U',\n            'V',\n            'W',\n            'X',\n            'Y',\n            'Z'\n        ],\n        ui: 'alphabe",849200,33,"String} listPrefix\n         * The prefix string to be used at the beginning of the list.\n         * E.g: useful to add a \"#\" prefix before number",1606288,44,"listPrefix: null\n    },\n    platformConfig: [\n        {\n            theme: [\n                'Blackberry'\n            ],\n",955172,33,",\n            letters: [\n                '*',\n                '#',\n                'A',\n                'B',\n                'C',\n                'D',\n                'E',\n                'F',\n                'G',\n                'H',\n                'I',\n                'J',\n                'K',\n                'L',\n                'M',\n                'N',\n                'O',\n                'P',\n                'Q',\n                'R',\n                'S',\n                'T',\n                'U',\n                'V',\n                'W',\n                'X',\n                'Y',\n                'Z'\n            ]\n        }\n    ],\n    // @private\n    itemCls: Ext.baseCSSPrefix + ''",885792,32,"newD",964830,38,"baseCls = this.getBaseCls();\n",788236,32,"baseCls + '-' + oldDirection, baseCls + '-' + newDirection",1038336,53,"// Blackberry Specific code for Index Bar Indicator\n        if (Ext.theme.is.Blackberry",969774,41,"reference: 'wrapper',\n    ",1038432,41,"    'x-centered',\n                    'x-indexbar-wrapper'\n",1483885,35,1012894,32,"{",832421,34,": 'indicator',\n            ",1038432,41,"            'x-indexbar-indicator'\n    ",1483881,43,"    hidden",791134,32,1150654,74,"reference: 'indicatorInner'",649344,34,760744,33,"                'x-indexbar-indicator-inner'",86032,33,"]",98576,55,"]",789050,44,"this.callParent()",522667,32,433311,38,"{\n                reference: 'wrapper',\n    ",1038432,41,"    'x-centered',\n                    'x-indexbar-wrapper'\n",1483885,35,1012894,32,"this.callParent()",522667,32,";\n        }\n    },\n    updateLetters: function(letters) {\n        this.innerElement.setHtml('');\n        if (letters) {\n            var ln = let",922687,61,"n; i++) {",787020,35,"createChild({\n                    html: letters[i]",790494,33,"}\n        }\n    },\n    updateListPrefix: function(listPrefix) {\n        if (listPrefix && listPrefix.length",554996,33,".createChild({\n                html: listPrefix\n            }, 0);\n        }\n    },\n    // @private",549728,43,"callParent();\n        this.innerElement.on(",1741040,62,1741143,34,"dragend: this.onDragEnd,\n            drag: this.onDrag",716349,35,")",1777213,49,"e.stopPropagation();\n",1041967,33,"this.getBaseCls() + '-pressed');\n        this.pageBox = this.innerElement.getPageBox",978035,32,1778816,46,"onDragEnd();\n    },\n    // @private\n    onDragEnd: function() {\n",1041726,36,"this.getBaseCls() + '-pressed');\n        // Blackberry Specific code for Index Bar Indicator\n        if (this.indicator) {\n            this.indicator.hide();\n        }\n    },\n    // @private",977550,35,1069673,39,",\n            target, isValidTarget,\n            pageBox = this.pageBox;\n        if (!pageBox) {\n            pageBox = this.pageBox = this.el",850204,33,"if (this.getDirection()",965577,32,"f (point.y > pageBox.bottom || point.y < pageBox.top) {",335918,51,"target = Ext.Element.fromPoint(pageBox.left + (pageBox.width / 2), point.y);\n            isValidTarget = target.getParent() == this.element;\n            // Blackberry Specific code for Index Bar Indicator\n            if (this.indicator) {\n                this.indicator.show();\n                var halfIndicatorHeight = this.indicator.getHeight() / 2,\n                    y = point.y - this.element.getY();\n                y = Math.min(Math.max(y, halfIndicatorHeight), this.element.getHeight() - halfIndicatorHeight);\n                if (this.indicatorInner && isValidTarget) {\n                    this.indicatorInner.setHtml(target.getHtml().toUpperCase()",104368,37,"this.indicator.setTop(y - (halfIndicatorHeight)",48816,46,"if (point.x > pageBox.right || point.x < pageBox.left) {",335918,51,"target = Ext.Element.fromPoint(point.x, pageBox.top + (pageBox.height / 2));\n            isValidTarget = target.getParent() == this.element;\n        }\n        if (target && isValidTarget",974495,32,"index', this, target.dom.innerHTML, target",1732400,58,493237,34,"Array.prototype.slice.call(me.innerElement.dom.childNodes)",486873,48,"i = 0",1291886,44,"Ext.removeNode(elements[i]",707999,37,")",1181738,36,"private - To be made a sample\n */\nExt.define('Ext.dataview.ListItemHeader",1000495,36,"xtype: 'listitemheader",1149344,44,1023338,74,"list-header'\n    }\n});\n\n/**\n * A ListItem is a container for {@link Ext.dataview.List} with \n * useSimpleItems: false. \n * \n * ListItem configures and updates the {@link Ext.data.Model records} for  \n * the sub-component items in a list. \n *   \n * Overwrite the `updateRecord()` method to set a sub-component's value. \n * Sencha Touch calls `updateRecord()` whenever the data in the list updates.\n *\n * The `updatedata` event fires after `updateRecord()` runs.\n *\n * *Note*: Use of ListItem increases overhead since it generates more markup than\n * using the List class with useSimpleItems: true. This overhead is more\n * noticeable in Internet Explorer. If at all possible, use\n * {@link Ext.dataview.component.SimpleListItem} instead.\n * \n * The following example shows how to configure and update sub-component items\n * in a list:\n *\n *     Ext.define('Twitter.view.TweetListItem",1452656,33,"view.component.ListItem',\n *         xtype : 'tweetlistitem',\n *         requires: [\n *             'Ext.Img'\n *         ]",1309903,38,"userName: {\n *                 cls: 'username'",1310720,34,"text: {\n *                 cls: 'text'",1310720,34,"avatar: {\n *                 docked: 'left',\n *                 xtype : 'image',\n *                 cls   : 'avatar',\n *                 width: '48px',\n *                 height: '48px'",1310720,34,258889,36,"vbox",1164908,35,"     \n *         applyUserName",518718,36,"return Ext.factory(config, Ext.Component, this.getUserName());\n *         },\n *     \n *         updateUserName: function(newUserName) {\n *             if (newUserName) {\n *                 this.insert(0, newUserName);",1164909,34,"     \n *         applyText",518718,36,"return Ext.factory(config, Twitter.view.TweetListItemText, this.getText());\n *         },\n *     \n *         updateText: function(newText) {\n *             if (newText) {\n *                 this.add(newText);",1164909,34,"     \n *         applyAvata",518717,37,"return Ext.factory(config, Ext.Img, this.getAvatar());\n *         },\n *     \n *         updateAvatar: function(newAvatar) {\n *             if (newAvatar) {\n *                 this.add(newAvatar);",1164909,34,"     \n *         updateRecord: function(record) {     \n *             if (!record) {\n *                 return;\n *",206409,33,"this.getUserName().setHtml(record.get('username'));\n *             this.getText().setHtml(record.get('text'));\n *             this.getAvatar().setSrc(record.get('avatar_url'));\n *     ",877200,37,"*",1149241,48,"dataview.component.ListItem', {\n    extend: Ext.dataview.component.DataItem,\n    xtype: 'listitem'",1000525,33,"Ext.baseCSSPrefix + 'list-item',\n        dataMap: null,\n        body: {\n",993487,44,"cls: 'x-list-item-body'\n        },\n        disclosure: {\n",993487,44,"cls: 'x-list-disclosure',\n            hidden: true,\n            docked: 'right'\n        },\n        header: {\n",993487,44,"cls: 'x-list-header',\n            html: ' '\n        },\n        tpl: null,\n        items: null\n    },\n    applyBody: function(body) {\n        if (body && !body.isComponent) {\n            body = Ext.factory(body, Ext.Component, this.getBody()",1081136,32,";\n    },\n    updateBody: function(body, oldBody) {\n",1107358,32,"this.add(body);\n        } else if (oldBody) {\n            oldBody",434912,33,"apply",1124312,35,"if (header && !header.isComponent) {\n            header = Ext.factory(header, Ext.Component, this.getHeader())",1116611,33,";\n    },\n    updateHeader: function(header, oldHeader) {\n        if (oldHeader) {\n            oldHeader",434912,33,"applyDisclosure: function(disclosure) {\n        if (disclosure && !disclosure.isComponent) {\n            disclosure = Ext.factory(disclosure, Ext.Component, this.getDisclosure());\n        }\n        return disclosure;\n    },\n    updateDisclosure: function(disclosure, oldDisclosure) {\n        if (disclosure) {\n            this.add(disclosure);\n        } else if (oldDisclosure) {\n            oldDisclosure",434912,34,"pdateTpl: function(tpl) {\n        this.getBody().setTpl(tpl);",1305712,35,"record",542384,39,"dataview = me.dataview || this.getDataview(),\n            data = record && dataview.prepareData(record.getData(true), dataview.getStore().indexOf(record), record),\n            dataMap = me.getDataMap(),\n            body = this.getBody(),\n            disclosure = this.getDisclosure();\n        me._record = record;\n        if (dataMap) {\n            me.doMapData(dataMap, data, body);\n        } else if (body) {\n            body.updateData(data || null);\n        }\n        if (disclosure && record && dataview.getOnItemDisclosure()) {\n            var disclosureProperty = dataview.getDisclosureProperty();\n            disclosure[(data.hasOwnProperty(disclosureProperty) && data[disclosureProperty] === false) ? 'hide' : 'show'](",412895,36,"@event updatedata\n",793483,42,"DataItem is upda",1090595,32,"view.component.DataItem} this The DataItem insta",17118,32,"newData The new data.\n         */\n        me.fireEvent('updatedata', me, data",816701,44,"Ext.destroy(this.getHeader",862623,59,"A SimpleListItem is a simplified list item that is used by {@link Ext.dataview.List} when\n * useSimpleItems is set to true.  It supports disclosure icons and headers and generates the\n * slimmest markup possible to achieve this. It doesn't support container functionality like adding\n * or docking items. If you require those features you should have your list use\n * {@link Ext.dataview.component.ListItem} instances.\n */\nExt.define('Ext.dataview.component.SimpleListItem",1000495,36,"xtype: 'simplelistitem'",1000525,33,"Ext.baseCSSPrefix + 'list-item',\n        disclosure: {\n",993487,44,"cls: 'x-list-disclosure',\n",1080849,33,"},\n        header: {\n",993487,44,"cls: 'x-list-header',\n            html: ' '\n        },\n        /*\n         * @private dataview\n         */\n        dataview",1037824,37,1642762,42,"of this ListTplItem. It is controlled by the Lis",1222975,44,"record: null",1866560,45,1001907,37," + '-tpl');\n    },\n    apply",1124312,35,"if (header && !header.isComponent) {\n            header = Ext.factory(header, Ext.Component, this.getHeader())",1116611,33,";\n    },\n    updateHeader: function(header, oldHeader) {\n        if (oldHeader) {\n            oldHeader",434912,33,"applyDisclosure: function(disclosure) {\n        if (disclosure && !disclosure.isComponent) {\n            disclosure = Ext.factory(disclosure, Ext.Component, this.getDisclosure());\n        }\n        return disclosure;\n    },\n    updateDisclosure: function(disclosure, oldDisclosure) {\n        if (disclosur",764303,33,"endChild(disclosure.renderElement);\n        } else if (oldDisclosure) {\n            oldDisclosure",434912,34,"pdateRecord",1642844,33,"me = this,\n            dataview = me.dataview || this.getDataview(),\n            data = record && dataview.prepareData(record.getData(true), dataview.getStore().indexOf(record), record),\n            disclosure = this.getDisclosure();\n        me.updateData(data || null);\n        if (disclosure && record && dataview.getOnItemDisclosure()) {\n            var disclosureProperty = dataview.getDisclosureProperty();\n            disclosure[(data.hasOwnProperty(disclosureProperty) && data[disclosureProperty] === false) ? 'hide' : 'show'](",1732400,54,"Ext.destroy(this.getHeader(), this.getDisclosure",862623,88,"util.PositionMap', {\n    config: {\n        minimumHeight: 50",520880,57,"map = [];\n        this.adjustments = {};\n        this.offset = 0;",703536,45,"populate: function(count, offset) {\n        var map = this.map = this.map || [],\n            minimumHeight = this.getMinimumHeight(),\n            i, previousIndex, ln;\n        offset = offset || 0;\n        // We add 1 item to the count so that we can get the height of the bottom item\n        count++;\n        map.length = count;\n        map[0] = 0;\n        for (i = offset + 1 , ln = count - 1; i <= ln; i++) {\n            previousIndex = i - 1;\n            map[i] = map[previousIndex] + minimumHeight;\n        }\n        this.adjustments = {\n            indices: [],\n            heights: {}\n        };\n        this.offset = 0;\n        for (i = 1 , ln = count - 1; i <= ln; i++) {\n            previousIndex = i - 1;\n            this.offset += map[i] - map[previousIndex] - minimumHeight;\n        }\n    },\n    setItemHeight: function(index, height) {\n        height = Math.max(height, this.getMinimumHeight());\n        if (height !== this.getItemHeight(index)) {\n            var adjustments = this.adjustments;\n            adjustments.indices.push(parseInt(index, 10));\n            adjustments.heights[index] = height;\n        }",1428991,41,"var adjustments = this.adjustments,\n            indices = adjustments.indices,\n            heights = adjustments.heights",565958,42,"ln = indices.length,\n            minimumHeight = this.getMinimumHeight(),\n            difference = 0,\n            i, j, height, index, nextIndex, currentHeight;\n        if (!adjustments.indices.lengt",1727598,49,"Ext.Array.sort(indices,",944150,53,")",1304304,49,"index = indices[i];\n            nextIndex = indices[i + 1] || map.length - 1;\n            currentHeight = (map[index + 1] !== undefined) ? (map[index + 1] - map[index] + difference) : minimumHeight;\n            height = heights[index];\n            difference += height - currentHeight;\n            for (j = index + 1; j <= nextIndex; j++) {\n                map[j] += difference",1051440,39,"offset += difference;\n        this.adjustments = {\n            indices: [],\n            heights: {}\n        };",1742863,33,"getItemHeigh",1051901,41,"map[index + 1] - this.map[index];\n    },\n    getTotal",1831904,36,"((this.map.length - 1) * this.getMinimumHeight()) + this.offset;\n    },\n    findIndex: function(pos) {\n        return this.map.length ? this.binarySearch(this.map, pos) : 0;\n    },\n    binarySearch: function(sorted, value",1251456,45,"sorted.length;\n        if (value < sorted[0]",1060412,35,"\n        if (value > sorted[end - 1]) {\n            return end - 1;\n        }\n        while (start + 1 < end) {\n            var mid = (start + end) >> 1,\n                val = sorted[mid];\n            if (val == ",1394384,32,"mid;\n            } else if (val < value) {\n                start = mid",346432,39,"end = mi",1720784,35,1251908,33,"aside guide list\n * @aside video list\n *\n * List is a custom styled DataView which allows Grouping, Indexing, Icons, and a Disclosure. See the\n * [Guide](#!/guide/list) and [Video](#!/video/list) for more.\n *\n *",1078631,34,1599097,41,1309083,38,"'{title}'",929230,38,"title: 'Item 1' },\n *             { title: 'Item 2' },\n *             { title: 'Item 3' },\n *             { title: 'Item 4'",889215,33,"A more advanced example showing a list of people grouped by last name:\n *\n *",1078631,34,"     Ext.define('Contact",1452656,44,1414719,49,"Name', 'lastName'",1311264,36,1676288,33,"Store', {\n *        model: 'Contact'",927975,46,"grouper: {\n *",1610362,41,"*",1610417,39,"Name')[0];\n *            }\n *        }",928006,80,928265,32,"Rob',     lastName: 'Dougan",928263,34,"Ed',      lastName: 'Spencer",928144,33,"Jamie',   lastName: 'Avins' ",928264,33,"Aaron',   lastName: 'Conran",928263,34,"Dave',    lastName: 'Kaneda'  ",928206,33,"cky',   lastName: 'Nguyen",928263,34,"Abraham', lastName: 'Elias'   ",928206,33,"y',     lastName: 'Robinson",928205,32,"Nigel',   lastName: 'White' ",928264,33,"Don',     lastName: 'Griffi",928143,34,"Nico',    lastName: 'Ferrero",928144,33,"Jason',   lastName: 'Johnston'}\n *",929518,66,928396,129,",\n *        grouped: true",1869876,33,"dock items to the bottom or top of a List, you can use the scrollDock configuration on child items in this List. The following example adds a button to the bottom of the List.\n *\n *     @example phone preview\n *     Ext.define('Contact",1452656,44,1414719,49,"Name', 'lastName'",1311264,36,1676288,33,"Store', {\n *        model: 'Contact'",927975,46,"grouper: {\n *",1610362,41,"*",1610417,39,"Name')[0];\n *            }\n *        }",928006,80,928265,32,"Rob',     lastName: 'Dougan",928263,34,"Ed',      lastName: 'Spencer",928144,33,"Jamie',   lastName: 'Avins' ",928264,33,"Aaron',   lastName: 'Conran",928263,34,"Dave',    lastName: 'Kaneda'  ",928206,33,"cky',   lastName: 'Nguyen",928263,34,"Abraham', lastName: 'Elias'   ",928206,33,"y',     lastName: 'Robinson",928205,32,"Nigel',   lastName: 'White' ",928264,33,"Don',     lastName: 'Griffi",928143,34,"Nico',    lastName: 'Ferrero",928144,33,"Jason',   lastName: 'Johnston'}\n *",929518,106,928434,79," store: store,\n *",259026,34,"xtype: 'button',\n *             scrollDock: 'bottom',\n *             docked: 'bottom',\n *             text: 'Load More...'\n *         }]",929663,32,"dataview.List",1678528,34,"List',\n    extend: Ext.dataview.DataView,\n    xtype: 'list'",713741,34,"Bind",713781,35,"isclose\n     * @preventable doDisclose\n     * Fires whenever a disclosure is handled\n     * @param {Ext.dataview.List} this The List instance",1651695,32,"record The record associated to the item\n     * @param {HTMLElement} target The element disclosed",1052512,47,"item disclosed",1023977,64,1448416,38,"layout\n         * Hide layout config in DataView. It only causes confus",1295184,36,31563,32,"yout: 'fi",849200,40,"/Object} indexBar\n         * `true` to render an alphabet IndexBar docked on the right.\n         * This can also be a config object that will be passed to {@link Ext.IndexBar",1457407,44,"indexBar: false,\n        ic",1153600,39,"Boolean} preventSelectionOnDisclose `true` to prevent the item selection when the user\n         * taps a disclose ic",835680,45,"preventSelectionOnDisclose",1089728,36,"baseCls",1023338,74,"lis",849200,42,"pinHeaders\n         * Whether or not to pin headers on top of item groups while scrolling for an iPhone native list experience",836480,44,"inHeader",1614543,47,"grouped\n         * Whether or not to group items in the provided Store with a header for each item",836480,43,"group",714959,39,"Boolean/Function/Object} onItemDisclosure\n         * `true` to display a disclosure icon on each list item.\n         * The list will still fire the disclose event, and the event can be stopped before itemtap.\n         * By setting this config to a function, the function passed will be called when the disclosure\n         * is tapped.\n         * Finally you can specify an object with a 'scope' and 'handler'\n         * property defined. This will also be bound to the tap event listener\n         * and is useful when you want to change the scope of the handler",836480,43,"onItemDisclosure",1240512,46,"isclosureProperty\n         * A property to check on each record to display the disclosure on a per record basis.  This\n         * property must be false to prevent the disclosure from being displayed on the item",836480,43,"disclosureProperty: 'disclosure",1221408,32,"String} ui\n         * The style of this list. Available options are `normal` and `round`.\n         * Please note: if you use the `round` UI, {@link #pinHeaders} will be automatically turned off as\n         * it is not supported.\n         */\n        ui: 'norm",834992,34,"Boolean} useComponents\n         * Flag the use a component based DataView implementation.  This allows the full use of components in the\n         * DataView at the cost of some",746108,36,"Checkout the [DataView Guide](#!/guide/dataview) for more information o",747674,59," @private",1217344,42,"Object} itemConfig",1609924,35,"that is passed to every item created by a component based DataView. Because each\n         * item that a List renders is a Component, we can pass configuration options to each component to\n         * easily customize how each child component behave",1606288,34," @private",1217344,42,"Number} maxItemCache\n         * Maintains a cache of reusable components when using a component based DataView.  Improving performance at\n         * the cost of memory.\n         * Note this is currently only used when useComponents is tru",742959,36,"private",1217344,42,1035885,35,"xtype used for the component based DataView. Defaults to dataitem.\n         * Note this is only used when useComponents is tru",1422719,44,"defaultTyp",1493214,43,"Object} itemMap",31552,41,"item",273199,33,"cfg {Number} itemHeight\n         * This allows you to set the default item height and is used to roughly calculate the amount\n         * of items needed to fill the list. By default items are around 50px high.\n         */\n        itemHeight: 42",1000704,40,"variableHeight",1448478,32,"allows you optimize the list by not having it read the DOM heights of list items.\n         * Instead it will assume (and set) the height to be the {@link #itemHeight}.\n         */\n        variableHeights",1023536,36," {Boolean} refreshHeightOnUpdate\n         * Set this to false if you make many updates to your list (like in an interval), but updates\n         * won't affect the item's height. Doing this will increase the performance of these updates.\n         */\n        refreshHeightOnUpdate",1614544,46,"infinite",1089483,33,"render all items in this list, and render them relatively",743792,34,"uration can not be dynamically changed after the list has",1479769,35,"infinite",1023536,36," {Boolean} useSimpleItems\n         * Set this to true if you just want to have the list create simple items that use the itemTpl.\n         * These simple items still support headers, grouping and disclosure functionality but avoid\n         * container layouts and deeply nested markup. For many Lists using this configuration will\n         * drastically increase the scrolling and render performance.\n         */\n        useSimpleItem",1367199,38,"Object} scrollable",31552,41,"scrollabl",1153454,32,"The amount of items we render additionaly besides the ones currently visible.\n         * We try to prevent the rendering of items while scrolling until the next time you stop scrolling.\n         * If you scroll close to the end of the buffer, we start rendering individual items to always\n         * have the {@link #minimumBufferSize} prepared.\n         * @type {Number}\n         */\n        bufferSize: 20,\n        minimumBufferDistance: 5,\n        useHeader",1614543,47,"striped\n         * Set this to true if you want the items in the list to be zebra striped, alternating their\n         * background color.\n         */\n        striped: false\n    },\n    platformConfig: [\n        {\n            theme: [\n                'Windows'\n            ],\n            itemHeight: 44\n        },\n        {\n            theme: [\n                'Cupertino'\n            ],\n            itemHeight: 43\n        }\n    ],\n    topRenderedIndex: 0,\n    topVisibleIndex: 0,\n    visibleCount: 0",572896,45,"e = this,\n            layout",1038303,40,"   ",1057375,40,"layout && !layout.isFit",1282095,34,"The base layout for a DataView must always be a Fit Layout');\n        }\n    },\n    // We create complex instance arrays and objects in beforeInitialize so that we can use these inside of the initConfig process.\n    beforeI",1866573,32,"var me = this,\n            container = me.container,\n            scrollable, scrollViewElement, pinnedHeader;\n        Ext.apply(me, {\n            listItems: [],\n            headerItems: [],\n            updatedItems: [],\n            headerMap: [],\n            scrollDockItems: {\n                top: [],\n                bottom: []",254456,35,"// We determine the translation methods for headers and items within this List based\n        // on the best strategy for the device\n        this.translationMethod = Ext.browser.is.AndroidStock2 ? 'cssposition' : 'csstransform';\n        // Create the inner container that will actually hold all the list items\n",970272,38,"container = me.container = Ext.factory({\n",1869764,37,"               scrollable: {\n                    scroller: {\n                        autoRefresh: !me.getInfinite(),\n",832194,35,"'vertical'",18384,54,");\n        }\n        // We add the container after creating it manually because when you add the container,\n        // the items config is initialized. When this happens, any scrollDock items will be added,\n        // which in turn tries to add these items to the container\n        me.add(container);\n        // We make this List's scrollable the inner containers scrollable\n        scrollable = container.getScrollable();\n        scrollViewElement = me.scrollViewElement = scrollable.getElement();\n        me.scrollElement = scrollable.getScroller().getElement();\n        me.setScrollable(scrollable);\n        me.scrollableBehavior = container.getScrollableBehavior();\n        // Create the pinnedHeader instance thats being used when grouping is enabled\n        // and insert it into the scrollElement\n        pinnedHeader = me.pinnedHeader = Ext.factory({\n            xtype: 'listitemheader',\n            html: '&nbsp;',\n    ",960384,36,"    translationMethod: this.translationMethod\n            },\n            cls: [\n                'x-list-header',\n                'x-list-header-swap'",1727358,35,"pinnedHeader.translate(0, -10000);\n        pinnedHeader.$position = -10000;\n        scrollViewElement.insertFirst(pinnedHeader.renderElement);\n        // We want to intercept any translate calls made on the scroller to perform specific list logic\n        me.bind(scrollable.getScroller().getTranslatable(), 'doTranslate', 'onTranslate');\n    },\n    // We override DataView's initialize method with an empty function",549728,38,"var me = this,\n            container = me.container,\n            scrollViewElement = me.scrollViewElement,\n            indexBar = me.getIndexBar(),\n            triggerEvent = me.getTriggerEvent(),\n            triggerCtEvent = me.getTriggerCtEvent();\n        if (indexBar) {\n            scrollViewElement.appendChild(indexBar.",554200,34,"if (triggerEvent) {\n            me.on(triggerEvent, me.onItemTrigger, me);\n        }\n        if (triggerCtEvent) {\n            me.on(triggerCtEvent, me.onContainerTrigger, me);\n        }\n        container.element.on({\n            delegate: '.' + me.getBaseCls() + '-disclosure',\n            tap: 'handleItemDisclosure',\n            scope: me\n        });\n        container.element.on({\n",719133,53,"scope: me\n        });\n        // Android 2.x not a direct child",885584,32,"on({\n            touchstart: 'onItem",960922,38,"ItemTouchEnd',\n            tap: 'onItemTap',\n            taphold: 'onItemTapHold',\n            singletap: 'onItemSingleTap',\n            doubletap: 'onItemDoubleTap',\n            swipe: 'onItemSwipe',\n            delegate: '.' + Ext.baseCSSPrefix + 'list-item',\n            scope: me\n        });\n        if (me.getStore()) {\n            me.refresh();\n        }\n    },\n    on",708558,40,"me = this,\n            pinnedHeader = me.pinnedHeader,\n            store = me.getStore(),\n            storeCount = store && store.getCount(),\n            grouped = me.getGrouped(),\n            infinite = me.getInfinite();\n        if (!storeCount) {\n            me.showEmptyText();\n            me.showEmptyScrollDock();\n            pinnedHeader.$position = -10000;\n            pinnedHeader.translate(0, -10000);\n        } else if (infinite && me.itemsCount) {\n            me.handleItemUpdates(y);\n            me.handleItemHeights();\n            me.handleItemTransforms();\n            if (!me.onIdleBound) {",1752382,36,"onIdle(me.onAnimationIdle, me);\n                me.onIdleBound",453936,41,"if (grouped && me.groups && me.groups.length && me.getPinHeaders()) {\n            me.handlePinnedHeader(y);\n        }\n        // This is a template method that can be intercepted by plugins to do things when scrolling\n        this.onScrollBinder(x, y);\n    },\n    onScrollBinder: function() {},\n    handleItemUpdates: function(",683904,40,"listItems = me.listItems,\n            itemsCount = listItems.length,\n            info = me.getListItemInfo(),\n            itemMap = me.getItemMap(),\n            bufferSize = me.getBufferSize(),\n            lastIndex = me.getStore().getCount() - 1,\n            minimumBufferDistance = me.getMinimumBufferDistance(),\n            currentTopVisibleIndex = me.topVisibleIndex,\n            topRenderedIndex = me.topRenderedIndex,\n            updateCount, i, item, topVisibleIndex, bufferDistance, itemIndex;\n        // This is the index of the item that is currently visible at the top\n        me.topVisibleIndex = topVisibleIndex = Math.max(0, itemMap.findIndex(-y) || 0);\n        if (currentTopVisibleIndex !== topVisibleIndex) {\n            // When we are scrolling up\n            if (currentTopVisibleIndex > topVisibleIndex) {\n                bufferDistance = topVisibleIndex - topRenderedIndex;\n                if (bufferDistance < minimumBufferDistance) {\n                    updateCount = Math.min(itemsCount, minimumBufferDistance - bufferDistance);\n                    if (updateCount == itemsCount) {\n                        me.topRenderedIndex = topRenderedIndex = Math.max(0, topVisibleIndex - (bufferSize - minimumBufferDistance));\n                        // Update all\n        ",52240,32,"updateCount",939280,33,"    itemIndex = topRenderedIndex + i;\n                            item = listItems",403614,33,"me.updateListItem(item, itemIndex, info",238592,50,214560,32,"for (i = 0; i < updateCount",939280,33,"    itemIndex = topRenderedIndex - i",650782,34,"if (itemIndex <",1799808,34,191392,35,146400,34,"item = listItems.pop",345631,32,"listItems.unshift(item",91790,32,"e.updateListItem(item, itemIndex, info",91790,32,"e.topRenderedIndex--",278240,49,127152,32," else // When we are scrolling down\n            {\n                bufferDistance = bufferSize - (topVisibleIndex - topRenderedIndex);\n                if (bufferDistance < minimumBufferDistance) {\n                    updateCount = Math.min(itemsCount, minimumBufferDistance - bufferDistance);\n                    if (updateCount == itemsCount) {\n                        me.topRenderedIndex = topRenderedIndex = Math.min(lastIndex - itemsCount, topVisibleIndex - minimumBufferDistance);\n                        // Update all\n        ",52240,32,"updateCount",939280,33,"    itemIndex = topRenderedIndex + i;\n                            item = listItems",403614,33,"me.updateListItem(item, itemIndex, info",238592,50,214560,32,"for (i = 0; i < updateCount",939280,33,"    itemIndex = topRenderedIndex + itemsCount + i",254192,34,"itemIndex > lastIndex",91904,36,1547695,61,"    item = listItems.shift",345631,32,"listI",1273904,37,"        me.updateListItem(item, itemIndex, info",91790,32,"e.topRenderedIndex++",278240,49,127152,41,"}\n    },\n    onAnimationIdle",900368,50,"info = me.getListItemInfo(),\n            bufferSize = me.getBufferSize(),\n            topVisibleIndex = me.topVisibleIndex,\n            topRenderedIndex = me.topRenderedIndex,\n            lastIndex = me.getStore().getCount() - 1,\n            listItems = me.listItems,\n            itemsCount = listItems.length,\n            topBufferDistance, bottomBufferDistance, i, ln, item, itemIndex;\n        topBufferDistance = topVisibleIndex - topRenderedIndex;\n        bottomBufferDistance = topRenderedIndex + bufferSize - topVisibleIndex;\n        if (topBufferDistance < bottomBufferDistance) {\n            // This means there are more items below the visible list. The user\n            // has probably just scrolled up. In this case we move some items\n            // from the bottom to the top only if the list is scrolled down a bit\n            if (topVisibleIndex > 0) {\n                ln = bottomBufferDistance - topBufferDistance;",52239,65,"temIndex = topRenderedIndex - i - 1;\n                    if (itemIndex",70362,32,275179,45,"    item = listItems.pop();\n                    listItems.unshift(item);\n                    me.updateListItem(item, itemIndex, info);\n                    me.topRenderedIndex--",134128,43," else {\n            ln = topBufferDistance - bottomBufferDistance",284336,57,"itemIndex = topRenderedIndex + itemsCount + i;\n                if (itemIndex > lastIndex) {",382362,58,"    item = listItems.shift();\n                listI",1273904,33,"me.updateListItem(item, itemIndex, info);\n                me.topRenderedIndex",1753006,36,"me.handleItemHeights();\n        me.handleItemTransforms();\n        me.onIdleBound = false;\n    },\n    handleItemHeights",900368,50,"updatedItems = me.updatedItems,\n            ln = updat",1067695,32,"Map = me.getItemMap(),\n            useSimpleItems = me.getUseSimpleItems(),\n            minimumHeight = itemMap.getMinimumHeight(),\n            headerIndices = me.headerIndices,\n            headerMap = me.headerMap,\n            variableHeights = me.getVariableHeights(),\n            itemIndex, i, j, jln, item, height, scrollDockHeight",1304304,49,"item = updatedItems[i];\n            itemIndex = item.$dataIndex;\n            // itemIndex may not be set yet if the store is still being loaded\n            if (item",785758,34,"if (variableHeights) {\n                    height = useSimpleItems ? item.element.getHeight() : item.element.getFirstChild().getHeight();\n                    height = Math.max(height, minimum",870031,54,"height = minimumHeight",199328,37,"tem.$ownItemHeight = height;\n                jln = me.scrollDockItems.top.length;\n                if (item.isFirst) {\n                    me.totalScrollDockTopHeight = 0;",1564154,37,"jl",281456,34,"scrollDockHeight = me.scrollDockItems.top[j].$scrollDock",807568,32,"height += scrollDock",807568,32,"me.totalScrollDockTopHeight += scrollDockHeight",406608,58,"jln = me.scrollDockItems.bottom.length;\n                if (item.isLast",18235,33,"0; j < jl",281456,34,"scrollDockHeight = me.scrollDockItems.bottom[j].$scrollDock",807568,32,"height += scrollDockHeight",406608,58,"if (headerIndices && headerIndices[itemIndex]) {\n                    height += me.headerHeight",199328,37,"temMap.setItemHeight(itemIndex, height);\n                item.$height = heigh",1436096,36,"temMap.update();\n        height = itemMap.getTotalHeight();\n        headerMap.length = 0;\n        for (i in headerIndices) {\n            if (headerIndic",360526,40,"headerMap.push(itemMap.map",924016,38,"me.setScrollerHeight(height);\n        me.updatedItems.length = 0;\n    },\n    setScroller",455596,35,"var me = this,\n            scroller = me.",954785,39,",\n            translatable = scroller.getTranslatable();\n        if (height != scroller.givenSize) {\n            scroller.setSize(height);\n            scroller.refreshMaxPosition();\n            scroller.fireEvent('refresh', scroller);\n            if (translatable.isAnimating && translatable.activeEasingY && translatable.activeEasingY.setMinMomentumValue",712902,33,"activeEasingY.setMinMomentumValue(-scroller.getMaxPosition().y",20784,32,",\n    handleItem",374112,33,"var me = this,\n            listItems = me.listItems,\n            itemsCount = listItems.length,\n            itemMap = me.getItemMap(),\n            scrollDockItems = me.scrollDockItems,\n            grouped = me.getGrouped(),\n            item, transY, i, jln, j;\n        for (i = 0; i < itemsCount; i++) {\n            item = listItems[i];\n            transY = itemMap.map[item.$dataIndex];\n            if (!item.$hidden && item.$position !== transY) {\n                item.$position = transY;\n                jln = scrollDockItems.top.length;\n                if (item.isFirst && jln",18235,33,"0; j < jl",281456,34,"scrollDockItems.top[j].translate(0, transY);\n                        transY += scrollDockItems.top[j].$scrollDockHeight",406608,58,"if (grouped && me.getUseHeaders() && me.headerIndices && me.headerIndices[item.$dataIndex]) {\n                    item.getHeader().translate(0, transY);\n                    transY += me.headerHeight",199328,37,"tem.translate(0, transY);\n                transY += item.$ownItemHeight;\n                jln = scrollDockItems.bottom.length;\n                if (item.isLast && jln",18235,33,"0; j < jl",281456,34,"scrollDockItems.bottom[j].translate(0, transY);\n                        transY += scrollDockItems.bottom[j].$scrollDockHeight",2928,64,"}\n    },\n    handlePinnedHeader: function(",683904,40,"pinnedHeader = me.pinnedHeader,\n            itemMap = me.getItemMap(),\n            groups = me.groups,\n            headerMap = me.headerMap,\n            headerHeight = me.headerHeight,\n            store = me.getStore(),\n            totalScrollDockTopHeight = me.totalScrollDockTopHeight,\n            record, closestHeader, pushedHeader, transY, headerString;\n        closestHeader = itemMap.binarySearch(headerMap, -y);\n        record = groups[closestHeader].children[0];\n",1227530,34,"pushedHeader = y + headerMap[closestHeader + 1] - headerHeight;\n            // Top of the list or above (hide the floating header offscreen)\n            if (y >= 0 || (closestHeader === 0 && totalScrollDockTopHeight + y >= 0) || (closestHeader === 0 && -y <= headerMap[closestHeader])) {\n                transY = -10000",132823,32,"croll the floating header a bit\n            else if (pushedHeader < 0) {\n                transY = pushedHeader;\n            } else // Stick to the top of the screen\n            {\n                transY = Math.max(0, y",321950,33,"erString = store",1656055,37,"if (pinnedHeader.$currentHeader != headerString) {\n                pinnedHeader.setHtml(headerString);\n                pinnedHeader.$currentHeader = headerString",1070992,32,"pinnedHeader.$position != transY) {\n                pinnedHeader.translate(0, transY);\n                pinnedHeader.$position = transY",1277504,37,"createItem",1019056,33,"me = this,\n            container = me.container,\n            listItems = me.listItems,\n            infinite = me.getInfinite(),\n            scrollElement = me.scrollElement,\n            useHeaders = me.getUseHeaders(),\n            item, header, itemCls;\n        item = Ext.factory(config);\n        item.dataview = me;\n        item.$height = config.minHeight;\n        if (!infinite) {\n            itemCls = me.getBaseCls() + '-item-relative';\n            item.addCls(itemCls);\n        }\n        if (useHeaders) {\n            header = item.getHeader();\n            if (!infinite) {\n                header.addCls(itemCl",7552,41,"header.setTranslatable({\n                    translationMethod: this.translationMethod",790494,37,"header.translate(0, -10000);\n                scrollElement.insertFirst(header.renderElement",354096,35,"container.doAdd(item);\n        listItems.push(",1055328,39,"setItemsCount: function(itemsCou",1557807,41,"listItems = me.listItems,\n            config = me.getListItemConfig(),\n            difference = itemsCount - listItem",1199341,35," This loop will create new items if the new itemsCount is higher than the amount of items we currently have\n        for (i = 0; i < difference; i++) {\n            me.createItem(config);\n        }\n        // This loop will destroy unneeded items if the new itemsCount is lower than the amount of items we currently have\n        for (i = difference; i < 0; i++) {\n            listItems.pop()",1069333,33,"itemsCount = itemsCount;\n        // Finally we update all the list items with the correct content\n        me.updateAllListItems();\n        //Android Stock bug where redraw is needed to show empty list",1748912,44,"me.container.element && itemsCount === 0 && difference !== 0) {\n            me.container.element.redraw();\n        }\n        return me.listItems;\n    },\n",764665,47,"if (newUi && newUi != oldUi && newUi == 'round') {\n            this.setPinHeaders(false",707999,54,",\n    updateListItem: function(item, index, info",542384,39,"record = info.store.getAt(index),\n            headerIndices = me.headerIndices,\n            footerIndices = me.footerIndices,\n            useHeaders = me.getUseHeaders(),\n            header = useHeaders && item.getHeader(),\n            scrollDockItems = me.scrollDockItems,\n            updatedItems = me.updatedItems,\n            currentItemCls = item.renderElement.classList.slice(),\n            currentHeaderCls = useHeaders && header.renderElement.classList.slice(),\n            infinite = me.getInfinite(),\n            storeCount = info.store.getCount(),\n            itemCls = [],\n            headerCls = [],\n            itemRemoveCls = [\n                info.headerCls,\n                info.footerCls,\n                info.firstCls,\n                info.lastCls,\n                info.selectedCls,\n                info.stripeCls\n            ],\n            headerRemoveCls = [\n                info.headerCls,\n                info.footerCls,\n                info.firstCls,\n                info.lastCls\n            ],\n            ln, i, scrollDockItem, classCache;\n        // When we update a list item, the header and scrolldocks can make it have to be retransformed.\n        // For that reason we want to always set the position to -10000 so that the next time we translate\n        // all the pieces are transformed to the correct location\n        if (infinite) {\n            item.$position = -10000;\n        }\n        // We begin by hiding/showing the item and its header depending on a record existing at this index\n        if (!record) {\n            item.setRecord(null);\n            if (infinite) {\n                item.translate(0, -1000",1004336,41,876734,35,"    if (useHeaders) {\n                if (infinite) {\n                    header.translate(0, -10000",1377216,48,"header.hid",1062624,35,"}\n            item.$hidden = true;",1743223,36,"if (item.$hidden) {\n            if (!infinit",876855,56,"    item.$hidden",1770811,32,"infinite) {\n            updat",1276333,38,"// If this item was previously used for the first record in the store, and now it will not be, then we hide\n        // any scrollDockTop items and change the isFirst flag\n        if (item.isFirst && index !== 0 && scrollDockItems.top.length",1620860,34,"scrollDockItems.top",212944,40,"scrollDockItem = scrollDockItems.top[i];\n                if (infinite) {\n                    scrollDockItem.translate(0, -10000",341552,47,"item.isFirst",1773216,36,"is item was previously used for the last record in the store, and now it will not be, then we hide\n        // any scrollDockBottom items and change the istLast flag\n        if (item.isLast && index !== storeCount - 1 && scrollDockItems.bottom.length",1620860,34,"scrollDockItems.bottom",212944,40,"scrollDockItem = scrollDockItems.bottom[i];\n                if (infinite) {\n                    scrollDockItem.translate(0, -10000",341552,47,"item.isLast",1773216,38,"item is already bound to this record then we shouldn't have to do anything\n        if (item.$dataIndex !== index) {\n            item.$dataIndex = index;\n            me.fireEvent('itemindexchange', me, record, ",1056810,32,"// This is where we actually update the item with the record\n        if (item.getRecord() === record) {\n            item.updateRecord(",1643743,38,"item.setRecord(record);\n        }\n        if (me.isSelected(record)) {\n            itemCls.push(info.selectedCls);\n        }\n        if (info.grouped && useHeaders) {\n            if (headerIndices[index]) {\n                itemCls.push(info.headerCls);\n                headerCls.push(info.headerCls);\n                header.setHtml(info.store.getGroupString(record));\n                if (!infinite) {\n                    header.renderElement.insertBefore(item",712767,33,"}\n                header.show",1334143,42,"f (infinite) {\n                    header.translate(0, -10000",1377216,48,"header.hid",1062624,35,"}\n            if (footerIndices[index]) {\n                itemCls.push(info.footerCls);\n                headerCls.push(info.footerCl",346496,32,"    if (!info.grouped && useHeaders) {\n            header.hide",911357,32,"=== 0) {\n            item.isFirst = true;\n            itemCls.push(info.firstCls);\n            headerCls.push(info.firstCls);\n            if (!info.grouped) {\n                itemCls.push(info.headerCls);\n                headerCls.push(info.headerCls",1100928,33,"!infinite",411055,33,"ln = scrollDockItems.top",212944,44,"scrollDockItem = scrollDockItems.top[i];\n                    if (info.grouped) {\n                        scrollDockItem.renderElement.insertBefore(header",712767,33,85616,37,"scrollDockItem.renderElement.insertBefore(item",712767,33,283312,46,"}\n        if (index === storeCount - 1) {\n            item.isLast = true;\n            itemCls.push(info.lastCls);\n            headerCls.push(info.lastCls);\n            if (!info.grouped) {\n                itemCls.push(info.footerCls);\n                headerCls.push(info.footerCls",1100928,33,"!infinite",411055,33,"ln = scrollDockItems.bottom",212944,44,"scrollDockItem = scrollDockItems.bottom[i];\n                    scrollDockItem.renderElement.insertAfter(item",712767,33,1066320,34,"if (info.striped && index % 2 == 1) {\n            itemCls.push(info.stripeCls)",1752154,32,"temCls",1707102,32,"itemRemoveCls",220365,32,"Ext.Array.remove(currentItemCls, itemRemoveCl",1574464,33,"itemCls = Ext.Array.merge(itemCls, currentItemCls);\n        }\n        if (useHeaders && currentHeaderCls",1707102,32,"headerRemoveCls",220365,32,"Ext.Array.remove(currentHeaderCls, headerRemoveCl",1574464,33,"headerCls = Ext.Array.merge(headerCls, currentHeaderCls);\n        }\n        classCache = itemCls.join(' ');\n        if (item.classCache !== classCache) {\n            item.renderElement.setCls(itemCls);\n            item.classCache = classCache;\n        }\n        if (useHeaders) {\n            header.renderElement.setCls(headerCls);\n        }\n    },\n    updateAllList",1059725,32,"me = this,\n            store = me.getStore(),\n            items = me.listItems,\n            info = me.getListItemInfo(),\n            topRenderedIndex = me.topRenderedIndex",486300,33,"store",1620860,34,"i",892176,40,"    me.updateListItem(items[i], topRenderedIndex + i, info",1053968,39,"me.isPainted()) {\n            if (me.getInfinite() && store && store.getCount()) {\n                me.handleItemHeights",759615,33,"refreshScroller();\n        }\n    },\n    doRefresh",900368,50,"infinite = me.getInfinite(),\n            scroller = me.",954785,39,",\n            storeCount = me.getStore().getCount();\n        if (infinite) {\n            me.getItemMap().populate(storeCount, this.topRenderedIndex);\n        }\n        if (me.getGrouped()) {\n            me.refreshHeaderIndices();\n        }\n        // This will refresh the items on the screen with the new data\n        if (storeCount) {\n            me.hideScrollDockItems();\n            me.hideEmptyText();\n            if (!infinite) {\n                me.setItemsCount(storeCount);\n                if (me.getScrollToTopOnRefresh(",1010963,33,1865707,33,938528,39,"if (me.getScrollToTopOnRefresh()) {\n                    me.topRenderedIndex = 0;\n                    me.topVisibleIndex = 0;\n                    scroller.position.y = 0",89104,36,"me.updateAllListItems(",674752,49,"onStoreClear(",828428,35,"Resize: function(container, siz",1652080,40,"currentVisibleCount = me.visibleCount;\n        if (!me.headerHeight) {\n            me.headerHeight = parseInt(me.pinnedHeader.renderElement.getHeight(), 10);\n        }\n        if (me.getInfinite()) {\n            me.visibleCount = Math.ceil(size.height / me.getItemMap().getMinimumHeight());\n            if (me.visibleCount != currentVisibleCount) {\n                me.setItemsCount(me.visibleCount + me.getBufferSize());\n                // This is a private event used by some plugins\n    ",1644224,32,"visiblecount', this, me.visibleCount, currentVisibleCount",724240,36,"me.listItems.length && me.getUseHeaders() && me.getGrouped() && me.getPinHeaders()) {\n            // Whenever the container resizes, headers might be in different locations. For this reason\n            // we refresh the header position map\n            me.updateHeaderMap();\n        }\n    },\n    refreshScroll",1496047,38,";\n        if (me.isPainted()) {\n            if (!me.getInfinite() && me.getGrouped() && me.getPinHeaders()) {\n                me.updateHeaderMap",759615,33,954785,40,"refresh();\n        }\n    },\n    updateHeaderMap",900368,50,"headerMap = me.headerMap,\n            headerIndices = me.headerIndices,\n            header, i;\n        headerMap.length = 0;\n        for (i in headerIndices) {\n            if (headerIndic",360526,40,"header = me.getItemAt(i).getHeader();\n                headerMap.push(header.renderElement.dom.offsetTop",20784,32,",\n    applyVariableHeights",1388714,33,"this.getInfinite()) {",981216,51,"value;\n    },\n    apply",1044575,45,"if (!defaultType) {\n            defaultType = this.getUseSimpleItems() ? 'simplelistitem' : 'listitem';",1412070,33,"Type;\n    },\n    applyItemMap: function(itemMap) {",1045347,32,"Map, Ext.util.PositionMap, this.getItemMap());\n    },\n    updateItemHeight: function(itemHeight) {\n        this.getItemMap().setMinimumHeight(itemHeight);\n    },\n    applyIndexBar: function(indexBa",1370159,32,"indexBar, Ext.dataview.IndexBar, this.getIndexBar());\n    },\n    updatePinHeaders: function(pinnedHeaders) {\n        if (this.isPainted()) {\n            this.pinnedHeader.translate(0, pinnedHeaders ? this.pinnedHeader.$position : -10000);\n        }\n    },\n    updateItemTpl: function(newT",673615,41,"listItems = me.listItems,\n            ln = listItems.length || 0,\n            i, listItem",1304304,49,"listItem = listItems[i];\n            listItem.setTpl(newTpl);\n        }\n        me.updateAllListItems();\n    },\n    updateItem",772232,40,"var items = this.listItem",1266717,53,1304304,49,"item = items[i];\n            item.removeCls(oldCls);\n            item.addCls(newCls",963623,32,"dexBar: function(indexBar, oldIndexBar",542384,39,"scrollViewElement = me.scrollViewElement;\n        if (oldIndexBar) {\n            oldIndexBar.un({\n                index: 'onIndex'",802502,56,"if (!indexBar) {\n                me.element.removeCls(me.getBaseCls() + '-indexed'",1100928,33,"scrollViewElement) {\n                scrollViewElement.removeChild(oldIndexBar.renderElement",1053968,39,"indexBar) {\n            indexBar.on({\n                index: 'onIndex'",802502,56,"if (!oldIndexBar) {\n                me.element.addCls(me.getBaseCls() + '-indexed'",1100928,33,"scrollViewElement) {\n                scrollViewElement.appendChild(indexBar.renderElement",20784,32,",\n    updateGrouped: function(grouped",542384,39,764720,41,"pinnedHeader = me.pinnedHeader,\n            cls = baseCls + '-grouped',\n            unCls = baseCls + '-ungrouped';\n        if (pinnedHeader) {\n            pinnedHeader.translate(0, -10000);\n        }\n        if (grouped) {\n            me.addCls(cls);\n            me.removeCls(unCl",201615,33,"me.addCls(unCls);\n            me",1152240,35,"if (me.getInfinite()) {\n            me.refreshHeaderIndices();\n            me.handleItemHeights();\n        }\n        me.updateAllListItems();\n    },\n    onStoreAdd: function() {\n        this.doRefresh();\n    },\n    onStoreRemove: function() {\n        this.doRefresh();\n    },\n    onStoreUpdate: function(store, record, newIndex, oldI",1285101,47,";\n        oldIndex = (typeof oldIndex === 'undefined') ? newIndex : oldIndex;\n        if (me.getInfinite() || (oldIndex !== newIndex)) {\n            me.doRefresh",870911,33,"item = me.listItems[newIndex",306042,43,"me.updateListItem(item, newIndex, me.getListItemInfo()",20784,32,",\n    onStoreClea",1496048,51,"scroller = me.",954785,39,",\n            infinite = me.getInfinite();\n        if (me.pinnedHeader) {\n            me.pinnedHeader.translate(0, -10000);\n        }\n        if (!infinite) {\n            me.setItemsCount(0);\n            scroller.scrollTo(0, 0",201616,32,"me.topRenderedIndex = 0;\n            me.topVisibleIndex = 0;\n            scroller.position.y = 0;\n            me.updateAllListItems();\n        }\n    },\n    showEmptyScrollDock",900368,50,"infinite = me.getInfinite(),\n            scrollDockItems = me.scrollDockItems,\n            offset = 0",828736,53,"scrollDockItems.top",212944,36,"item = scrollDockItems.top[i];\n            if (infinite) {\n                item",1004384,35,"    offset += item.$scrollDockHeight",1265776,44,"scrollElement.appendChild(item.renderElement",354096,35,"for (i = 0 , ln = scrollDockItems.bottom",212944,36,"item = scrollDockItems.bottom[i];\n            if (infinite) {\n                item",1004384,35,"    offset += item.$scrollDockHeight",1265776,44,"scrollElement.appendChild(item.renderElement",20784,32,",\n    hideScrollDock",1059725,32,"me = this,\n            infinite = me.getInfinite(),\n            scrollDockItems = me.scrollDock",828731,40,"if (!infinite",550175,42,"for (i = 0 , ln = scrollDockItems.top",212944,36,"item = scrollDockItems.top[i];\n            item.translate(0, -10000",453776,39,"scrollDockItems.bottom",212944,36,"item = scrollDockItems.bottom[i];\n            item.translate(0, -1000",1587583,36,"Return",1280032,32,".\n     * @param {Number} index I",914542,34,"Ext.dom.Element/Ext.dataview.component.DataItem} item I",915051,34,"/\n    getItem",1285087,34,"listItems = this.listItems,\n            ln = listItems.length,\n            i, listItem",1304304,49,"listItem = listItems[i];\n            if (listItem.$dataIndex == index) {\n                return listItem",1277504,48,"Returns an index for the specified item.\n     * @param {Number} item The item to locate",1286823,32,"for the specified item.\n     */\n    getItemIndex",1270592,39,"$dataI",1286685,36,"an array of the current items in the DataView",428384,33,"[]/Ext.dataview.component.DataItem[]} Array of Items.\n     */\n    getView",1059501,40,"listItems;\n    },\n    getListItemInfo",900368,50,"baseCls = me.getBaseCls();",497947,32,"ore: me.getStore(),\n            grouped: me.getGrouped(),\n            baseCls: baseCls,\n            selectedCls: me.getSelectedCls(),\n            headerCls: baseCls + '-header-wrap',\n            footerCls: baseCls + '-footer-wrap',\n            firstCls: baseCls + '-item-first',\n            lastCls: baseCls + '-item-last',\n            stripeCls: baseCls + '-item-odd',\n            striped: me.getStriped(),\n            itemMap: me.getItemMap(),\n            defaultItemHeight: me.getItemHeight()\n        };\n    },\n    getListItem",1006558,33,"me = this,\n            minimumHeight = me.getItemMap().getMinimumHeight(),",1177280,40,"xtype: me.getDefaultType(),\n                itemConfig: me.getItemConfig(),\n                tpl: me.getItemTpl(),\n                minHeight: minimumHeight,\n                cls: me.getItemCls()\n            };\n        if (me.getInfinite()) {\n            config.translatable = {\n                translationMethod: this.translationMethod",945536,34,"if (!me.getVariableHeights()) {\n            config.height = minimumHeight;",1011097,45,"refreshHeaderIndices",900368,50,"store = me.getStore(),\n            storeLn = store && store.getCount(),\n            groups = store.getGroups(),\n            grouped = me.getGrouped(),\n            groupLn = groups.length,\n            headerIndices = me.headerIndices = {},\n            footerIndices = me.footerIndices = {},\n            i, previousIndex, firstGroupedRecord, storeIndex;\n        if (!grouped) {\n            return footerIndices;\n        }\n        me.groups = groups;\n        for (i = 0; i < groupLn; i++) {\n            firstGroupedRecord = groups[i].children[0];\n            storeIndex = store.indexOf(firstGroupedRecord);\n            headerIndices[storeIndex] = true;\n            previousIndex = storeIndex - 1;\n            if (previousIndex >= 0) {\n                footerIndices[previousIndex",453935,42,"footerIndices[storeLn - 1] = true;\n        return headerIndices;\n    },\n    onIndex: function(indexBar, ",1285100,44,"key = index.toLowerCase(),\n            store = me.getStore(),\n            groups = store.getGroups(),\n            ln = groups.length,\n            group, i, closest, i",1302944,50,"group = groups[i];\n            id = group.name.toLowerCase();\n            if (id >= key) {\n                closest = group",855709,37,"} else {\n                closest = group",1585488,39,"losest) {\n            this.scrollToRecord(closest.children[0]",463328,34,"\n     * Scrolls the list so that the specified record is at the top.\n     *\n     * @param record {Ext.data.Model} Record in the lists store to scroll to\n     * @param animate {Boolean} Determines if scrolling is animated to a cut\n     * @param overscroll {Boolean} Determines if list can be overscrolled\n     */\n    scrollToRecord: function(record, animate, overscrol",673616,40,"scroller = me.",954785,39,",\n            store = me.getStore(),\n            index = store.indexOf(record);\n        //stop the scroller from scrolling\n        scroller.stopAnimation();\n        //make sure the new offsetTop is not out of bounds for the scroller\n        var c",1016570,42,".y,\n            size = scroller.getSize().y,\n            maxOffset = size - containerSize,\n            offset, item;\n        if (me.getInfinite()) {\n            offset = me.getItemMap().map[index",1789424,32,"item = me.listItems[index];\n            if (me.getUseHeaders() && item.getHeader()",1020655,32,"offset = item.getHeader().renderElement.dom.offsetTop",346432,39,"offset = item.renderElement.dom.offsetTop",819216,39,"overscroll) {\n            offset = Math.min(offset, maxOffset);\n        }\n        scroller.scrollTo(0, offset, !!animate",824702,54,"me = this,\n            config = item.config;\n        if (config.scrollDock) {\n            if (config.scrollDock == 'bottom') {\n                me.scrollDockItems.bottom.push",831467,45,"me.scrollDockItems.top",297854,35,"    if (me.getInfinite()) {\n                item",719119,37,"ScrollDockItemResize'",789072,33,940654,38,"tem.addCls(me.getBaseCls() + '-scrolldockitem');\n                item.setTranslatable({\n                    translationMethod: this.translationMethod",940654,38,"tem.translate(0, -10000);\n                item.$scrollDockHeight",23757,32,"me.container.doAdd",1271916,37,943022,34,"}",1059552,39,"items that are docked in the scroller in this list",919711,37,"the scrollDock items\n     */\n    getScrollDocked",1059501,40,"scrollDockItems.bottom.slice().concat(this.scrollDockItems.top.slice());\n    },\n    onScrollDockItemResize: function(dockItem, siz",1652080,40,"items = me.listItem",1266717,53,";\n        Ext.getCmp(dockItem.id).$scrollDockHeight = size.height",1304304,49,1059917,40,"Last) {\n                this.updatedI",1273904,33,"this.refreshScroller()",855709,37,"}\n        }\n    },\n    onItem",1768208,34,"this.container.innerElement.on({\n            touchmove: 'onItemTouchMove',\n            delegate: '.' + Ext.baseCSSPrefix + 'list-item',\n",522591,38,"scope",1224960,32,"callParent(this.parseEvent(e));\n    },\n    onItem",1780910,33,"this.callParent(this.parseEvent(e));\n    },\n    onItem",1775664,32,"this.container.innerElement.un({\n            touchmove: 'onItemTouchMove',\n            delegate: '.' + Ext.baseCSSPrefix + 'list-item",716348,36,");\n        this.callParent(this.parseEvent(e));\n    },\n    onItemTap: function(e) {\n        this.callParent(this.parseEvent(e));\n    },\n    onItemTapHold: function(e) {\n        this.callParent(this.parseEvent(e));\n    },\n    onItemSingleTap: function(e) {\n        this.callParent(this.parseEvent(e));\n    },\n    onItemDoubleTap: function(e) {\n        this.callParent(this.parseEvent(e));\n    },\n    onItemSwipe: function(e) {\n        this.callParent(this.parseEvent(e));\n    },\n    parse",1024555,33,1752665,32,"Ext.fly(e.getTarget()).findParent('.' + Ext.baseCSSPrefix + 'list-item', 8),\n            item = Ext.getCmp(target.id",438065,32,"me,\n            item,\n            item.$dataIndex,\n            e\n        ];\n    },\n    doItemSelect: function(me, record",1006413,48,"var item = me.getItemAt(me.getStore().indexOf(record));\n        if (me.container && !me.isDestroyed && item && ",1045872,33,"tem.classCache = item.renderElement.classList.slice();\n        }\n    },\n    doItemDeselect: function(me, record",1006413,48,"var item = me.getItemAt(me.getStore().indexOf(record));\n        if (item && ",1045872,33,"tem.classCache = item.renderElement.classList.slice();\n        }\n    },\n    applyOnItemDisclosure",1726112,37,1533282,34,"return {\n",789645,45,"handler",1410992,42,"return config;\n    },\n    handleItemDisclosure",1759166,51,"item = Ext.getCmp(Ext.get(e.getTarget()).up('.x-list-item').id),\n            index = item.$dataIndex,\n            record = me.getStore().getAt(index);\n        me.fireAction('disclose', [\n            me,\n",1534106,32,"item,\n            index,\n            e\n        ], 'doDisclose');\n    },\n    doDisclose: function(me, record, item, index, e) {\n        var onItemDisclosure = me.getOnItemDisclosure();\n        if (onItemDisclosure && onItemDisclosure.handler) {\n            onItemDisclosure.handler.call(onItemDisclosure.scope || me, record, item, index, e);\n        }\n    },\n    // apply to the selection model to maintain visual UI cues\n    onItemTrigger: function(me, index, target, record, e) {\n        if (!(this.getPreventSelectionOnDisclose() && Ext.fly(e.target).hasCls(this.getBaseCls() + '-disclosure'))) {\n    ",877200,44,821760,47,1048285,34,"listItem",1266717,47,1038303,40,"    if (me.onIdleBound) {",1803568,32,"unIdle(me.onAnimationIdle, m",453775,32,1267184,38,1069334,32,"listItems = null",1686083,100627,"aside guide forms\n *\n * The checkbox field is an enhanced version of the native browser checkbox and is great for enabling your user to\n * choose one or more items from a set (for example choosing toppings for a pizza order). It works like any other\n * {@link Ext.field.Field field} and is usually found in the context of a form:",1022898,46," preview\n *     var form",243053,33,1309071,45,888880,41,"xtype: 'checkboxfield',\n *                 name : 'tomato',\n *                 label: 'Tomato',\n *                 value: 'tomato',\n *                 checked: true",1310720,34,"{\n *                 xtype: 'checkboxfield',\n *                 name : 'salami',\n *                 label: 'Salami'",1310720,34,"{\n",536648,38,"*                 docked: 'bottom',\n *        ",729408,33,"        { xtype: 'spacer' },",1594246,53,"text: 'getValues',\n *                         handler: function() {",1313776,32,"var form = Ext.ComponentQuery.query('formpanel')[0]",1313775,37,"values = form.getValues()",1401006,32,"    Ext.Msg.alert(null",1313775,38,"Tomato: \" + ((values.tomato) ? \"yes\" : \"no\") +",1313776,37,"<br />Salami: \" + ((values.salami) ? \"yes\" : \"no\")",1313776,32,");\n *        ",1311230,34,1594415,35," xtype: 'spacer' }\n *",1079038,34,729703,35,"The form above contains two check boxes - one for Tomato, one for Salami. We configured the Tomato checkbox to be\n * checked immediately on load, and the Salami checkbox to be unchecked. We also specified an optional text\n * {@link #value} that will be sent when we submit the form. We can get this value using the Form's\n * {@link Ext.form.Panel#getValues getValues} function, or have it sent as part of the data that is sent when the\n * form is submitted:\n *\n *     form.getValues(); //contains a key called 'tomato' if the Tomato field is still checked\n *     form.submit(); //will send 'tomato' in the form submission data\n *\n */\nExt.define('Ext.field.Checkbox', {\n    extend: Ext.field.Field",848912,32,"orm.Checkbox',\n    xtype: 'checkboxfield',\n    qsaLeftRe: /[\\[]/g,\n    qsaRightRe: /[\\]]/g,\n    isCheckbox: true",1182316,44,"just before the field blurs if the field value",955689,33,"field.Checkbox} this This field.\n     * @param {Boolean} newValue The new value.\n     * @param {Boolean} oldValue The original value",956160,32,"check\n     * Fires when the checkbox is checked.\n     * @param {Ext.field.Checkbox} this This checkbox.",1023977,37,"is event object",956160,32,"uncheck\n     * Fires when the checkbox is unchecked.\n     * @param {Ext.field.Checkbox} this This checkbox.",1023977,37,"is event objec",1817805,52,849578,44,"ui: 'checkbox",1221408,32,"String} value The string value to submit if the item is in a checked stat",1422719,44,"value: '",1221408,32,"Boolean} checked `true` if the checkbox should render initially check",1037774,45,"check",1530223,40,"Number} tabIndex",1023645,38,"tabIndex: -1",1023616,42,"inheritdoc\n         */\n        component: {\n            xtype: 'input',\n            type: 'checkbox',\n            useMask: true",1105434,40,"input-checkbox",934719,32,"    * @cfg {Boolean} labelMaskTap",31552,37,"platformConfig: [\n        {\n            theme: [\n                'Windows',\n                'Blackberry',\n                'Tizen'\n            ],\n            labelAlign: 'left'\n        }\n    ],\n    // @private",549728,38,"var me = this,\n            component = me.getComponent();\n        me.callParent();\n        component.on({\n",1049354,35,"order: 'before',\n            masktap: 'onMaskTap'\n        });\n        component.doMaskTap = Ext.emptyFn;\n        me.label.on({\n",1049354,35,"tap: 'onMaskTap'\n        });\n    },\n    // @private\n    doIni",951468,34,"e = this,\n            initialConfig = me.getInitialConfig();\n        // you can have a value or checked config, but checked get priority\n        if (initialConfig.hasOwnProperty('value')) {\n            me.originalState = initialConfig.value;\n        }\n        if (initialConfig.hasOwnProperty('checked')) {\n            me.originalState = initialConfig.checked;\n        }",1038304,46,"// @private\n    updateInputType: function(newInputType",1021123,33,"getComponent(",1699416,40,"component.setType(newInputType);\n        }\n    },\n    // @private",1237671,45,"var component = this.getComponent(",1699416,40,"component.setName(newName",463328,35,"Returns the field checked value.\n     * @return {Mixed} The field value.\n     */\n    getChecked: function() {\n        // we need to get the latest value from the {@link #input} and then update the value\n        this._checked = this.getComponent().getChecked();\n        return this._checked",1076080,36,"submit value for the checkbox which can be used when submitting forms.\n     * @return {Boolean/String} value The value of {@link #value} or `true`, if {@link #checked}.\n     */\n    getSubmi",948656,36,"(this.getChecked()) ? Ext.isEmpty(this._value) ? true : this._value : null;\n    },\n    setChecked: function(newChecked) {\n        this.updateChecked(newChecked);\n        this._checked = newChecked;\n    },\n    updateChecked: function(newChecked) {\n        this.getComponent().setChecked(newChecked);\n        // only call onChange (which fires events) if",756848,41,784160,39,"this.onChange();\n        }\n    },\n    // @private\n    onMaskTap: function(component, ",1652080,41,"om = me.getComponent().input.dom;\n        if (me",720453,62,"//we must manually update the input dom with the new checked value\n        dom.checked = !dom.checked;\n        me.onChange(e);\n        //return false so the mask does not disappear",1694879,34,"/**\n     * Fires the `check` or `uncheck` event when the checked value of this component changes.",876112,32,"hange",1759166,51,"oldChecked = me._checked,\n            newChecked = me.getChecked();\n        // only fire the event when the value changes\n        if (oldChecked != newChecked) {\n            if (newChecked",759913,34,"check', me, e",48192,40,"me.fireEvent('uncheck', me, e",759616,32,"fireEvent('change', me, newChecked, oldCheck",1558016,38,"method\n     * Method called when this {@link Ext.field.Checkbox} has been checked.\n     */\n    doChecked: Ext.emptyFn",1192115,32,"Method called when this {@link Ext.field.Checkbox} has been unchecked.\n     */\n    doUnChecked: Ext.emptyFn,\n    /**\n     * Returns the checked state of the checkbox",416208,37,"checked",600200,33,"isCheck",1654223,37,"getChecked()",456688,32,"checked state of the checkbox to `true`.\n     * @return {Ext.field.Checkbox} This checkbox.\n     */\n    check",1688560,36,"etCheck",1198048,32,"Set the checked state of the checkbox to `false`.\n     * @return {Ext.field.Checkbox} This checkbox.\n     */\n    uncheck",1688560,36,"etChecked(false);\n    },\n    getSameGroupFields",900368,50,"component = me.up('formpanel') || me.up('fieldset'),\n            name = me.getName(),\n            replaceLeft = me.qsaLeftRe,\n            replaceRight = me.qsaRightRe,\n            //handle baseCls with multiple class values\n            baseCls = me.getBaseCls().split(' ').join('.'),\n            components = [],\n            elements, element, i, ln;\n        if (!component",1480094,33,"Ext.field.Radio components must always be descendants of an Ext.form.Panel or Ext.form.FieldSet.');\n            component = Ext.Viewport;\n        }\n        // This is to handle ComponentQuery's lack of handling [name=foo[bar]] properly\n        name = name.replace(replaceLeft, '\\\\[');\n        name = name.replace(replaceRight, '\\\\]');\n        elements = Ext.query('[name=' + name + ']', component.element.dom);\n        ln = elements.length",1304304,49,557087,35,"element = Ext.fly(element).up('.' + baseCls);\n            if (element && element.id) {\n                components.push(Ext.getCmp(element.id)",564736,42,"component",1051552,33,"an array of values from the checkboxes in the group that are checked.",1265293,36,"getGroupValues: function() {\n        var values = [];\n        this.getSameGroupFields().forE",1568079,47,"Checked()) {\n                values.push(field",899307,36,"});\n        return value",456687,33,"status of all matched checkboxes in the same group to checked.\n     * @param {Array} values An array of values.\n     * @return {Ext.field.Checkbox} This checkbox.\n     */\n    setGroupValues: function(values) {\n        this.getSameGroupFields().forE",1568079,34,"field.setChecked((values.indexOf(field.getValue()) !== -1",492112,61,"sets the status of all matched checkboxes in the same group to checked.\n     * @return {Ext.field.Checkbox} This checkbox.\n     */\n    resetGroupValue",963246,32,"SameGroupFields().forE",1568079,34,"field.setChecked(field.originalState",1253677,34,701390,46,"setChecked(this.originalState);",557373,40,"@aside guide forms\n * @aside example forms\n * @aside example forms-toolbars\n *\n * A FieldSet is a great way to visually separate elements of a form. It's normally used when you have a form with\n * fields that can be divided into groups - for example a customer's billing details in one fieldset and their shipping\n * address in another. A fieldset can be used inside a form or on its own elsewhere in your app. Fieldsets can\n * optionally have a title at the top and instructions at the bottom. Here's how we might create a FieldSet inside a\n * form",887360,44,"form",732447,51,887485,45,"xtype: 'fieldset',\n *                 title: 'About You',\n *                 instructions: 'Tell us all about yourself',\n *        ",729408,33,1400717,33,"    xtype: 'textfield',\n *                         name ",1400754,38,"    label: 'First Name'",1594399,79,"xtype: 'textfield',\n *                         name : 'la",1400760,32,"    label: 'Last Name'",1595056,85,");\n *\n * Above we created a {@link Ext.form.Panel form} with a fieldset that contains two text fields. In this case, all\n * of the form fields are in the same fieldset, but for longer forms we may choose to use multiple fieldsets. We also\n * configured a {@link #title} and {@link #instructions} to give the user more information on filling out the form if\n * required.\n */\nExt.define('Ext.form.FieldSe",1817151,37,"alias: 'widget.fieldset",1149344,44,1023338,74,"form-fieldse",849200,33,"String} title\n         * Optional fieldset title, rendered just above the grouped fields.",753550,33,1035310,43,"form.Fieldset', {\n         *         fullscreen: true",244656,32,"title: 'Login",155856,33,"items: [",1034744,33,"textfield',\n         *             label: 'Email",1350816,53," ",1605488,42,"title",1240512,45,"instructions\n         * Optional fieldset instructions, rendered just below the grouped fields.",753550,33,1035310,43,"form.Fieldset', {\n         *         fullscreen: true",244656,32,"instructions: 'Please enter your email address.",155856,33,"items: [",1034744,33,"textfield',\n         *             label: 'Email",1350816,53," ",1605488,42,"instructions: null\n    },\n    // @private\n    applyTitle: function(title) {\n        if (typeof title == 'string') {\n            title = {\n                title: title",945536,38,"applyIf(title, {\n",536696,32,"       baseCls: this.getBaseCls() + '-title'\n        });\n        return Ext.factory(title, Ext.Title, this._title);\n    },\n    // @private\n    updateTitle: function(newTitle, oldTitle) {\n        if (newTitle) {\n            this.add(newTitle);\n        }\n        if (oldTitle) {\n            this.remove(oldTitle);\n        }\n    },\n    // @private\n    getTitle: function() {\n        var title = this._title;\n        if (title && title instanceof Ext.Title) {\n            return title.getTitle();\n        }\n        return title;\n    },\n    // @private\n    applyInstructions: function(instructions) {\n        if (typeof instructions == 'string') {\n            instructions = {\n                title: instructions",945536,38,"applyIf(instructions, {\n            docked: 'bottom',\n            baseCls: this.getBaseCls() + '-instructions'\n        });\n        return Ext.factory(instructions, Ext.Title, this._instructions);\n    },\n    // @private\n    updateInstructions: function(newInstructions, oldInstructions) {\n        if (newInstructions) {\n            this.add(newInstructions);\n        }\n        if (oldInstructions) {\n            this.remove(oldInstructions);\n        }\n    },\n    // @private\n    getInstructions: function() {\n        var instructions = this._instructions;\n        if (instructions && instructions instanceof Ext.Title) {\n            return instructions.getTitle(",1046820,32,"ructions;\n    },\n    /**\n     * A convenient method to disable all fields in this FieldSet\n     * @return {Ext.form.FieldSet} This FieldSet\n     */\n    doSetDisabled: function(newDisabled) {\n        this.getFieldsAsArray().forE",1568079,34,"field.setDisabled(newDisabled",1253677,34,";\n  ",963312,41,"getFieldsAsArray: function() {\n        var fields = [],\n            getFieldsFrom = ",1258687,33,"if (item.isField",1583725,36,61728,37,"    if (item.isContainer) {\n                    item.getItems().each(getFieldsFrom",341552,34,";\n        this.getItems().each(getFieldsFrom);\n        return fields;\n    }\n});\n\n/**\n * The Form panel presents a set of form fields and provides convenient ways to load and save data. Usually a form\n * panel just contains the set of fields you want to display, ordered inside the items",1338355,36,"@example\n *     var form",243053,33,1309071,45,888880,41,"xtype: 'textfield',\n *                 name: 'name',\n *                 label: 'Name'",1310720,34,"{\n *                 xtype: 'emailfield',\n *                 name: 'email',\n *                 label: 'Email'",1310720,34,"{\n *                 xtype: 'passwordfield',\n *                 name: 'password',\n *                 label: 'Password'",889200,48,"Here we just created a simple form panel which could be used as a registration form to sign up to your service. We\n * added a plain {@link Ext.field.Text text field} for the user's Name, an {@link Ext.field.Email email field} and\n * finally a {@link Ext.field.Password password field}. In each case we provided a {@link Ext.field.Field#name name}\n * config on the field so that we can identify it later on when we load and save data on the form.\n *\n * ##Loading data\n *\n * Using the form we created above, we can load data into it in a few different ways, the easiest is to use\n * {@link #setValues}:\n *\n *     form.setValues(",1521229,36,"email: 'ed@sencha.com',\n *         password: 'secret'\n *     });\n *\n * It's also easy to load",1308087,38,"s into a form - let's say we have a User model and want\n * to load a particular instance into our form:\n *",1454944,32,1414671,92,"name', 'email', 'password'",1311264,36,"var ed = Ext.creat",1452637,35,"name: 'Ed',\n *         email: 'ed@sencha.com',\n *         password: 'secret'\n *     });\n *\n *     form.setRecord(ed);\n *\n * ##Retrieving form data\n *\n * Getting data out of the form panel is simple and is usually achieve via the {@link #getValues} method:\n *\n *     var values = form.getValues();\n *\n *     //values now looks like this:\n *    ",1521228,37,"email: 'ed@sencha.com',\n *         password: 'secret'\n *     }\n *\n * It's also possible to listen to the change events on individual fields to get more timely notification of changes\n * that the user is making. Here we expand on the example above with the User model, updating the model as soon as\n * any of the fields are changed:\n *\n *     var form",243053,33,519062,40,"'> field': {\n *                 change: function(field, newValue, oldValue) {\n *                     ed.set(field.getName(), newValue);",1311227,37,"}\n *         }",887472,58,"xtype: 'textfield',\n *                 name: 'name',\n *                 label: 'Name'",1310720,34,"{\n *                 xtype: 'emailfield',\n *                 name: 'email',\n *                 label: 'Email'",1310720,34,"{\n *                 xtype: 'passwordfield',\n *                 name: 'password',\n *                 label: 'Password'",889200,50,"e above used a new capability of Sencha Touch 2.0, which enables you to specify listeners on child components of any\n * container. In this case, we attached a listener to the {@link Ext.field.Text#change change} event of each form\n * field that is a direct child of the form panel. Our listener gets the name of the field that fired the change event,\n * and updates our",1308087,39,"with the new value. For example, changing the email field\n * in the form will update the Model's email field.\n *\n * ##Submitting forms\n *\n * There are a few ways to submit form data. In our example above we have a Model instance that we have updated, giving\n * us the option to use the M",1490239,46," to persist the changes back to our server,\n * without using a traditional form submission. Alternatively, we can send a normal browser form submit using the\n * {@link #method} method:\n *\n *     form.submit({\n *         url: 'url/to/submit/to',\n *         method: 'POST',",1525133,49,"alert('form submitted successfully!",1525215,34,"In this case we provided the `url` to submit the form to inside the submit call - alternatively you can just set the\n * {@link #url} configuration when you create the form. We can specify other parameters (see {@link #method} for a\n * full list), including callback functions for success and failure, which are called depending on whether or not the\n * form submission was successful. These functions are usually used to take some action in your app after your data\n * has been saved to the server side.\n *\n * @aside guide forms\n * @aside example forms\n * @aside example forms-toolbars\n */\nExt.define('Ext.form.Panel",1678528,34,"form.FormPanel',\n    extend: Ext.Panel,\n    xtype: 'formpanel',\n    /**\n     * @event submit\n     * @preventable doSubmit\n     * Fires upon successful (Ajax-based) form submission.\n     * @param {Ext.form.Panel} this This FormPanel.\n     * @param {Object} result The result object as returned by",1644418,32,"EventObject} e The event object",956160,32,"beforesubmit\n     * @preventable doBeforeSubmit\n     * Fires immediately preceding any Form submit action.\n     * Implementations may adjust submitted form values or options prior to execution.\n     * A return value of `false` from this listener will abort the submission\n     * attempt (regardless of `standardSubmit` configuration).\n     * @param {Ext.form.Panel} this This FormPanel.\n     * @param {Object} values A hash collection of the qualified form values about to be submitted",1109294,33,"Submission options hash (only available when `standardSubmit` is `false`).",1023977,51," if the form was submitted via a HTML5 form submit event",956160,32,"exception\n     * Fires when either the Ajax HTTP request reports a failure OR the server returns a `success:false`\n     * response in the result payload.\n     * @param {Ext.form.Panel} this This FormPanel.\n     * @param {Object} result Either a failed Ext.data.Connection request object or a failed (logical) server.\n     * response payload",1817806,53,"String} baseCls",1023338,74,"form",1221408,32,"Boolean} standardSubmit\n         * Whether or not we want to perform a standard form subm",1222974,45,"standardSubmi",1023535,37,1087821,37,"url for submit",1293787,51,1195663,39,"(String} enctype\n         * The enctype attribute for the form, specifies how the form should be encoded when submitting\n         */\n        enctype",1609872,45,"baseParams\n         * Optional hash of params to be sent (when `standardSubmit` configuration is `false`) on every subm",1222974,45,"base",1089085,51,"submitOnAction\n         * When this is set to `true`, the form will automatically submit itself whenever the `action`\n         * event fires on a field in this form. The action event usually fires whenever you press\n         * go or enter inside a textfiel",1037775,44,"submitOnAction",1023536,36,1642760,44,"of this form. Can by dynamically set at any ti",1422718,45,"recor",714960,46,"method\n         * The method which this form will be submitted. `post` or `get`.\n         */\n        method: 'pos",849200,33,"Object} scrollable\n         * Possible values are true, false, and null. The true value indicates that\n         * users can scroll the panel. The false value disables scrolling, but developers\n         * can enable it in the app. The null value indicates that the object cannot be\n         * scrolled and that scrolling cannot be enabled for this object",1356154,43,"      title: 'Sliders',\n         *      xtype: 'formpanel',\n         *      iconCls: Ext.filterPlatform('blackberry') ? 'list' : null,\n         *      scrollable: true,\n         *      items: [ ...",849578,44,"scrollable: {\n    ",960384,36,"    translationMethod: 'scrollposition'",1140496,49,"@cfg {Boolean} trackResetOnLoad\n         * If set to true, {@link #reset}() resets to the last loaded or {@link #setValues}() data instead of\n         * when the form was first created.\n         */\n        trackResetOn",1479808,42,"Object} api\n         * If specified, load and submit actions will be loaded and submitted via Ext.Direct.  Methods which have been imported by\n         * {@link Ext.direct.Manager} can be specified here to load and submit forms. API methods may also be\n         * specified as strings and will be parsed into the actual functions when the first submit or load has occurred. Such as the following",1426955,54,"load: App.ss.MyProfile.load,\n         *         submit: App.ss.MyProfile.submit",1404640,44,"api: {\n         *         load: 'App.ss.MyProfile.load',\n         *         submit: 'App.ss.MyProfile.submit'",1404640,40,"Load actions can use {@link #paramOrder} or {@link #paramsAsHash} to customize how the load method\n         * is invoked.  Submit actions will always use a standard form submit. The `formHandler` configuration\n         * (see Ext.direct.RemotingProvider#action) must be set on the associated server-side method which has\n         * been imported by {@link Ext.direct.Manager}.\n         */\n        api",1240512,43,"/String[]} paramOrder\n         * A list of params to be executed server side. Only used for the {@link #api} `load`\n         *",737844,38,"Specify the params in the order in which they must be executed on the\n         * server-side as either (1) an Array of String values, or (2) a String of params\n         * delimited by either whitespace, comma, or pipe. For example,\n         * any of the following would be acceptable:\n         *\n         *     paramOrder: ['param1','param2','param3']\n         *     paramOrder: 'param1 param2 param3'\n         *     paramOrder: 'param1,param2,param3'\n         *     paramOrder: 'param1|param2|param'\n         */\n        paramOrd",1153791,39,"Boolean} paramsAsHash\n         * Only used for the {@link #api} `load` configuration. If true, parameters will be sent as a\n         * single hash collection of named arguments. Providing a {@link #paramOrder} nullifies this\n         *",844931,36,"paramsAsHash",1037824,37,"Number} timeout\n         * Timeout for form actions in seconds",1426767,33,1000704,40,"multipartDetection\n         * If this is enabled the form will automatically detect the need to use 'multipart/form-data' during submission.\n         */\n        multipartDetection",1614544,46,"enableSubmissionForm\n         * The submission form is generated but never added to the dom. It is a submittable version of your form panel, allowing for fields\n         * that are not simple textfields to be properly submitted to servers. It will also send values that are easier to parse\n         * with server side code",1608057,35,"false we will attempt to subject the raw form inside the form panel.\n         */\n        enableSubmissionForm: true",1004766,80,");\n        config.tag = \"form\";\n        // Added a submit input for standard form submission. This cannot have \"display: none;\" or it will not work\n        config.children.push({\n            tag: 'input',\n            type: 'submit',\n            style: 'visibility: hidden; width: 0; height: 0; position: absolute; right: 0; bottom: 0;",1004938,48,"// @private",549728,38,942999,37,");\n",1834819,36,"submit: 'onSubmit',\n            scope: me\n        });\n    },\n    applyEnctype: function(newValue) {\n        var form = this.element.dom || null",1108781,34,"if (newValue) {\n                form.setAttribute(\"enctype\", newValue",1508768,43,"m.setAttribute(\"enctype\"",20784,32,",\n",793957,36,") {\n        var fields, values, name;\n        if (newRecord && (fields = newRecord.fields)) {\n            values = this.getValues();\n            for (name in values) {\n                if (values.hasOwnProperty(name) && fields.containsKey(name)) {\n                    newRecord.set(name, values[name]",1282480,44,462528,44,"Loads matching fields from a model instance into this form",1638368,33,"record T",1417888,39,"form.Panel} This form.\n     */\n    setRecord",1642844,33,"me = this;\n        if (record && record.data) {\n            me.setValues(record.data);\n        }\n        me._record = record",814480,34,"// @private\n    onSubmit",1759166,37,";\n        if (e && !me.getStandardSubmit()",1024793,40," else {\n            this.submit(null, e);\n        }\n    },\n    updateSubmitOnAction: function(newSubmitOnAction) {\n        if (newSubmitOnAction) {\n            this.on({\n                action: 'onFieldAction",963004,44,963568,37,"un({\n                action: 'onFieldAction",963004,44,");\n        }\n    },\n    // @private\n    onFieldAction: function(field) {\n        if (this.getSubmitOnAction()) {\n            field.blur();\n            this.subm",1538448,39,"erforms a Ajax-based submission of form values (if {@link #standardSubmit} is false) or otherwise\n     * executes a standard HTML Form submit action.\n     *\n     * **Notes**\n     *\n     *  1. Only the first parameter is implemented. Put all other parameters inside the first\n     *  parameter:\n     *\n     *     submit({params: \"\" ,headers: \"\" etc.})\n     *\n     *  2. Submit example:\n     *\n     *     myForm.submit({\n     *       url: 'PostMyData/To',\n     *       method: 'Post',\n     *       success: function() { Ext.Msg.alert(\"success\"); },\n     *       failure: function() { Ext.Msg.alert(\"error\");",314304,32," 3. Parameters and values only submit for a POST and not for a GET.",1097328,38,"\n     * The configuration when submitting this form.\n     *\n     * The following are the configurations when submitting via Ajax only:",1093180,39,"url\n     * The url for the action (defaults to the form's {@link #url})",330703,32,"options.method\n     * The form method to use (defaults to the form's {@link #method}, or POST if not defined).",1097328,46,"\n     *",1097374,32,"action",1556684,34,"options.autoAbort=false]\n     * `true` to abort any pending Ajax request prior to submission.\n     * __Note:__ Has no effect when `{@link #standardSubmit}` is enabled",971294,32,"options.timeout\n     * The number is seconds the loading will timeout in.\n     *\n     * The following are the configurations when loading via Ajax or Direct:",312671,38,"options.params\n     * The params to pass when submitting this form (defaults to this forms {@link #baseParams}).\n     * Parameters are encoded as standard HTTP parameters using {@link Ext#urlEncode}",1556684,34,"options.submitDisabled=false]\n     * `true` to submit all fields regardless of disabled state.\n     * __Note:__ Has no effect when `{@link #standardSubmit}` is enabled.",312671,38,"[options.waitMsg]\n     * If specified, the value which is passed to the loading {@link #masked mask}. See {@link #masked} for\n     *",316918,33,1094148,33,"\n     * The callback that will be invoked after a successful response. A response is successful if\n     * a response is received from the server and is a JSON object where the `success` property is set\n     * to `true`, `{\"success\": true}`.\n     *\n     *",1390189,48," and can be used for submitting via Ajax or Direct:\n     *\n     * @param {Ext.form.Panel} options.success.form\n     * The {@link Ext.form.Panel} that requested the ac",1092377,34,"/Ext.direct.Event} options.success.result\n     * The result object returned by the server as a result of the submit request. If the submit is sent using Ext.Direct,\n     * this will return the {@link Ext.direct.Event} instance, otherwise will return an Object.",1097328,39,"success.data\n     * The parsed data returned by",1646736,35,"Function} options.failure\n     * The callback that will be invoked after a failed transaction attempt.\n     *\n     *",1390189,48," and can be used for submitting via Ajax or Direct:\n     *\n     * @param {Ext.form.Panel} options.failure.form\n     * The {@link Ext.form.Panel} that requested the submit.\n     *\n     * @param {Ext.form.Panel} options.failure.result\n     * The failed response or result object returned by the server which performed the operation.",1097328,39,"success.data\n     * The parsed data returned by",1646736,35,"Object} options.scope\n     * The scope in which to call the callback functions (The `this` reference for the callback functions)",1375725,34,"Connection} The request object if the {@link #standardSubmit} config is false.\n     * If the standardSubmit config is true, then the return value is undefined.\n     */\n    submit: function(options, e) {",1552987,42,"var me = this,\n            formValues = me.getValues(me.getStandardSubmit() || !options.submitDisabled),\n            form = me.element.dom || {};\n        if (this.getEnableSubmissionForm()) {\n            form = this.createSubmissionForm(form, formValues);\n        }\n        option",1202623,33,"me.getUrl() || form.action,\n            submit: false,\n            form: form",1450513,35,") || form.method || 'post',\n            autoAbort: false,\n            params: null,\n            waitMsg: null,\n            headers: null,\n            success: null,\n            failure: null\n        }, options || {});\n        return me.fireAction('beforesubmit', [\n            me,\n            formValues,\n",1106478,33,"e\n        ], 'doBeforeSubmit');\n    },\n    createSubmissionForm: function(form, values",1481416,33,"Fields(),\n            name, input, field, fileinputElement, inputComponent;\n        if (form.nodeType === 1) {\n            form = form.cloneNode(false);\n            for (name in values) {\n               ",1852005,32,"\"input\");\n                input.setAttribute(\"type\", \"text\");\n                input.setAttribute(\"name\", name);\n                input.setAttribute(\"value\", values[name]",1104933,36,"input",354096,35,"for (name in fields) {\n            if (fields",1804352,41,"field = fields[name];\n                if (field.isFile) {\n                    if (!form.$fileswap)  {\n                        form.$fileswap = []",139472,44,"\n                    inputComponent = field.getComponent().input;\n                    fileinputElement = inputComponent.dom;\n                    input = fileinputElement.cloneNode(true);\n                    fileinputElement.parentNode.insertBefore(input, fileinputElement.nextSibling);\n    ",1104936,33,"fileinputElement);\n                    form.$fileswap",85664,32,"original: fileinputElement,\n                        placeholder: input",670490,52,"field.isPassword) {\n",1354138,33,"Component().getType !== \"password\")",1569073,32,".setRevealed",1103279,47,1066320,41,"form;\n    },\n    doBeforeSubmit: function(me, formValues, options) {\n        var form = options.form || {},\n            multipartDetected = false;\n        if (this.getMultipartDetection() === true) {\n            this.getFieldsAsArray().forE",1568079,34,"    if (field.isFile",177520,33,"multipartDetected = true;\n        ",798624,34,367385,34,"    if (multipartDetected) {\n                form.setAttribute(\"enctype\", \"multipart/form-data\"",1053968,39,"options.enctype) {\n            form.setAttribute(\"enctype\", options.enctype);\n        }\n        if (me.getStandardSubmit()) {\n            if (options.url && Ext.isEmpty(form.action)) {\n                form.action = options.url",132823,32,"pinner fields must have their components enabled *before* submitting or else the value\n            // will not be posted.\n            var fields = this.query('spinnerfield'),\n    ",1320859,44,"    i, field",284336,57,"field = fields[i];\n                if (!field.getDisabled()) {\n                    field.getComponent().setDisabled(",344414,39,"\n            form.method = (options.method || form.method).toLowerCase();\n            form.submit",870911,35,"r api = me.getApi(),\n    ",1109661,58,"    scope = options.scope || me,\n                waitMsg = options.waitMsg,\n                failureFn = function(response, responseTex",811013,33,"isFunction(o",1378028,35,"        options.failure.call(scope, me, response, responseTex",1247087,46,1431534,38,270831,39,"uccessFn = function(response, responseTex",811013,33,"isFunction(options.succ",1102832,32,"options.success.call(options.scope || me, me, response, responseTex",1247087,46,"me.fireEvent('submit', me, response",270831,39,"ubmit;\n            if (options.waitMsg) {\n                if (typeof waitMsg",1578652,37,"waitMsg =",993844,35,"loadmask',\n                        message: waitMs",940496,59,"me.setMasked(waitMsg",1100928,33,"api) {\n                submit = api.submit;\n                if (typeof submit",1578652,37,"submit = Ext.direct.Manager.parseMethod(submit);\n                    if (submit) {\n                        api.submit = submit",406608,58,"if (submi",1746166,32,"submit(this.element, function(data, response, ",1499886,35,"me.setMasked",1101452,33,1513712,39,"    if (data.",1499886,35,"        successFn(response, data",86352,32,214560,32,"        failureFn(response, data",86352,58,214560,32,"    failureFn(response, ",226557,53,"}",799501,39,"} else {\n                var request = Ext.merge({}, {\n            ",1112844,34,"            timeout: this.getTimeout() * 1000,\n                        form: form",1513376,33,"me\n                    }, options);\n                delete request.success;\n                delete request.failure;\n                request.params = Ext.merge(me.getBaseParams() || {}, options.params);\n                request.header = Ext.apply({\n                    'Content-Type'",1089372,52,"\n                }, options.headers || {});\n                request.callback = function(callbackO",1452171,41,1343165,35,".responseText,\n                        responseXML = response.responseXML,\n                        statusResult = Ext.Ajax.parseStatus(response.status, response);\n                    if (form.$fileswap",226272,33,"riginal, placeholder;\n                        Ext.each(form.$fileswap, ",1258687,37,"        original = item.original;\n                            placeholder = item.placeholder;\n                            placeholder.parentNode.insertBefore(original, placeholder.nextSiblin",91789,32,"placeholder.parentNode.removeChild(placeholder);\n",86327,52,"form.$fileswap",1101503,33,"delete form.$fileswap",139472,44,"me.setMasked(false);\n                    if (response.success === false)  {\n        ",1328632,45,1246172,51,1513712,39,"if (statusResult && responseText && responseText.length",1799805,37,"success",1721246,33,226496,37,"if (!Ext.isEmpty(response.responseBytes",4944,33,"    success = statusResult.success;\n        ",214539,53,"        if (Ext.isString(responseText) && response.",1124772,34,"text\"",296912,40,"response.success",1721246,33,125001,32,"responseTex",410271,34,395706,38,"                response",1343556,37,"            ",278797,50,"        ",1107949,50,"                ",1108120,40,46560,32,"response.message = e.message",93567,72,"} else if (Ext.isSimpleObject(responseTex",410271,34,"        response = responseText",93567,38,"Ext.applyIf(response,",93056,43,"success: true",93568,38,")",92287,34,91504,34,"if (!Ext.isEmpty(responseXML",4944,33,"        response.success",1721246,33,92384,38,"    success = !!response.success",103887,82,1513712,39,"    successFn(response, responseText",669568,64,"failureFn(response, responseText",238592,50,214560,32,"failureFn(response, responseText",100032,42,1102289,41,"2 && request.xhr2) {\n                    delete request.form;\n                    var formData = new FormData(form);\n                    if (request.params",1273568,32,"iterate(request.params,",172320,37,1106076,62,1106126,66,"            formData.appen",1106199,32,1580480,36,91584,49,"formData.appen",1106287,32,226576,38,"});",1497909,32,"request.params",139472,44,"request.data = formData",89104,43,"Ext.Ajax.request(request",20784,32,",\n    /**\n     * Performs an Ajax or Ext.Direct call to load values for this form.",1097328,38,"\n     * The configuration when loading this form.\n     *\n     * The following are the configurations when loading via Ajax only:",1093180,39,"url\n     * The url for the action (defaults to the form's {@link #url})",330703,32,"options.method\n     * The form method to use (defaults to the form's {@link #method}, or GET if not defined).",1097328,46,"\n     *",1097374,32,"ac",971290,36,"options.timeout\n     * The number is seconds the loading will timeout in.\n     *\n     * The following are the configurations when loading via Ajax or Direct:",1556685,33,"options.autoAbort=false]\n     * `true` to abort any pending Ajax request prior to loading.",312671,38,"options.params\n     * The params to pass when submitting this form (defaults to this forms {@link #baseParams}).\n     * Parameters are encoded as standard HTTP parameters using {@link Ext#urlEncode}.",312671,38,"[options.waitMsg]\n     * If specified, the value which is passed to the loading {@link #masked mask}. See {@link #masked} for\n     *",316918,33,1094148,33,"\n     * The callback that will be invoked after a successful response. A response is successful if\n     * a response is received from the server and is a JSON object where the `success` property is set\n     * to `true`, `{\"success\": true}`.\n     *\n     *",1390189,48," and can be used for loading via Ajax or Direct:\n     *\n     * @param {Ext.form.Panel} options.success.form\n     * The {@link Ext.form.Panel} that requested the loa",656427,32,"Ext.direct.Event} options.success.result\n     * The result object returned by the server as a result of the load request. If the loading was done via Ext.Direct,\n     * will return the {@link Ext.direct.Event} instance, otherwise will return an Object.",1097328,39,"success.data\n     * The parsed data returned by",1646736,35,"Function} options.failure\n     * The callback that will be invoked after a failed transaction attempt.\n     *\n     *",1390189,48," and can be used for loading via Ajax or Direct:\n     *\n     * @param {Ext.form.Panel} options.failure.form\n     * The {@link Ext.form.Panel} that requested the load.\n     *\n     * @param {Ext.form.Panel} options.failure.result\n     * The failed response or result object returned by the server which performed the operation.",1097328,39,"success.data\n     * The parsed data returned by",1646736,35,"Object} options.scope\n     * The scope in which to call the callback functions (The `this` reference for the callback functions)",1375725,34,"Connection} The request object.",1661413,35,") {",1552987,42,"var me = this,\n            api = me.getApi(),\n            url = me.getUrl() || options.url,\n            waitMsg = options.waitMsg,\n            successFn = function(response, data) {\n                me.setValues(data.data);\n    ",1512078,38,".success)) {\n                    options.success.call(options.scope || me, me, response, data",104368,37,"me.fireEvent('load', me, response);\n            },\n            failureFn = function(response, data) {\n    ",1512078,38,".failure)) {\n                    options.failure.call(scope, me, response, data",104368,37,1431534,38,");\n            },\n            load, method, args;\n        if (options.waitMsg) {\n            if (typeof waitMsg",1578652,33,"waitMsg = {\n           ",1037353,37,"           message: waitMsg",5103,32,"}\n            me.setMasked(waitMsg);\n        }\n        if (api) {\n            load = api.load;\n            if (typeof load",1578652,33,"load = Ext.direct.Manager.parseMethod(load);\n                if (load) {\n                    api.load = load",501472,50,"load) {\n                method = load.directCfg.method;\n                args = method.getArgs(me.getParams(options.params), me.getParamOrder(), me.getParamsAsHash());\n                args.push(function(data, response, success) {\n                    me.setMasked(false)",1499860,68,"Fn(response, data",238304,56,"failureFn(response, data",100032,42,", me);\n                return load.apply(window",991422,32," else if (url) {\n            return Ext.Ajax.request({\n    ",1112844,34,"    timeout: (options.timeout || this.getTimeout()) * 1000,\n                method: options.method || 'GET',\n                autoAbort: options.autoAbort,\n                headers: Ext.apply({\n                    'Content-Type'",1089372,52,"\n                }, options.headers || {}),\n                callback: function(callbackO",1452171,41,1343165,35,".responseText,\n                        statusResult = Ext.Ajax.parseStatus(response.status, response);\n                    me.setMasked(false)",1499860,61,"if (statusResult && responseText.length",1799805,37,"success",1721246,33,226496,37,"response",1343556,37,"                    success = !!response.success",211168,52,1513712,39,"    successFn(response, responseText",669568,64,"failureFn(response, responseText",238592,50,214560,32,"failureFn(response, responseText",100032,55,"});\n        }\n    },\n    //@private\n    getParams: function(params) {\n        return Ext.apply({}, params, this.getBaseParams()",658639,34,"values of form fields in bulk",935760,35,"myForm.s",99563,33,"Ed',\n     *         crazy: true,\n    ",1521281,34,"    *     });\n     *\n     * If there groups of checkbox fields with the same name, pass their values in an array",733967,33,"myForm.s",99563,56,"crazy: false,\n     *         hobbies: [\n     *             'reading',\n     *             'cooking',\n     *             'gaming'",240240,39,"\n     * @param {Object} values field name => value mapping object.\n     * @return {Ext.form.Panel} This form.\n     */\n    setValues",656859,33,1622337,39,"me = this,\n            name, field, value, ln, i, f;\n        values = values || {};\n        for (name in values) {\n            if (values",1804352,41,"field = fields[name];\n                value = values[name];\n",1630634,49,"// If there are multiple fields with the same name. Checkboxes, radio fields and maybe event just normal fields..\n",93000,36,"field)",842367,33,"field",843150,33,"// Loop through each of the fields\n        ",52240,63,"        f = field[i",92176,35,"f.isRadio",91904,36,"// If it is a radio field just use setGroupValue which will handle all of the radio fields",86032,33,"f.setGroupValue",98478,37,191392,35,"    } else if (f.isCheckbox",91904,36,63984,42,"                    f.setChecked((value.indexOf(f._value) != -1))",92287,34,403424,41,"    f.setChecked((value == f._value))",92287,34,"}\n        ",214539,53,"        // If it is a bunch of fields with the same name, check if the value is also an array, so we can map it",86032,33,"// to each field",92928,37,1106096,42,"                f.setValue(value[i])",92287,34,"}",98576,78,214560,36,"field.isRadio || field.isCheckbox",344928,35,"If the field is a radio or a checkbox\n                            field.setChecked",98478,33,226496,37,"// If just a normal field\n                            field.setValue",98478,33,"}",18384,39,"    if (me.getTrackResetOnLoad())",1569073,32,".resetOriginalValue(",100032,55,543968,55,1560602,33,"value of each field in the form, keyed to the field's name.\n     * For groups of checkbox fields with the same name, it will be arrays of values",733967,33,"{\n     *         name: \"Jacky Nguyen\", // From a TextField\n     *         favorites: [\n     *             'pizza',\n     *             'noodle',\n     *             'cake'",1561744,46,"param {Boolean} [enabled] `true` to return only enabled fields.\n     * @param {Boolean} [all] `true` to return all fields even if they don't have a\n     * {@link Ext.field.Field#name name} configured.\n     * @return {Object} Object mapping field name to its value",564195,34,"enabled, all",1481416,33,"Fields(),\n            values = {}",840288,35,",\n            field, value, addValue, bucket, name, ln, i;\n        // Function which you give a field and a name, and it will add it into the values\n        // object accordingly\n        addValue = function(field, name) {\n            if (!all && (!name || name === 'null') || field.isFile) {",335918,51,"if (field.isCheckbox",1541289,34,"getSubmitValu",787856,42,"value = field.getValue",504800,34,"!(enabled && field.getDisabled())) {\n                // RadioField is a special case where the value returned is the fields valUE\n                // ONLY if it is checked\n                if (field.isRadio) {\n                    if (field.isChecked(",335278,34,"s",1353679,32,73264,51,"// Check if the value already exists\n                    bucket = value",136735,33,"!Ext.isEmpty(bucket)) {\n                        // if it does and it isn't an array, we need to make it into an array\n                        // so we can push more",1804913,32,"Array(bucke",410271,34,"bucket = values",91369,43,"bucket\n    ",1180407,47,"    }\n                        // Check if it is an array\n                        if (",335389,46,"// Concat it into the other values\n                            bucket = values[name] = bucket.concat",98478,33,226496,37,"// If it isn't an array, just pushed more values\n                            bucket",93103,38,806377,55,"values",1353679,32,283312,46,"};\n        // Loop through each of the fields, and add the values for those fields.\n        for (name in fields) {\n            if (fields",1804352,41,"field = fields[name];\n                if (isArray(field)) {\n                    ln = field",282653,34,1302960,34,"            addValue(field[i], ",138144,46," else {\n                    addValue(field, n",1539680,36,"}\n        }\n        return values;\n    },\n    /**\n     * Resets all fields in the form back",1556517,33," @return {Ext.form.Panel} This form.\n     */",701398,38,"getFieldsAsArray().forE",1568079,34,"field.reset",1253676,35,";\n    },\n    /**\n     * A convenient method to disable all fields in this form.\n     * @return {Ext.form.Panel} This form.\n     */\n    doSetDisabled: function(newDisabled) {\n        this.getFieldsAsArray().forE",1568079,34,"field.setDisabled(newDisabled",1253677,34,876096,45,"getFieldsAsArray: function() {\n        var fields = [],\n            getFieldsFrom = ",1258687,33,"if (item.isField",1583725,36,61728,37,"    if (item.isContainer) {\n                    item.getItems().each(getFieldsFrom",341552,34,";\n        this.getItems().each(getFieldsFrom);\n        return field",1234256,41,"Returns all {@link Ext.field.Field field} instances inside this form.\n     * @param {Boolean} byName return only fields that match the given name, otherwise return all fields.\n     * @return {Object/Array} All field instances, mapped by field name; or an array if `byName` is passed.\n     */\n    getFields: function(byName) {\n        var fields = {},\n            itemName;\n        var getFieldsFrom = ",1258687,33,"if (item.isField) {\n                    itemName = item",1354076,32,"if ((byName && itemName == byName) || typeof byNam",1541165,40,"    if (fields.hasOwnProperty(item",211727,33,"    if (!Ext.isArray(fields[itemName]",4944,33,"    fields[itemN",91371,45,"fields[itemName]",86032,33,"]",98575,56,"    fields[itemName]",67616,33,85616,41,"fields[itemName] = item",278240,49,88592,35,"if (item.isContainer) {\n                    item.items.each(getFieldsFrom",341552,34,";\n        this.getItems().each(getFieldsFrom);\n        return (byName) ? (fields[byName] || []) : field",1051552,33,"an array of fields in this formpanel.\n     * @return {Ext.field.Field[]} An array of fields in this form panel.",978367,32,"FieldsArray: function() {\n        var fields = [];\n        var getFieldsFrom = ",1258687,33,"if (item.isField",1583725,36,61728,37,"    if (item.isContainer) {\n                    item.items.each(getFieldsFrom",341552,34,";\n        this.items.each(getFieldsFrom);\n        return fields;\n    },\n    getFieldsFromItem: Ext.emptyFn,\n    /**\n     * Shows a generic/custom mask over a designated Element",1544461,32,"cfg Either a string message or a configuration object supporting\n     * the following option",1561485,38,"message : 'Please Wait',\n     *         cls : 'form-mask'",90218,36,"Object} target\n     * @return {Ext.form.Panel} This form",77360,44,"#setMasked} instead.\n     */\n    showMask: function(cfg, target) {\n        Ext.Logger.warn('showMask is now deprecated. Please use Ext.form.Panel#setMasked instead');\n        cfg = Ext.isObject(cfg) ? cfg.message : cfg;\n        if (cfg) {\n            this.setMasked({\n       ",1037353,37,"       message: cfg",1839871,51,"setMasked(true",1540128,56,"Hides a previously shown wait mask (See {@link #showMask}).\n     * @return {Ext.form.Panel} this",77360,44,"#unmask} or {@link #setMasked} instead.\n     */\n    hideM",1040114,53,543984,39,"Returns the currently focused field\n     * @return {Ext.field.Field} The currently focused field, if one is focused or `null`.",978367,32,"FocusedField: function(",1481416,33,"FieldsArray",1320855,53,486928,52,1574363,35,"field.isFocused) {\n                return fiel",1720784,35,1276560,35,"@return {Boolean/Ext.field.Field} The next field if one exists, or `false`.",978367,32,"NextField: function(",1481416,33,"FieldsArray(),\n            focusedField = this.getFocusedField",1048327,35,"focusedField) {\n            index = fields.indexOf(focusedField);\n            if (index !== fields.length - 1) {\n                index++;\n                return fields[index",910543,42,"false;\n    },\n    /**\n     * Tries to focus the next field in the form, if there is currently a focused field.\n     * @return {Boolean/Ext.field.Field} The next field that was focused, or `false`.\n     * @private\n     */\n    focusNextField: function() {\n        var field = this.getNextField();\n",1481792,33,"field.focus();\n            return field",511040,45,"/**",1550736,40,"/Ext.field.Field} The next field if one exists, or `false`.\n     */\n    getPreviousField: function(",1481416,33,"FieldsArray(),\n            focusedField = this.getFocusedField",1048327,35,"focusedField) {\n            index = fields.indexOf(focusedField);\n            if (index !== 0) {\n                index--;\n                return fields[index",910543,42,"false;\n    },\n    /**\n     * Tries to focus the previous field in the form, if there is currently a focused field.\n     * @return {Boolean/Ext.field.Field} The previous field that was focused, or `false`.\n     * @private\n     */\n    focusPreviousField: function() {\n        var field = this.getPreviousField();\n",1481792,33,"field.focus();\n            return field",511040,39,1240047,57,"fx.runner.Css",702448,34,1786785,30277,"This component is used in {@link Ext.navigation.View} to control animations in the toolbar. You should never need to\n * interact with the component directly, unless you are subclassing it.\n * @private\n * @author Robert Dougan <rob",1387340,33,"navigation.Bar', {\n    extend: Ext.TitleBar,\n    // @private\n    isToolbar",1402271,49,1023338,74,"toolbar'",1023616,42,"inheritdoc",1149641,47,"navigation-bar",1221408,32,"String} ui\n         * Style options for Toolbar. Either 'light' or 'dark'",1422720,44,"i: 'dark",1221408,32,"String} title\n         * The title of the toolbar. You should NEVER set this, it is used internally. You set the title of the\n         * navigation bar by giving a navigation views children a title configuration",1614000,32,1224719,32,"itle",1037824,35,"\n         * @h",823440,45,"defaultType: 'button'",1023616,42,"ignore",1605488,42,"layout: {\n            type: 'hbox'",170384,36,1035153,56,"NavigationBar. The {@link #cfg-defaultType} of\n         * a NavigationBar is {@link Ext.Button}, so you do not need to specify an `xtype` if you are adding\n         * buttons",739464,37,"give items a `align` configuration which will align the item to the `left` or `right` of\n         * the NavigationBar.\n         * @h",823440,45,1089744,36,"BackButtonText\n         * The text to be displayed on the back button if:\n         * a) The previous view does not have a title\n         * b) The {@link #useTitleForBackButtonText} configuration is true",1614000,32,1088495,32,"efaultBackButtonText: 'Back",1221408,32,"Object} animation",746656,62,"animation: {\n            duration: 300",170384,36,"cfg {Boolean} useTitleForBackButtonText\n         * Set to false if you always want to display the {@link #defaultBackButtonText} as the text\n         * on the back button. True if you want to use the previous views title",1614000,32,1449135,34,"TitleForBackButtonTex",930688,38,"Ext.navigation.View} view A reference to the navigation view this bar is linked to",1614000,32,1174345,35,1037824,46,"androidAnimation Optionally enable CSS transforms on Android 2\n         * for NavigationBar animations.  Note that this may cause flickering if the\n         * NavigationBar is hidde",1295344,44,"android2Transforms",1023536,36," {Ext.Button/Object} backButton The configuration for the back button",746656,62,"backButton: {\n            align: 'left',\n            ui: 'back',\n",1080849,33,"}\n    },\n    platformConfig: [\n        {\n            theme: [\n                'Blackberry'\n            ],\n            animation: false\n        }\n    ],\n    /**\n     * @event back\n     * Fires when the back button was tapped.\n     * @param {Ext.navigation.Bar} this This bar",899536,53,1480041,35,"!config.items) {\n            config.items = [];\n        }\n        this.backButtonStack = [];\n        this.activeAnimations = [];",1678000,39,"config",438541,35,"@private\n     */\n    applyBackButton",1011435,36,"Ext.factory(config, Ext.Button, this.getBackButton",1238032,48,"updateBackButton: function(newBackButton, oldBackButton) {\n        if (oldBackButton) {\n            this.remove(oldBackButton);\n        }\n        if (newBackButton) {\n            this.add(newBackButton);\n            newBackButton.on({\n",789645,45,"tap: this.onBackButtonTap",1630768,38,"onBackButtonTap",1185175,39,"back'",1231856,46,"/\n    updateView: function(newView",542384,39,"backButton = me.getBackButton(),\n            innerItems, i, backButtonText, item, title, titleText;\n        me.getItems();\n        if (newView) {\n            //update the back button stack with the current inner items of the view\n            innerItems = newView.getInnerItems",31002,32,"innerItems",220365,32,882555,34,"    title = (item.getTitle) ? item.getTitle() : item.config.title;\n                me.backButtonStack.push(title || '&nbsp;');\n            }\n            titleText = me.getTitleText();\n            if (titleText",939920,34,"titleText",1846603,33,"me.setTitle(titleText);\n            backButtonText = me.getBackButtonText();\n            if (backButtonText) {\n                backButton.setText(backButtonText);\n                backButton",876880,76,"onViewAdd: function(view",1054896,45,"backButtonStack = me.backButtonStack,\n            hasPrevious, title;\n        me.endAnimation();\n        title = (item.getTitle) ? item.getTitle() : item.config.title;\n        backButtonStack.push(title || '&nbsp;');\n        hasPrevious = backButtonStack.length > 1;\n        me.doChangeView(view, hasPrevious, fals",1844544,49,"ViewRemove: function(view",542384,39,"backButtonStack = me.backButtonStack,\n            hasPrevious;\n        me.endAnimation();\n        backButtonStack.pop();\n        hasPrevious = backButtonStack.length > 1;\n        me.doChangeView(view, hasPrevious, tru",1844544,47,"doChangeView: function(view, hasPrevious, revers",1652080,40,"leftBox = me.leftBox,\n            leftBoxElement = leftBox.element,\n            titleComponent = me.titleComponent,\n            titleElement = titleComponent.element,\n            backButton = me.getBackButton(),\n            titleText = me.getTitleText(),\n            backButtonText = me.getBackButtonText(),\n            animation = me.getAnimation() && view.getLayout().getAnimation(),\n            animated = ",875293,34," && view.isPainted(),\n            properties, leftGhost, titleGhost, leftProps, titleProps;\n        if (animated) {\n            leftGhost = me.createProxy(leftBox.element);\n            leftBoxElement.setStyle('opacity', '0');\n            backButton.setText(backButtonText);\n            backButton[hasPrevious ? 'show' : 'hide']();\n            titleGhost = me.createProxy(titleComponent.element.getParent());\n            titleElement.setStyle('opacity', '0');\n            me.setTitle(titleText);\n            properties = me.measureView(leftGhost, titleGhost, reverse);\n            leftProps = properties.left;\n            titleProps = properties.title;\n            me.isAnimating = true;\n            me.animate(leftBoxElement, leftProps.element);\n            me.animate(titleElement, titleProps.element, function() {\n                titleElement.setLeft(properties.titleLeft);\n                me",1839647,34,"    me.refreshTitlePosition();",320877,33,"Ext.browser.is.AndroidStock2 && !this.getAndroid2Transforms()) {\n                leftGhost.ghost.destroy();\n                titleGhost.ghost.destro",1480896,42,"me.animate(leftGhost.ghost, leftProps.ghost);\n                me.animate(titleGhost.ghost, titleProps.ghost",320607,35,"leftGhost.ghost.destroy();\n                    titleGhost.ghost.destroy();",790494,33,"}",356062,34,"hasPrevious) {\n                backButton.setText(backButtonText);\n                backButton.show",120431,41,"backButton.hide",759615,33,"setTitle(titleTex",1119424,37,"alculates and returns the position values needed for the back button when you are pushing a title",1538807,32,"asureView: function(oldLeft, oldTitle, revers",1652080,40,"barElement = me.element,\n            newLeftElement = me.leftBox.element,\n            titleElement = me.titleComponent.element,\n            minOffset = Math.min(barElement.getWidth() / 3, 200),\n            newLeftWidth = newLeftElement.getWidth(),\n            barX = barElement.getX(),\n            barWidth = barElement.getWidth(),\n            titleX = titleElement.getX(),\n            titleLeft = titleElement.getLeft(),\n            titleWidth = titleElement.getWidth(),\n            oldLeftX = oldLeft.x,\n            oldLeftWidth = oldLeft.width,\n            oldLeftLeft = oldLeft.left,\n            useLeft = Ext.browser.is.AndroidStock2 && !this.getAndroid2Transforms(),\n            newOffset, oldOffset, leftAnims, titleAnims, omega, theta;\n        theta = barX - oldLeftX - oldLeftWidth",851088,37,"newOffset = theta;\n            oldOffset = Math.min(titleX - oldLeftWidth, minOffset",201616,32,"oldOffset = theta;\n            newOffset = Math.min(titleX - barX, minOffset);\n        }\n        if (useLeft) {\n            leftAnims = {\n                element: {\n        ",863642,36,"        left: newOffset,\n        ",863725,39,308140,32,"o: {",993553,58,"opacity: 1",18384,54,497471,32,"eftAnims = {\n                element: {\n        ",863642,36,"        transform:",1805504,32,"ranslateX: newOffset\n    ",789051,43,"    opacity: 0",789050,44,"to: {",841814,34,":",1805504,32,"ranslateX: 0\n    ",789051,43,"    opacity: 1",18384,40,",\n                ghost: {\n        ",863707,34,"        transform:",1805504,32,"ranslateX: oldOffset\n    ",789051,43,"    opacity: 0",18384,54,";\n        }\n        theta = barX - titleX + newLeftWidth;\n        if ((oldLeftLeft + titleWidth) > titleX) {\n            omega = barX - titleX - titleWidth;\n        }\n",869739,35,"titleElement.setLeft(0);\n            oldOffset = barX + barWidth - titleX - titleWidth;\n            if (omega",651024,34,"newOffset = omega",346432,39,"newOffset = theta",501216,45,"newOffset = barX + barWidth - titleX - titleWidth;\n            if (omega",651024,34,"oldOffset = omega",346432,39,"oldOffset = theta;\n            }\n            newOffset = Math.max(titleLeft, newOffset);\n        }\n        if (useLeft) {\n            titleAnims = {\n                element: {\n        ",863642,36,"        left: newOffset,\n        ",863725,39,308140,32,"o: {\n                        left: titleLeft,\n        ",863725,39,52640,41,1050016,32,"itleAnims = {\n                element: {\n        ",863642,36,"        transform:",1805504,32,"ranslateX: newOffset\n    ",789051,43,"    opacity: 0",789050,44,"to: {",841814,34,":",1805504,32,"ranslateX: titleLeft\n    ",789051,43,"    opacity: 1",18384,40,",\n                ghost: {\n        ",863707,34,"        transform:",1805504,32,"ranslateX: oldOffset\n    ",789051,43,"    opacity: 0",18384,54,1112815,41,"left: leftAnims,\n            title: titleAnims,\n            titleLeft: titleLeft",900688,34,"Helper method used to animate elements.\n     * You pass it an element, objects for the from and to positions an option onEnd callback called when the animation is over.\n     * Normally this method is passed configurations returned from the methods such as #measureTitle(true) etc.\n     * It is called from the #pushLeftBoxAnimated, #pushTitleAnimated, #popBackButtonAnimated and #popTitleAnimated\n     * methods.\n     *\n     * If the current device is Android, it will use top/left to animate.\n     * If it is anything else, it will use transform.\n     * @private\n     */\n    animate: function(element, ",334588,32,"me = this,\n            animation;\n        //reset the left of the element\n        element.setLeft(0);\n        config = Ext.apply(config, {\n",1806746,42,"easing: 'ease-in-out',\n            duration: me.getAnimation().duration || 250,\n",1850735,34,"\n        });\n        a",791798,32,"config);\n",1062492,62,"if (callback)",283819,33,"me);",1377624,39,"Ext.Animator.run(animation);\n        me.activeAnimations.push(animation);\n    },\n    end",980495,32,"var activeAnimations = this.activeAnimations,\n            animation, i, ln;\n        if (activeAnimations) {\n            ln = activeAnimation",1176303,39,"n; i++) {\n                animation = activeAnimations[i];\n                if (animation",868142,32,"    animation.stopAnimation(",1377216,48,1062663,33,135552,32,"this.activeAnimations = [];\n        }\n    },\n    refreshTitlePosi",707520,64,1860301,33,"},\n    /**\n     * Returns the text needed for the current back button at anytime.",978367,32,"BackButtonText: function() {\n        var text = this.backButtonStack[this.backButtonStack.length - 2],\n            useTitleForBackButtonText = this.getUseTitleForBackButtonText();\n        if (!useTitleForBackButtonText) {\n            if (text) {\n                text = this.getDefaultBackButtonText",900144,43,"text",1076080,36,"text needed for the current title at anytime.",978367,32,"TitleTex",559808,36,"backButtonStack[this.backButtonStack",916837,36,"Handles removing back button stacks from this bar\n     * @private\n     */\n    beforePop: function(count) {\n        count--;\n        for (var i = 0; i < count; i++) {\n            this.backButtonStack.pop(",463328,35,"We override the hidden method because we don't want to remove it from the view using display:none. Instead we just position it off\n     * the screen, much like the navigation bar proxy. This means that all animations, pushing, popping etc. all still work when if you hide/show\n     * this bar at any time.",1062777,34,787566,35,"if (!hidden",776606,32,"Style({\n                position: 'relative',\n                top: 'auto',\n                left: 'auto',\n                width: 'auto'",1839871,51,"element.setStyle({\n                position: 'absolute',\n                top: '-1000px',\n                left: '-1000px',\n                width: this.element.getWidth() + 'px'",1630768,38,"/**\n     * Creates a proxy element of the passed element, and positions it in the same position, using absolute positioning.\n     * The createNavigationBarProxy method uses this to create proxies of the backButton and the title elements.\n     * @private\n     */\n    createProxy",429228,34,"ghost, x, y, left, width;\n        ghost = element.dom.cloneNode(true);\n        ghost.id = element.id + '-proxy';\n        //insert it into the toolbar\n        element.getParent().dom.appendChild(ghost);\n        //set the x/y\n        ghost = Ext.get(ghost);\n        x = element.getX();\n        y = element.getY();\n        left = element.getLeft();\n        width = element.getWidth();\n        ghost.setStyle('position', 'absolute');\n        ghost.setX(x);\n        ghost.setY(y);\n        ghost.setHeight(element.getHeight());\n        ghost.setWidth(width);",968526,52,",\n            left: left,\n",444168,38,"ghost: ghos",1125712,33,"uthor Robert Dougan <rob@sencha.com>\n *\n * NavigationView is basically a {@link Ext.Container} with a {@link Ext.layout.Card card} layout, so only one view\n * can be visible at a time. However, NavigationView also adds extra functionality on top of this to allow\n * you to `push` and `pop` views at any time. When you do this, your NavigationView will automatically animate\n * between your current active view, and the new view you want to `push`, or the previous view you want to `pop`.\n *\n * Using the NavigationView is very simple. Here is a basic example of it in ac",585053,32,"var view = Ext.create('Ext.NavigationView",729343,36,"\n *",259026,34,"title: 'First",259017,47,"xtype: 'button',\n *                 text: 'Push a new view!',\n *                 handler: function() {\n *                     // use the push() method to push another view. It works much like\n *                     // add() or setActiveItem(). it accepts a view instance, or you can give it\n *                     // a view config.\n *                     view.push({\n *                         title: 'Second',\n *                         html: 'Second view!'\n *        ",1312654,32,"    }\n *             }]\n *         }]\n *     });\n *\n * Now, here comes the fun part: you can push any view/item into the NavigationView, at any time, and it will\n * automatically handle the animations between the two views, including adding a back button (if necessary)\n * and showing the new title.\n *\n *     view.push({\n *         title: 'A new view',\n *         html: 'Some new content'",955218,34,"it is as simple as calling the {@link #method-push} method, with a new view (instance or object). Done.\n *\n * You can also `pop` a view at any time. This will remove the top-most view from the NavigationView, and animate back\n * to the previous view. You can do this using the {@link #method-pop} method (which requires no arguments).\n *\n *     view.pop();\n *\n *  Applications that need compatibility with ##Older Android## devices will want to see the {@link #layout} config for details on\n *  disabling navigation view animations as these devices have poor animation support and performance.\n *\n * @aside guide navigation_view\n */\nExt.define('Ext.navigation.View",1817152,36,"alternateClassName: 'Ext.NavigationView',\n    xtype: 'navigationview",1149344,44,1023338,74,"navigationview",1221408,32,"Boolean/Object} navigationBar\n         * The NavigationBar used in this navigation view. It defaults to be docked to the top",739464,32,"just pass in a normal object if you want to customize the NavigationBar.",265097,40,"navigationBar: {\n         *         ui: 'dark',\n         *         docked: 'bottom'",1404640,40,"You **cannot** specify a *title* property in this configuration. The title of the navigationBar is taken\n         * from the configuration of this views children",1174127,32,".push({\n         *         title: 'This views title which will be shown in the navigation bar',\n         *         html: 'Some HTML",149855,43,1189099,32,"vigationBar: {\n            docked: 'top'",170384,36,"cfg {String} defaultBackButtonText\n         * The text to be displayed on the back button if:\n         *\n         * - The previous view does not have a title.\n         * - The {@link #useTitleForBackButtonText} configuration is `true`",836480,43,"defaultBackButtonText: 'Back",1221408,32,"Boolean} useTitleForBackButtonText\n         * Set to `false` if you always want to display the {@link #defaultBackButtonText} as the text\n         * on the back button. `true` if you want to use the previous views titl",1422719,47,"TitleForBackButtonTex",1023535,37,1035156,53,"NavigationView",1035218,272,"title: 'My title',",1034858,35,1035497,92,"\n         * If you want a title to be displayed in the {@link #navigationBar}, you must specify a `title` configuration in your\n         * view, like above.",520411,33,"Only one view will be visible at a time. If you want to change to another view, use the {@link #method-push} or\n         * {@link #setActiveItem} method",1606288,44,"/**\n         * @cfg {Object}\n         * Layout used in this navigation view, type must be set to 'card'.\n         * **Android NOTE:** Older Android devices have poor animation performance. It is recommended to set the animation to null",1035296,41," layout: {\n         *          type: 'card',\n         *          animation: null",959820,41,1820062,38,"{\n            type: 'card',\n            animation: {\n                duration: 300,\n    ",863610,44,"    type: 'slide',\n                direction: 'left'",345744,47,"@event push\n     * Fires when a view is pushed into this navigation view\n     * @param {Ext.navigation.View",756912,36," @param {Mixed} view The view that has been push",1600362,33,"pop\n     * Fires when a view is popped from this navigation view\n     * @param {Ext.navigation.View",756912,36," @param {Mixed} view The view that has been popp",1600362,33,"back\n     * Fires when the back button in the navigation view was tapped.\n     * @param {Ext.navigation.View} this The component instance\\\n     */\n    platformConfig: [\n        {\n            theme: [\n                'Blackberry'\n            ],\n            navigationBar: {\n                splitNavigation: true\n            }\n        }\n    ],\n    // @private",549728,38,"var me = this,\n            navBar = me.getNavigationBar();\n        //add a listener onto the back button in the navigationbar\n        if (navBar) {\n            navBar.on({\n                back: me.onBackButtonTap",802502,56,"me.relayEvents(navBar, 'rightbuttontap');\n            me.relayEvents(me, {\n                add: 'push',\n                remove: 'pop'",857600,35,"var layout = me",837436,32," && !layout.isCard",1282095,34,"The base layout for a NavigationView must always be a Card Layout'",1587584,50,"/\n    applyLayout",1619965,60,1176606,52," Called when the user taps on the back button\n     */\n    onBackButtonTap: function() {\n        this.pop();\n        this.fireEvent('back",876088,32,"Pushes a new view into this navigation view using the default animation that this view has.\n     * @param {Object} view The view to push",1050751,33,"The new item you just pushed.\n     */\n    push: function(view) {\n        return this.add(view",1837008,33,"the current active view from the stack and sets the previous view using the default animation\n     * of this view. You can also pass a",1068976,36," to target what inner item to pop to.\n     * @param {Number/String/Object} count If a Number, the number of views you want to pop. If a String, the pops to a matching\n     * component query. If an Object, the pops to a matching view instance",1050751,33,"The new active item\n     */\n    pop",1307664,32,"this.beforePop(count)) {\n            return this.doPop(",1587584,51,"Calculates whether it needs to remove any items from the stack when you are popping more than 1\n     * item. If it does, it removes those views from the stack and returns `true`",416208,37,"it has removed views.\n     */\n    beforePop: function(cou",1557807,41,1049030,45,"Ext.isString(count) || Ext.isObject(count)) {\n            var last = innerItems.length - 1",57339,33,"for (i = last; i >= 0; i--) {\n                if ((Ext.isString(count) && Ext.ComponentQuery.is(innerItems[i], count)) || (Ext.isObject(count) && count == innerItems[i])) {\n                    count = last - i",382361,69,"    if (!Ext.isNumber(count)",44000,56,"}\n        var ln = innerItems.length,\n            toRemove;\n        //default to 1 pop\n        if (!Ext.isNumber(count) || count < 1) {\n            count = 1;\n        }\n        //check if we are trying to remove more items than we have\n        count = Math.min(count, ln - 1);\n        if (count) {\n            //we need to reset the backButtonStack in the navigation bar\n            me.getNavigationBar().beforePop(count);\n            //get the items we need to remove from the view and remove theme\n            toRemove = innerItems.splice(-count, count - 1);\n            for (i = 0; i < toRemove",220365,32,"this.remove(toRemov",987805,33,981229,82,"/\n    doPop",900368,50,1060175,45,"set the new active item to be the new last item of the stack\n        me.remove(innerItems[innerItems.length - 1]);\n        // Hide the backButton\n        if (innerItems.length < 3 && this.$backButton) {\n            this.$backButton.hide();\n        }\n        // Update the title container\n        if (this.$titleContainer) {\n            if (!this.$titleContainer.setTitle",1533755,42,"have selected to display a title in a component that does not                     support titles in NavigationView. Please remove the `title` configuration from your                     NavigationView item, or change it to a component that has a `setTitle` method.'",57296,33,"item = innerItems[innerItems.length - 2];\n            this.$titleContainer.setTitle((item.getTitle) ? item.getTitle() : item.config.title",1250608,33,"getActiveItem(",492288,37,"previous item, if one exists.\n     * @return {Mixed} The previous view\n     */\n    getPreviousItem",895163,32,1060180,38,"return innerItems[innerItems.length - 2",1151922,37,"backbutton text accordingly in the {@link #navigationBar}",969200,35,"UseTitleForBackButtonText: function(useTitleForBackButtonText) {\n        var navigationBar = this.getNavigationBar();\n        if (navigationBar) {\n            navigationBar.setUseTitleForBackButtonText(useTitleForBackButtonTex",1119424,36,"Updates the backbutton text accordingly in the {@link #navigationBar}",969200,35,"DefaultBackButtonText: function(defaultBackButtonText) {\n        var navigationBar = this.getNavigationBar();\n        if (navigationBar) {\n            navigationBar.setDefaultBackButtonText(defaultBackButtonTex",1119424,36,"This is called when an Item is added to the BackButtonContainer of a SplitNavigation View\n     * @private\n     *\n     * @param toolbar\n     * @param item\n     */\n    onBackButtonContainerAdd: function(toolbar, item) {\n        item.on({",1739310,38,"show: this.refreshBackButtonContainer,\n            hide: this.refreshBackButtonContainer",971206,33,"BackButtonContainer()",303496,32,"called when an Item is removed from the BackButtonContainer of a SplitNavigation View\n     * @private\n     *\n     * @param toolbar\n     * @param item\n     */\n    onBackButtonContainerRemove: function(toolbar, item) {\n        item.un({",1739310,38,"show: this.refreshBackButtonContainer,\n            hide: this.refreshBackButtonContainer",971206,33,"BackButtonContainer()",303496,32,"used for Blackberry SplitNavigation to monitor the state of child items in the bottom toolbar.\n     * if no visible children exist the toolbar will be hidden",967937,36,"BackButton",718876,32,"if (!this.$backButtonContainer",550175,46,"i = 0,\n            backButtonContainer = this.$backButtonContainer,\n            items = backButtonContainer.items",908974,39,"items.length",1267407,33,".get(i);\n            if (!item",1843550,36,"$backButtonContainer.show",1624672,41,"\n        }\n        this.$backButtonContainer.hid",485569,32,"applyNavigationBar",1019056,33,"me = thi",333822,48,"\n                hidden: true,\n                docked: 'top",544576,35,"if (config.title) {\n            delete config.title;\n            Ext.Logger.warn(\"Ext.navigation.View: The 'navigationBar' configuration does not accept a 'title' property. You \" + \"set the title of the navigationBar by giving this navigation view's children a 'title' property.\");\n        }\n        config.view = this;\n        config.useTitleForBackButtonText = this.getUseTitleForBackButtonText();\n        // Blackberry specific nav setup where title is on the top title bar and the bottom toolbar is used for buttons and BACK\n        if (config.splitNavigation) {\n            this.$titleContainer = this.add({\n",1686687,32,1078938,35,"               ui: 'light',\n                title: this.$currentTitle || ''\n            });\n            var containerConfig = (config.splitNavigation === true) ? {} : config.splitNavigation;\n            this.$backButtonContainer = this.add({\n",536651,39,"           docked: 'bottom',\n",1080845,41,"});\n            // Any item that is added to the BackButtonContainer should be monitored for visibility\n            // this will allow the toolbar to be hidden when no items exist in it.\n            this.$backButtonContainer.on({\n",1049350,43,"add: me.onBackButtonContainerAdd,\n                remove: me.onBackButtonContainerRemov",1825296,35,"$backButton = this.$backButtonContainer.add({\n",536815,38,"           text: 'Back',\n                hidden: true,\n                ui: 'back'",1835089,32,"Default config items go into the bottom bar\n            if (config.items) {\n                this.$backButtonContainer.add(config.items",17472,32,"If the user provided items and splitNav items, default items go into the bottom bar, split nav items go into the top\n            if (containerConfig.items) {\n                this.$titleContainer.add(containerConfig.item",1064847,35,"$backButton.on({\n",789645,45,"tap: this.onBackButtonTap\n            })",1177279,41,"hidden: true,\n                docked: 'top",544576,42,"Ext.factory(config, Ext.navigation.Bar, this.getNavigationBar());\n    },\n    // @private\n    updateNavigationBar: function(newNavigationBar, oldNavigationBar) {\n        if (oldNavigationBar) {\n            this.remove(oldNavigationBar, true);\n        }\n        if (newNavigationBar) {\n            this.add(newNavigationBar",1587584,50,1060098,77,"me = this",1049016,55,1060218,55,"me.getItems();\n        // If we are not initialzed yet, we should set the active item to the last item in the stack\n        if (!me.initialized) {",1060572,36,".length - 1",1518064,57,"activeItem,\n            currentActiveItem\n        ])",1049896,63,"var me = this",1049016,45,",\n            animation = me.getLayout().getAnimation();\n        if (innerIndex > 0) {\n    ",875281,62,"    animation.setRevers",17466,35,"me.setActiveItem(innerIndex - 1);\n            me.getNavigationBar().onViewRemove(me, innerItems[innerIndex], innerI",1057776,60,"doRemove: function() {\n        var animation = this.getLayout().getAnimation();",875280,76,"Reverse(false",707999,54,1062768,38,1057138,43,"// Check for title configuration\n        if (item && item.getDocked() && item.config.title === true) {\n            this.$titleContainer = item",1058700,37,"Add(item, index);\n        var navigaitonBar = this.getInitialConfig().navigationBar;\n        if (!this.isItemsInitializing && ",883118,39,"setActiveItem(item);\n            // Update the navigationBar\n            if (navigaitonBar) {\n                this.getNavigationBar().onViewAdd(this, item, index",17472,32,"Update the custom backButton\n            if (this.$backButtonC",719038,33,"$backButton",876880,37,"    if (item && ",883118,34,"// Update the title container title\n            this.updateTitleContainerTitle((item.getTitle) ? item.getTitle() : item.config.title)",1538358,33,"ialized",974495,32,1057276,47,"/**\n     * @private\n     * Updates the title of the titleContainer, if it exists\n     */\n    updateTitleContainerTitle: function(title) {\n        if (this.$titleContainer) {\n            if (!this.$titleContainer.setTitle",1533755,42,"have selected to display a title in a component that does not                     support titles in NavigationView. Please remove the `title` configuration from your                     NavigationView item, or change it to a component that has a `setTitle` method.'",1064848,34,"$titleContainer.setTitle(title",963568,37,"$currentTitle = titl",1259439,35,"Resets the view by removing all items between the first and last item",1050751,33,"The view that is now active\n     */\n    rese",559808,36,"pop(this.getInnerItems().length",1725280,32,1817073,53386,"model/PrintOffice",1871087,489,"Ext.define('MEC_App.model.PrintOffice', {\n    extend: Ext.data.Model,\n    alias: 'model.printoffice',\n    config: {\n        fields:",1006656,33,"name: 'ItemName',\n    ",1393340,35,1135390,37,"name: 'ItemView',\n    ",1393340,35,"    }\n        ]\n    }\n});\n\n/*\n * File: app/view/MainNavView",1871087,489,"Ext.define('MEC_App.view.MainNavView', {\n    extend: Ext.navigation.View,\n    alias: 'widget.MainNavView',\n    config: {\n        cls: 'home-wrapper',\n        fullscreen: true,\n        scrollable: false,\n        defaultBackButtonText: ' ',\n        items:",1006656,33,"xtype: 'panel',\n                title: '?????????',\n                layout: 'vbox',\n                items: [",995466,55,"panel',\n       ",1819613,35,"               cls: 'home-header'",993216,33,"<div class=\"header-text-bg\"><b>????? ????? ????? ????? ????? ?????</b><br />????? ????? ????? ?????  </div>'",789050,44,993845,34,"panel',\n       ",1819802,35,"               cls: 'home-btns',\n                        layout: 'vbox',\n                        items",1012784,32,92880,34,"xtype: 'panel'",649344,34,"flex:",649342,36,"layout: 'hbox'",649344,34,"items",1012784,36,1013119,34," ",735097,33,46560,35,"flex:",649342,36,"        cls: 'btn-services'",649344,34,"        itemId: 'homeServices'",649344,34,"        iconAlign: 'top'",649344,34,"        iconCls: 'services'",649344,34,"        text: '??????? ??????'",93568,38,649344,34,1013119,34," ",735097,33,46560,35,"flex:",649342,36,"        cls: 'btn-news'",649344,34,"        itemId: 'homeNews'",649344,34,"        iconAlign: 'top'",649344,34,"        iconCls: 'news'",649344,34,"        text: '?????? ????????'",93568,71,"]\n        ",789051,43,1012848,42,"xtype: 'panel'",649344,34,"flex:",649342,36,"layout: 'hbox'",649344,34,"items",1012784,36,1013119,34," ",735097,33,46560,35,"flex:",649342,36,"        cls: 'btn-general-info'",649344,34,"        itemId: 'homeInquire'",649344,34,"        iconAlign: 'top'",649344,34,"        iconCls: 'general-info'",649344,34,"        text: '??????????? ? ?????????'",93568,38,649344,34,1013119,34," ",735097,33,46560,35,"flex:",649342,36,"        cls: 'btn-inquire'",649344,34,"        itemId: 'homeReports'",649344,34,"        iconAlign: 'top'",649344,34,"        iconCls: 'inquire'",649344,34,"        text: '???????? ? ????????'",93568,71,"]\n        ",789051,43,1012848,42,"xtype: 'panel'",649344,34,"flex:",649342,36,"layout: 'hbox'",649344,34,"items",1012784,36,1013119,34," ",735097,33,46560,35,"flex:",649342,36,"        cls: 'btn-projects'",649344,34,"        itemId: 'homeProjects'",649344,34,"        iconAlign: 'top'",649344,34,"        iconCls: 'contact'",649344,34,"        text: '????????? ? ????????'",93568,38,649344,34,1013119,34," ",735097,33,46560,35,"flex:",649342,36,"        cls: 'btn-contact'",649344,34,"        itemId: 'homeeContact'",649344,34,"        iconAlign: 'top'",649344,34,"        iconCls: 'contact'",649344,34,"        text: '???????'",93568,71,"]",98576,55,"]",18384,39,"]\n            }\n        ]",1866560,45,"this.callParent();\n        //var me = this;\n        var theMenu = Ext.create('MEC_App.view.SideMenu');\n        Ext.Viewport.setMenu(theMenu, {\n            side: 'right',\n            reveal: true\n        });\n        Ext.ComponentQuery.query('MainNavView')[0].getNavigationBar().add({\n ",735097,33,"       iconCls: 'list',\n            align: 'right',\n            handler",598608,33,"Ext.Viewport.setActiveItem({xtype:'SideMenuView'});\n                //var theMenu = me.createMenu();\n                Ext.Viewport.toggleMenu('right'",490160,33,"}\n});\n\n/*\n * File: app/controller/HomeController",1871087,489,"Ext.define('MEC_App.controller.HomeController",1212304,59,"control: {\n            \"button#mybutton1\": {\n                tap: 'onMybutton1Tap'\n            },\n            \"button#mybutton2\": {\n                tap: 'onMybutton2Tap'\n            },\n            \"button#mybutton\": {\n                tap: 'onMybuttonTap'\n            },\n            \"button#homeServices\": {\n                tap: 'onHomeServicesTap'\n            },\n            \"button#homeNews\": {\n                tap: 'onHomeNewsTap'\n            },\n            \"button#homeInquire\": {\n                tap: 'onHomeInquireTap'\n            },\n            \"button#homeGeneralInfo\": {\n                tap: 'onHomeGeneralInfoTap'\n            },\n            \"button#homeReports\": {\n                tap: 'onHomeReportsTap'\n            },\n            \"button#homeProjects\": {\n                tap: 'onHomeProjectsTap',\n                tap: 'onHomeProjectsTap'\n            },\n            \"button#homeeContact\": {\n                tap: 'onHomeeContactTap'",1369600,39,"ybutton1Tap: function(button, e, eOpts) {\n        button.up('MainNavView').push({\n            xtype: 'ContactUsView',\n            title: 'Contact Us'\n        });\n    },\n    onMybutton2Tap: function(button, e, eOpts) {\n        button.up('MainNavView').push({\n            xtype: 'EconomyNewsView',\n            title: 'testttttt'\n        });\n    },\n    onMybuttonTap: function(button, e, eOpts) {\n        Ext.Viewport.setActiveItem({\n            xtype: 'SideMenuView'\n        });\n    },\n    onHomeServicesTap: function(button, e, eOpts) {\n        button.up('MainNavView').push({\n            xtype: 'PublicServiceView',\n            title: '??????? ??????'\n        });\n    },\n    onHomeNewsTap: function(button, e, eOpts) {\n        button.up('MainNavView').push({\n            xtype: 'EconomyNewsView',\n            title: '?????? ????????'\n        });\n    },\n    onHomeInquireTap: function(button, e, eOpts) {\n        button.up('MainNavView').push({\n            xtype: 'InquiriesView',\n            title: \"??????????? ? ?????????\"\n        });\n    },\n    onHomeGeneralInfoTap: function(button, e, eOpts) {\n        button.up('MainNavView').push({\n            xtype: 'InquiriesView',\n            title: \"??????? ????\"\n        });\n    },\n    onHomeReportsTap: function(button, e, eOpts) {\n        button.up('MainNavView').push({\n            xtype: 'ReportsView',\n            title: \"???????? ? ????????\"\n        });\n    },\n    onHomeProjectsTap: function(button, e, eOpts) {\n        button.up('MainNavView').push({\n            xtype: 'ProjectsView',\n            title: \"????????? ? ????????\"\n        });\n    },\n    onHomeeContactTap: function(button, e, eOpts) {\n        button.up('MainNavView').push({\n            xtype: 'ContactUsView',\n            title: \"???????\"\n        });\n    },\n    onHomeProjectsTap: function(button, e, eOpts) {\n        button.up('MainNavView').push({\n            xtype: 'ProjectsView',\n            title: \"????????? ? ????????\"\n        });\n    }\n});\n\n/*\n * File: app/controller/PublicServicesController",1871087,489,"Ext.define('MEC_App.controller.PublicServicesController",1212304,59,"control: {\n            \"button#printOfficeBtn\": {\n                tap: 'onPrintOfficeBtnTap'",1369600,38,"PrintOfficeBtnTap: function(button, e, eOpts) {\n        button.up('MainNavView').push({\n            xtype: 'PrintOffsView',\n            title: \"????? ??????????\"\n        });\n    }\n});\n\n/*\n * File: app/controller/PrintOffices",1871087,489,"Ext.define('MEC_App.controller.PrintOffices",1212304,41,"alias: 'controller.printoffices',\n    config: {\n        refs: {\n            navView: 'printoffices',\n            list: 'printoffices #list',\n            form: 'printoffices printofficeform',\n            addButton: 'printoffices #addButton',\n            editButton: 'printoffices #editButton',\n            removeButton: 'printoffices #removeButton'\n        },\n        control: {\n            \"printoffices #list\": {\n                itemtap: 'select'\n            },\n            \"printoffices #addButton\": {\n                tap: 'add'\n            },\n            \"printoffices #editButton\": {\n                tap: 'edit'\n            },\n            \"printoffices #saveButton\": {\n                tap: 'save'\n            },\n            \"printoffices #removeButton\": {\n                tap: 'remove'\n            },\n            \"printoffices > *\": {\n                show: 'setButtons'",345744,36,"select: function(dataview, index, target, record, e, eOpts) {\n        // Show details\n        this.getNavView().push({\n            xtype: 'printofficedetails',\n            title: 'PrintOffice Details',\n            record: record\n        })",1517755,39,"// Remove current selection\n        this.getList().deselectAll();\n        // Show form\n        this.getNavView().push({\n            xtype: 'printofficeform',\n            title: 'Add PrintOffice',\n            record: Ext.create('model.printoffice')\n        });\n    },\n    edit: function() {\n        // Get selected record\n        var record = this.getList().getSelection()[0];\n        // Show form\n        this.getNavView().push({\n            xtype: 'printofficeform',\n            title: 'Edit PrintOffice',\n            record: record\n        });\n    },\n    save: function(",1113162,36,"),\n            record = form.getRecord(),\n            store = Ext.getStore('PrintOffices');\n        // Update associated record with form values\n        form.updateRecord(record);\n        // Run validation\n        var errors = record.validate();\n        // Valid\n        if (errors.isValid()) {\n            // Add to store if new record\n            if (record.phantom) {\n                // TODO: Assign the record's ID from data source\n                // Normally, this value would be auto-generated,\n                // or returned from the server\n                var id = store.getData().all.length + 1;\n                record.set('id', id);\n                // Add to store\n",1497485,47,"}\n            // Commit changes\n            store.sync();\n            // Back to list\n            this.getNavView().reset(record);\n        } else // Invalid\n        {\n            var msg = '';\n            errors.each(function(error) {\n                msg += error.getMessage() + '<br/>';\n            });\n            Ext.Msg.alert('Error', msg);\n        }\n    },\n    remove",900368,50,"title = 'Delete',\n            message = 'Are you sure you want to delete this printoffice?';\n        // Show confirmation message\n        Ext.Msg.confirm(title, message, function(response) {\n            if (response == 'yes') {\n                // Remove record\n                var store = Ext.getStore('PrintOffices'),\n                    record = me.getList().getSelection()[0];\n",1497843,54,"// Back to list view\n                me.getNavView().reset(",490160,33,"},\n    setButton",1138912,33,"// Hide/Show buttons based on view\n        var add = this.getAddButton(),\n            edit = this.getEditButton(),\n            remove = this.getRemoveButton();\n        switch (component.getItemId()) {\n            case 'list':\n                add.show();\n                edit.hide();\n                remove.hide()",855709,42,"'details':\n                add.hide();\n                edit.show();\n                remove.show()",855709,42,"'form':\n                add.hide();\n                edit.hide();\n                remove.hide()",855709,33,"}\n    }\n});\n\n/*\n * File: app/controller/PrintOffsController",1871087,489,"Ext.define('MEC_App.controller.PrintOffsController",1212304,59,"control: {\n            \"list#PrintOffsList\": {\n                itemsingletap: 'onPrintOffsListItemSingletap',\n                itemtap: 'onPrintOffsListItemTap'",1369600,38,"PrintOffsListItemSingletap: function(dataview, index, target, record, e, eOpts) {\n        dataview.up('MainNavView').push({\n            xtype: record.data.ItemView,\n            title: record.data.ItemName\n        });\n    },\n    onPrintOffsListItemTap: function(dataview, index, target, record, e, eOpts) {}\n});\n\nExt.define('MEC_App.store.override.PrintOffices', {\n    override: 'MEC_App.store.PrintOffices',\n    config: {\n        data:",1006656,33,"ItemName: '????? ??????? ?????? ???????',\n                ItemView: 'BusinessIndicatorsRepor",1006784,48,"ItemName: '????? ??????? ?????? ??????????',\n                ItemView: 'BusinessIndicatorsRepor",1006784,48,"ItemName: '????? ??? ?????',\n                ItemView: 'BusinessIndicatorsRepor",1006784,48,"ItemName: '????? ??? ????? ?? ?????? ?? ??? ????? ',\n                ItemView: 'BusinessIndicatorsReport'\n            }\n        ]\n    }\n});\n\n/*\n * File: app/store/PrintOffices",1871087,489,"Ext.define('MEC_App.store.PrintOffices",1677445,51,"printoffices',\n    config: {\n        data:",1006656,33,"ItemName: 'rerum',\n                ItemView: 'ad'",1135584,46,"ItemName: 'eos',\n                ItemView: 'voluptas'",1135584,46,"ItemName: 'labore',\n                ItemView: 'repella",1006784,48,"ItemName: 'consectetur',\n                ItemView: 'nostrum'",1135584,46,"ItemName: 'minus',\n                ItemView: 'repudiandae'",1135584,46,"ItemName: 'aut',\n                ItemView: 'eos'",1135584,46,"ItemName: 'iusto',\n                ItemView: 'animi'",1135584,46,"ItemName: 'quam',\n                ItemView: 'dicta'",1135584,46,"ItemName: 'nemo',\n                ItemView: 'nesciu",1006783,49,"ItemName: 'ut',\n                ItemView: 'rerum'",1135584,46,"ItemName: 'sit',\n                ItemView: 'voluptatibus'",1135584,46,"ItemName: 'id',\n                ItemView: 'officia'",1135584,46,"ItemName: 'consequatur',\n                ItemView: 'praesentium'",1135584,46,"ItemName: 'et',\n                ItemView: 'si",1006784,48,"ItemName: 'odit',\n                ItemView: 'iure'",1135584,46,"ItemName: 'ratione',\n                ItemView: 'esse'",1135584,46,"ItemName: 'error',\n                ItemView: 'dolores'",1135584,46,"ItemName: 'mollitia',\n                ItemView: 'dolorum'",1135584,46,"ItemName: 'eligendi',\n                ItemView: 'quia'",1135584,46,"ItemName: 'et',\n                ItemView: 'sequi'",1135584,46,"ItemName: 'mollitia',\n                ItemView: 'tempore'",1135584,46,"ItemName: 'debitis',\n                ItemView: 'u",1006784,48,"ItemName: 'voluptatem',\n                ItemView: 'suscipi",1006784,48,"ItemName: 'atque',\n                ItemView: 'corporis'",1135584,46,"ItemName: 'provident',\n                ItemView: 'deseru",1006783,49,"ItemName: 'perspiciatis',\n                ItemView: 'ea'",1135584,46,"ItemName: 'quo',\n                ItemView: 'ad'",1135584,46,"ItemName: 'eos',\n                ItemView: 'exercitationem'",1135584,46,"ItemName: 'commodi',\n                ItemView: 'sequi'",1135584,46,"ItemName: 'officia',\n                ItemView: 'sint'\n            }\n        ],\n        model: 'MEC_App.model.PrintOffice',\n        storeId: 'PrintOffices',",1677517,44,"\n        }\n    }\n});",1870441,624,"\n        items:",1006656,33,"xtype: 'label',\n                html: 'label1'",1135584,46,"xtype: 'button',\n                itemId: 'mybutton',\n                text: 'GO TO Contact'\n            }\n        ]\n    }\n});\n\n/*\n * File: app/view/PublicServiceView",1871087,489,"Ext.define('MEC_App.view.PublicServic",1870989,52,"PublicServiceView',\n    config: {\n        fullscreen: true,\n        layout: 'fit',\n        scrollable: 'vertical',\n        items:",1006656,33,"xtype: 'panel',\n                layout: 'vbox',\n                items: [",995466,55,"panel',\n       ",1819613,35,"               cls: 'services-header',\n                        items",1012784,32,92880,34,"xtype: 'panel'",649344,34,"cls: 'services-header-overlay'",649344,34,"height: '100%'",649344,34,"layout: 'fit'",649344,34,"items",1012784,36,1013119,34," ",735097,33,46560,35,"cls: 'btn-services'",649344,34,"        iconAlign: 'top'",649344,34,"        iconCls: 'services'",649344,34,"        text: '??????? ??????'",93568,71,"]",98576,55,"]",789050,44,993845,34,"panel',\n                        flex: 2.3,\n                        cls: 'inner-panel',\n                        layout: 'vbox',\n                        items",1012784,32,92880,34,"xtype: 'panel'",649344,34,"layout: 'vbox'",649344,34,"items",1012784,36,1013119,34,"            xtype: 'label'",649344,34,"        cls: 'service-title'",649344,34,"        html: '????? ????????'",93568,38,649344,34,1013119,34,1032576,37,1151504,36,"'services-list-panel'",649344,34,"        layout: 'hbox'",649344,34,"        items",1012784,36,1012624,34,"            ",536815,38,46560,43,"flex:",649342,36,"                itemId: 'myServiceBtn'",649344,34,"                iconAlign: 'top'",649344,34,"                iconCls: 'icon-my-business'",649344,34,"                text: '??????? ??????'",93568,37,1150992,47,1012848,46," ",735097,33,46560,43,"flex:",649342,36,"                itemId: 'printOfficeBtn'",649344,34,"                iconAlign: 'top'",649344,34,"                iconCls: 'icon-print-office'",649344,34,"                text: '????? ??????????'",93568,37,92384,38,1144416,38,1696911,35,1151023,58,"xtype: 'panel'",649344,34,"        cls: 'services-list-panel'",649344,34,"        layout: 'hbox'",649344,34,"        items",1012784,36,1012624,34,"            ",536815,38,46560,43,"flex:",649342,36,"                itemId: 'myRequestsBtn'",649344,34,"                iconAlign: 'top'",649344,34,"                iconCls: 'icon-my-request'",649344,34,"                text: '?????? ?????????'",93568,37,1150992,47,1012848,46,"            xtype: 'spacer'",649344,34,"                flex: 1",93568,37,92384,38,1144416,38,238032,42,1013343,34,"},\n",1151011,62,"xtype: 'panel'",649344,34,"layout: 'vbox'",649344,34,"items",1012784,36,1013119,34,"            xtype: 'label'",649344,34,"        cls: 'service-title'",649344,34,"        html: '????? ????????'",93568,38,649344,34,1013119,34,1032576,37,1151504,36,"'services-list-panel'",649344,34,"        layout: 'hbox'",649344,34,"        items",1012784,36,1012624,34,"            ",536815,38,46560,43,"flex:",649342,36,"                itemId: 'complainsBtn'",649344,34,"                iconAlign: 'top'",649344,34,"                iconCls: 'icon-complain'",649344,34,"                text: '????? ?? ????'",93568,37,1150992,47,1012848,46," ",735097,33,46560,43,"flex:",649342,36,"                itemId: 'supplyServicesBtn'",649344,34,"                iconAlign: 'top'",649344,34,"                iconCls: 'icon-supply'",649344,34,"                text: '????? ???????'",93568,37,92384,38,1144416,38,238032,42,1013343,34,1151664,49,522667,32,"\n        ]\n    }\n});\n\n/*\n * File: app/view/MediaCenterView",1871087,489,"Ext.define('MEC_App.view.MediaCenter",1870990,51,"MediaCenter",1871045,42,"/view/InquiriesView",1871087,489,"Ext.define('MEC_App.view.Inquiries",1870990,51,"Inquiries",1871045,42,"/view/ContactUsView",1871087,489,"Ext.define('MEC_App.view.ContactUs",1870990,51,"ContactUsView',\n    config: {\n        items:",1006656,33,"xtype: 'button',\n                itemId: 'mybutton2',\n                text: 'MyButton2'\n            }\n        ]\n    }\n});\n\n/*\n * File: app/view/ProjectsView",1871087,489,"Ext.define('MEC_App.view.Projects",1870990,51,"Projects",1871045,42,"/view/ReportsView",1871087,489,"Ext.define('MEC_App.view.Reports",1870990,51,"Reports",1871045,42,"/view/SettingsView",1871087,489,"Ext.define('MEC_App.view.Settings",1870990,51,"Settings",1871045,42,"/view/LogivFormView",1871087,489,"Ext.define('MEC_App.view.LogivFormView', {\n    extend: Ext.form.Panel,\n    alias: 'widget.LogivForm",1871045,42,"/view/MyBusinessView",1871087,489,"Ext.define('MEC_App.view.MyBusiness",1870990,51,"MyBusiness",1871045,42,"/view/PrintOffsView",1871087,489,"Ext.define('MEC_App.view.PrintOffs",1870990,51,"PrintOffsView',\n    config: {\n        layout: 'vbox',\n        items:",1006656,33,"xtype: 'panel',\n",1819614,34,"       cls: 'print-office-header',\n                items: [",995466,55,"panel",1150564,32,"'print-office-header-overlay'",994437,34,"'100%',\n                        items",1012784,32,92880,34,"xtype: 'button'",649344,34,"cls: 'btn-print-office'",649344,34,"iconAlign: 'top'",649344,34,"iconCls: 'print-office'",649344,34,"text: '????? ??????????'",98576,55,"]",18384,39,"]",1135584,46,"xtype: 'panel',\n                flex: 2.2,\n                items: [",995466,55,"list'",994437,34,"'100%',\n                        itemId: 'PrintOffsList',\n                        itemTpl",1012784,32,"'<div>{ItemName}</div>'\n    ",1483881,43,"    store: 'PrintOffices'",18384,39,"]\n            }\n        ]\n    }\n});\n\n/*\n * File: app/view/MyRequestsView",1871087,489,"Ext.define('MEC_App.view.MyRequests",1870990,51,"MYRequests",1871045,42,"/view/ComplaintsView",1871087,489,"Ext.define('MEC_App.view.ComplaintsView', {\n    extend: Ext.form.Panel,\n    alias: 'widget.Complaints",1871045,42,"/view/SupplyServiceView",1871087,489,"Ext.define('MEC_App.view.SupplyServic",1870989,52,"SupplyServic",1871044,43,"/view/MinistryPublicationView",1871087,489,"Ext.define('MEC_App.view.MinistryPublication",1870990,51,"MinistryPublication",1871045,42,"/view/MinistryInThePressView",1871087,489,"Ext.define('MEC_App.view.MinistryInThePress",1870990,51,"MinistryInThePress",1871045,42,"/view/EconomyNewsView",1871087,489,"Ext.define('MEC_App.view.EconomyNews",1870990,51,"EconomyNews",1871045,42,"/view/TradeNameAvailabilityView",1871087,489,"Ext.define('MEC_App.view.TradeNameAvailability",1870990,51,"TradeNameAvailability",1871045,42,"/view/RecallsView",1871087,489,"Ext.define('MEC_App.view.Recalls",1870990,51,"Recalls",1871045,42,"/view/ConsumerEducationView",1871087,489,"Ext.define('MEC_App.view.ConsumerEducation",1870990,51,"ConsumerEducation",1871045,42,"/view/InvestorEducationView",1871087,489,"Ext.define('MEC_App.view.InvestorEducation",1870990,51,"InvestorEducation",1871045,42,"/view/ViolationsView",1871087,489,"Ext.define('MEC_App.view.Violations",1870990,51,"Violations",1871045,42,"/view/AboutMinistryView",1871087,489,"Ext.define('MEC_App.view.AboutMinistry",1870990,36,"config: {}\n});\n\n/*\n * File: app/view/MinistryBranchesView",1871087,489,"Ext.define('MEC_App.view.MinistryBranches",1870990,51,"MinistryBranches",1871045,42,"/view/FeedbackFormView",1871087,489,"Ext.define('MEC_App.view.FeedbackFormView', {\n    extend: Ext.form.Panel,\n    alias: 'widget.FeedbackForm",1871045,42,"/view/MinistryEmployeesView",1871087,489,"Ext.define('MEC_App.view.MinistryEmployees",1870990,51,"MinistryEmployees",1871045,42,"/view/MicroEconomicReport",1871087,489,"Ext.define('MEC_App.view.MicroEconomicReport",1870994,47,"MicroEconomicReport",1871049,38,"/view/BusinessIndicatorsReport",1871087,489,"Ext.define('MEC_App.view.BusinessIndicatorsReport",1870994,47,"BusinessIndicatorsReport",1871049,38,"/view/ConsumerIndicatorsView",1871087,489,"Ext.define('MEC_App.view.ConsumerIndicators",1870990,51,"ConsumerIndicators",1871045,42,"/view/PricingView",1871087,489,"Ext.define('MEC_App.view.Pricing",1870990,51,"Pricing",1871045,42,"/view/WhereToShopView",1871087,489,"Ext.define('MEC_App.view.WhereToShop",1870990,51,"WhereToShop",1871045,42,"/view/MonthlyFruitView",1871087,489,"Ext.define('MEC_App.view.MonthlyFruit",1870990,51,"MonthlyFruit",1871045,42,"/view/TrademarkReportView",1871087,489,"Ext.define('MEC_App.view.TrademarkReport",1870990,51,"TrademarkReport",1871045,42,"/view/SideMenuView",1871087,489,"Ext.define('MEC_App.view.SideMenu",1870990,51,"SideMenu",1871045,42,"/view/SideMenu",1871087,489,"Ext.define('MEC_App.view.SideMenu', {\n    extend: Ext.Menu,\n    alias: 'widget.SideMenu',\n    config: {\n        items:",1006656,33,"xtype: 'button',\n                text: 'MyButton11'\n            }\n        ]\n    }\n});\n\n/*\n * File: app/view/PrintOffices",1871087,489,"Ext.define('MEC_App.view.PrintOffices', {\n    extend: Ext.navigation.View,\n    alias: 'widget.printoffices',\n    config: {\n        layout: {\n            type: 'card',\n            animation: 'slide'\n        },\n        items:",1006656,33,"xtype: 'list',\n                title: 'PrintOffices',\n                itemId: 'list',\n                itemTpl: [\n                    '<div>',\n                    '<div><label>Item Name: </label><span>{ItemName}</span></div>',\n                    '<div><label>Item View: </label><span>{ItemView}</span></div>',\n                    '</div>'\n",1483885,35,"store: 'PrintOffices'\n            }\n        ],\n        navigationBar: {\n",536696,32,"       items",1735632,42,"xtype: 'button',\n                    itemId: 'addButton',\n                    iconCls: 'add'\n",789055,35,"{\n    ",536815,38,"               hidden: true,\n                    itemId: 'editButton',\n                    iconCls: 'compose'\n",789055,35,"{\n    ",536815,38,"               hidden: true,\n                    itemId: 'removeButton',\n                    iconCls: 'delete'",1736188,42,"\n    }\n});\n\n/*\n * File: app/view/PrintOfficeDetails",1871087,489,"Ext.define('MEC_App.view.PrintOfficeDetails",1870994,47,"printofficedetails',\n    config: {\n        itemId: 'details',\n        padding: 10,\n        tpl: [\n            '<div>',\n            '<div><label>Item Name: </label><span>{ItemName}</span></div>',\n            '<div><label>Item View: </label><span>{ItemView}</span></div>',\n            '</div>'\n        ]\n    }\n});\n\n/*\n * File: app/view/PrintOfficeForm",1871087,489,"Ext.define('MEC_App.view.PrintOfficeForm', {\n    extend: Ext.form.Panel,\n    alias: 'widget.printofficeform',\n    config: {\n        itemId: 'form',\n        items:",1006656,33,"xtype: 'fieldset',\n                items: [",995466,55,"textfield',\n                        label: 'Item Name',\n                        name: 'ItemName'",789050,44,993845,34,"textfield',\n                        label: 'Item View',\n                        name: 'ItemView'",18384,39,"]",1135584,46,"xtype: 'button',\n                itemId: 'saveButton',\n                margin: 10,\n                ui: 'action',\n                text: 'Save'\n            }\n        ]\n    ",1871065,589,"models: [\n        'PrintOffice'\n    ],\n    stores: [\n        null,\n        'PrintOffices'\n    ],",1871649,32,",\n        'PublicServiceView',\n        'MediaCenterView',\n        'InquiriesView',\n        'ContactUsView',\n        'ProjectsView',\n        'ReportsView',\n        'SettingsView',\n        'LogivFormView',\n        'MyBusinessView',\n        'PrintOffsView',\n        'MyRequestsView',\n        'ComplaintsView',\n        'SupplyServiceView',\n        'MinistryPublicationView',\n        'MinistryInThePressView',\n        'EconomyNewsView',\n        'TradeNameAvailabilityView',\n        'RecallsView',\n        'ConsumerEducationView',\n        'InvestorEducationView',\n        'ViolationsView',\n        'AboutMinistryView',\n        'MinistryBranchesView',\n        'FeedbackFormView',\n        'MinistryEmployeesView',\n        'MicroEconomicReport',\n        'BusinessIndicatorsReport',\n        'ConsumerIndicatorsView',\n        'PricingView',\n        'WhereToShopView',\n        'MonthlyFruitView',\n        'TrademarkReportView',\n        'MainNavView',\n        'SideMenuView',\n        'SideMenu',\n        'PrintOffices',\n        'PrintOfficeDetails',\n        'PrintOfficeForm'\n    ],\n    controllers: [\n        'HomeController',\n        'PublicServicesController',\n        'PrintOffices',\n        'PrintOffsController",1871680,88,"MainNav",1871772,115]